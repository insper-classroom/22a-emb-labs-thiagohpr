
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006adc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406adc  00406adc  00016adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406ae4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000002fc  204009d0  004074b4  000209d0  2**2
                  ALLOC
  4 .stack        00002004  20400ccc  004077b0  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd0  004097b4  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001725e  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000356c  00000000  00000000  00037cb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000054be  00000000  00000000  0003b221  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000888  00000000  00000000  000406df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000008b8  00000000  00000000  00040f67  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00020fb4  00000000  00000000  0004181f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000e443  00000000  00000000  000627d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0008ff5e  00000000  00000000  00070c16  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001ea4  00000000  00000000  00100b74  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d0 2c 40 20 9d 0f 40 00 99 0f 40 00 99 0f 40 00     .,@ ..@...@...@.
  400010:	99 0f 40 00 99 0f 40 00 99 0f 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	99 0f 40 00 99 0f 40 00 00 00 00 00 99 0f 40 00     ..@...@.......@.
  40003c:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  40004c:	35 13 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     5.@...@...@...@.
  40005c:	99 0f 40 00 99 0f 40 00 00 00 00 00 c1 0d 40 00     ..@...@.......@.
  40006c:	d5 0d 40 00 e9 0d 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  40007c:	99 0f 40 00 fd 0d 40 00 11 0e 40 00 99 0f 40 00     ..@...@...@...@.
  40008c:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  40009c:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  4000ac:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  4000bc:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  4000cc:	99 0f 40 00 00 00 00 00 99 0f 40 00 00 00 00 00     ..@.......@.....
  4000dc:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  4000ec:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  4000fc:	99 0f 40 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ..@...@...@...@.
  40010c:	99 0f 40 00 99 0f 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 99 0f 40 00 99 0f 40 00 99 0f 40 00     ......@...@...@.
  40012c:	99 0f 40 00 99 0f 40 00 00 00 00 00 99 0f 40 00     ..@...@.......@.
  40013c:	99 0f 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406ae4 	.word	0x00406ae4

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406ae4 	.word	0x00406ae4
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406ae4 	.word	0x00406ae4
  4001a8:	00000000 	.word	0x00000000

004001ac <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4001ac:	4b03      	ldr	r3, [pc, #12]	; (4001bc <rtt_init+0x10>)
  4001ae:	681b      	ldr	r3, [r3, #0]
  4001b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4001b4:	4319      	orrs	r1, r3
  4001b6:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr
  4001bc:	204009ec 	.word	0x204009ec

004001c0 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4001c0:	b941      	cbnz	r1, 4001d4 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4001c2:	4a09      	ldr	r2, [pc, #36]	; (4001e8 <rtt_sel_source+0x28>)
  4001c4:	6813      	ldr	r3, [r2, #0]
  4001c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  4001ca:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001cc:	6802      	ldr	r2, [r0, #0]
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6003      	str	r3, [r0, #0]
  4001d2:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4001d4:	4a04      	ldr	r2, [pc, #16]	; (4001e8 <rtt_sel_source+0x28>)
  4001d6:	6813      	ldr	r3, [r2, #0]
  4001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4001dc:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001de:	6802      	ldr	r2, [r0, #0]
  4001e0:	4313      	orrs	r3, r2
  4001e2:	6003      	str	r3, [r0, #0]
  4001e4:	4770      	bx	lr
  4001e6:	bf00      	nop
  4001e8:	204009ec 	.word	0x204009ec

004001ec <rtt_enable_interrupt>:
 */
void rtt_enable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp;

	temp = p_rtt->RTT_MR;
  4001ec:	6802      	ldr	r2, [r0, #0]
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4001ee:	4b03      	ldr	r3, [pc, #12]	; (4001fc <rtt_enable_interrupt+0x10>)
  4001f0:	681b      	ldr	r3, [r3, #0]
  4001f2:	4319      	orrs	r1, r3
  4001f4:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  4001f6:	6001      	str	r1, [r0, #0]
  4001f8:	4770      	bx	lr
  4001fa:	bf00      	nop
  4001fc:	204009ec 	.word	0x204009ec

00400200 <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  400200:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  400202:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  400206:	4b02      	ldr	r3, [pc, #8]	; (400210 <rtt_disable_interrupt+0x10>)
  400208:	681b      	ldr	r3, [r3, #0]
  40020a:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  40020c:	6001      	str	r1, [r0, #0]
  40020e:	4770      	bx	lr
  400210:	204009ec 	.word	0x204009ec

00400214 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400214:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400216:	6883      	ldr	r3, [r0, #8]
  400218:	429a      	cmp	r2, r3
  40021a:	d003      	beq.n	400224 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  40021c:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40021e:	6883      	ldr	r3, [r0, #8]
  400220:	4293      	cmp	r3, r2
  400222:	d1fb      	bne.n	40021c <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400224:	4618      	mov	r0, r3
  400226:	4770      	bx	lr

00400228 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400228:	68c0      	ldr	r0, [r0, #12]
}
  40022a:	4770      	bx	lr

0040022c <rtt_write_alarm_time>:
 * \param ul_alarm_time Alarm time,Alarm time = ALMV + 1.
 *
 * \retval 0 Configuration is done.
 */
uint32_t rtt_write_alarm_time(Rtt *p_rtt, uint32_t ul_alarm_time)
{
  40022c:	b570      	push	{r4, r5, r6, lr}
  40022e:	4606      	mov	r6, r0
  400230:	460d      	mov	r5, r1
	uint32_t flag;

	flag = p_rtt->RTT_MR & RTT_MR_ALMIEN;
  400232:	6804      	ldr	r4, [r0, #0]
  400234:	f404 3480 	and.w	r4, r4, #65536	; 0x10000

	rtt_disable_interrupt(RTT, RTT_MR_ALMIEN);
  400238:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40023c:	4809      	ldr	r0, [pc, #36]	; (400264 <rtt_write_alarm_time+0x38>)
  40023e:	4b0a      	ldr	r3, [pc, #40]	; (400268 <rtt_write_alarm_time+0x3c>)
  400240:	4798      	blx	r3

	/**
	 * Alarm time = ALMV + 1,If the incoming parameter 
	 * is 0, the ALMV is set to 0xFFFFFFFF.
	*/
	if(ul_alarm_time == 0) {
  400242:	b92d      	cbnz	r5, 400250 <rtt_write_alarm_time+0x24>
		p_rtt->RTT_AR = 0xFFFFFFFF;
  400244:	f04f 33ff 	mov.w	r3, #4294967295
  400248:	6073      	str	r3, [r6, #4]
	}
	else {
		p_rtt->RTT_AR = ul_alarm_time - 1;
	}

	if (flag) {
  40024a:	b924      	cbnz	r4, 400256 <rtt_write_alarm_time+0x2a>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
	}

	return 0;
}
  40024c:	2000      	movs	r0, #0
  40024e:	bd70      	pop	{r4, r5, r6, pc}
		p_rtt->RTT_AR = ul_alarm_time - 1;
  400250:	3d01      	subs	r5, #1
  400252:	6075      	str	r5, [r6, #4]
  400254:	e7f9      	b.n	40024a <rtt_write_alarm_time+0x1e>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  400256:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40025a:	4802      	ldr	r0, [pc, #8]	; (400264 <rtt_write_alarm_time+0x38>)
  40025c:	4b03      	ldr	r3, [pc, #12]	; (40026c <rtt_write_alarm_time+0x40>)
  40025e:	4798      	blx	r3
  400260:	e7f4      	b.n	40024c <rtt_write_alarm_time+0x20>
  400262:	bf00      	nop
  400264:	400e1830 	.word	0x400e1830
  400268:	00400201 	.word	0x00400201
  40026c:	004001ed 	.word	0x004001ed

00400270 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400270:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400272:	4b07      	ldr	r3, [pc, #28]	; (400290 <spi_enable_clock+0x20>)
  400274:	4298      	cmp	r0, r3
  400276:	d003      	beq.n	400280 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400278:	4b06      	ldr	r3, [pc, #24]	; (400294 <spi_enable_clock+0x24>)
  40027a:	4298      	cmp	r0, r3
  40027c:	d004      	beq.n	400288 <spi_enable_clock+0x18>
  40027e:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400280:	2015      	movs	r0, #21
  400282:	4b05      	ldr	r3, [pc, #20]	; (400298 <spi_enable_clock+0x28>)
  400284:	4798      	blx	r3
  400286:	bd08      	pop	{r3, pc}
  400288:	202a      	movs	r0, #42	; 0x2a
  40028a:	4b03      	ldr	r3, [pc, #12]	; (400298 <spi_enable_clock+0x28>)
  40028c:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40028e:	e7f6      	b.n	40027e <spi_enable_clock+0xe>
  400290:	40008000 	.word	0x40008000
  400294:	40058000 	.word	0x40058000
  400298:	00400f45 	.word	0x00400f45

0040029c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  40029c:	6843      	ldr	r3, [r0, #4]
  40029e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4002a2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4002a4:	6843      	ldr	r3, [r0, #4]
  4002a6:	0409      	lsls	r1, r1, #16
  4002a8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4002ac:	4319      	orrs	r1, r3
  4002ae:	6041      	str	r1, [r0, #4]
  4002b0:	4770      	bx	lr

004002b2 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4002b2:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4002b4:	f643 2499 	movw	r4, #15001	; 0x3a99
  4002b8:	6905      	ldr	r5, [r0, #16]
  4002ba:	f015 0f02 	tst.w	r5, #2
  4002be:	d103      	bne.n	4002c8 <spi_write+0x16>
		if (!timeout--) {
  4002c0:	3c01      	subs	r4, #1
  4002c2:	d1f9      	bne.n	4002b8 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4002c4:	2001      	movs	r0, #1
  4002c6:	e00c      	b.n	4002e2 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4002c8:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4002ca:	f014 0f02 	tst.w	r4, #2
  4002ce:	d006      	beq.n	4002de <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4002d0:	0412      	lsls	r2, r2, #16
  4002d2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4002d6:	4311      	orrs	r1, r2
		if (uc_last) {
  4002d8:	b10b      	cbz	r3, 4002de <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4002da:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4002de:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4002e0:	2000      	movs	r0, #0
}
  4002e2:	bc30      	pop	{r4, r5}
  4002e4:	4770      	bx	lr

004002e6 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4002e6:	b932      	cbnz	r2, 4002f6 <spi_set_clock_polarity+0x10>
  4002e8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4002ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ee:	f023 0301 	bic.w	r3, r3, #1
  4002f2:	6303      	str	r3, [r0, #48]	; 0x30
  4002f4:	4770      	bx	lr
  4002f6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002fa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fc:	f043 0301 	orr.w	r3, r3, #1
  400300:	6303      	str	r3, [r0, #48]	; 0x30
  400302:	4770      	bx	lr

00400304 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400304:	b932      	cbnz	r2, 400314 <spi_set_clock_phase+0x10>
  400306:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  40030a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40030c:	f023 0302 	bic.w	r3, r3, #2
  400310:	6303      	str	r3, [r0, #48]	; 0x30
  400312:	4770      	bx	lr
  400314:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400318:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40031a:	f043 0302 	orr.w	r3, r3, #2
  40031e:	6303      	str	r3, [r0, #48]	; 0x30
  400320:	4770      	bx	lr

00400322 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400322:	2a04      	cmp	r2, #4
  400324:	d003      	beq.n	40032e <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400326:	b16a      	cbz	r2, 400344 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400328:	2a08      	cmp	r2, #8
  40032a:	d016      	beq.n	40035a <spi_configure_cs_behavior+0x38>
  40032c:	4770      	bx	lr
  40032e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400332:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400334:	f023 0308 	bic.w	r3, r3, #8
  400338:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40033a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40033c:	f043 0304 	orr.w	r3, r3, #4
  400340:	6303      	str	r3, [r0, #48]	; 0x30
  400342:	4770      	bx	lr
  400344:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400348:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40034a:	f023 0308 	bic.w	r3, r3, #8
  40034e:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400350:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400352:	f023 0304 	bic.w	r3, r3, #4
  400356:	6303      	str	r3, [r0, #48]	; 0x30
  400358:	4770      	bx	lr
  40035a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40035e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400360:	f043 0308 	orr.w	r3, r3, #8
  400364:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400366:	e7e1      	b.n	40032c <spi_configure_cs_behavior+0xa>

00400368 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400368:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40036c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40036e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400372:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400374:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400376:	431a      	orrs	r2, r3
  400378:	630a      	str	r2, [r1, #48]	; 0x30
  40037a:	4770      	bx	lr

0040037c <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40037c:	1e43      	subs	r3, r0, #1
  40037e:	4419      	add	r1, r3
  400380:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400384:	1e43      	subs	r3, r0, #1
  400386:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400388:	bf94      	ite	ls
  40038a:	b200      	sxthls	r0, r0
		return -1;
  40038c:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400390:	4770      	bx	lr

00400392 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400392:	b17a      	cbz	r2, 4003b4 <spi_set_baudrate_div+0x22>
{
  400394:	b410      	push	{r4}
  400396:	4614      	mov	r4, r2
  400398:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40039c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40039e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4003a2:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4003a4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4003a6:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4003aa:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4003ac:	2000      	movs	r0, #0
}
  4003ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  4003b2:	4770      	bx	lr
        return -1;
  4003b4:	f04f 30ff 	mov.w	r0, #4294967295
  4003b8:	4770      	bx	lr
	...

004003bc <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4003bc:	4b01      	ldr	r3, [pc, #4]	; (4003c4 <gfx_mono_set_framebuffer+0x8>)
  4003be:	6018      	str	r0, [r3, #0]
  4003c0:	4770      	bx	lr
  4003c2:	bf00      	nop
  4003c4:	204009f0 	.word	0x204009f0

004003c8 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4003c8:	4b02      	ldr	r3, [pc, #8]	; (4003d4 <gfx_mono_framebuffer_put_byte+0xc>)
  4003ca:	681b      	ldr	r3, [r3, #0]
  4003cc:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4003d0:	5442      	strb	r2, [r0, r1]
  4003d2:	4770      	bx	lr
  4003d4:	204009f0 	.word	0x204009f0

004003d8 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4003d8:	4b02      	ldr	r3, [pc, #8]	; (4003e4 <gfx_mono_framebuffer_get_byte+0xc>)
  4003da:	681b      	ldr	r3, [r3, #0]
  4003dc:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4003e0:	5c40      	ldrb	r0, [r0, r1]
  4003e2:	4770      	bx	lr
  4003e4:	204009f0 	.word	0x204009f0

004003e8 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4003e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4003ec:	1884      	adds	r4, r0, r2
  4003ee:	2c80      	cmp	r4, #128	; 0x80
  4003f0:	dd02      	ble.n	4003f8 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4003f2:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4003f6:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4003f8:	b322      	cbz	r2, 400444 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4003fa:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4003fc:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  400400:	2601      	movs	r6, #1
  400402:	fa06 f101 	lsl.w	r1, r6, r1
  400406:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400408:	2b01      	cmp	r3, #1
  40040a:	d01d      	beq.n	400448 <gfx_mono_generic_draw_horizontal_line+0x60>
  40040c:	2b00      	cmp	r3, #0
  40040e:	d035      	beq.n	40047c <gfx_mono_generic_draw_horizontal_line+0x94>
  400410:	2b02      	cmp	r3, #2
  400412:	d117      	bne.n	400444 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400414:	3801      	subs	r0, #1
  400416:	b2c7      	uxtb	r7, r0
  400418:	19d4      	adds	r4, r2, r7
  40041a:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  40041c:	f8df a090 	ldr.w	sl, [pc, #144]	; 4004b0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400420:	f04f 0900 	mov.w	r9, #0
  400424:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4004b4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400428:	4621      	mov	r1, r4
  40042a:	4628      	mov	r0, r5
  40042c:	47d0      	blx	sl
			temp ^= pixelmask;
  40042e:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400432:	464b      	mov	r3, r9
  400434:	b2d2      	uxtb	r2, r2
  400436:	4621      	mov	r1, r4
  400438:	4628      	mov	r0, r5
  40043a:	47c0      	blx	r8
  40043c:	3c01      	subs	r4, #1
  40043e:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400440:	42bc      	cmp	r4, r7
  400442:	d1f1      	bne.n	400428 <gfx_mono_generic_draw_horizontal_line+0x40>
  400444:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400448:	3801      	subs	r0, #1
  40044a:	b2c7      	uxtb	r7, r0
  40044c:	19d4      	adds	r4, r2, r7
  40044e:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400450:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4004b0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400454:	f04f 0900 	mov.w	r9, #0
  400458:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4004b4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40045c:	4621      	mov	r1, r4
  40045e:	4628      	mov	r0, r5
  400460:	47d0      	blx	sl
			temp |= pixelmask;
  400462:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400466:	464b      	mov	r3, r9
  400468:	b2d2      	uxtb	r2, r2
  40046a:	4621      	mov	r1, r4
  40046c:	4628      	mov	r0, r5
  40046e:	47c0      	blx	r8
  400470:	3c01      	subs	r4, #1
  400472:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400474:	42bc      	cmp	r4, r7
  400476:	d1f1      	bne.n	40045c <gfx_mono_generic_draw_horizontal_line+0x74>
  400478:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40047c:	3801      	subs	r0, #1
  40047e:	b2c7      	uxtb	r7, r0
  400480:	19d4      	adds	r4, r2, r7
  400482:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400484:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4004b0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400488:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40048a:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4004b4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40048e:	4621      	mov	r1, r4
  400490:	4628      	mov	r0, r5
  400492:	47c0      	blx	r8
			temp &= ~pixelmask;
  400494:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400498:	2300      	movs	r3, #0
  40049a:	b2d2      	uxtb	r2, r2
  40049c:	4621      	mov	r1, r4
  40049e:	4628      	mov	r0, r5
  4004a0:	47c8      	blx	r9
  4004a2:	3c01      	subs	r4, #1
  4004a4:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4004a6:	42bc      	cmp	r4, r7
  4004a8:	d1f1      	bne.n	40048e <gfx_mono_generic_draw_horizontal_line+0xa6>
  4004aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4004ae:	bf00      	nop
  4004b0:	004006e9 	.word	0x004006e9
  4004b4:	004005e5 	.word	0x004005e5

004004b8 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4004b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4004bc:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4004c0:	b18b      	cbz	r3, 4004e6 <gfx_mono_generic_draw_filled_rect+0x2e>
  4004c2:	461c      	mov	r4, r3
  4004c4:	4690      	mov	r8, r2
  4004c6:	4606      	mov	r6, r0
  4004c8:	1e4d      	subs	r5, r1, #1
  4004ca:	b2ed      	uxtb	r5, r5
  4004cc:	442c      	add	r4, r5
  4004ce:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4004d0:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4004ec <gfx_mono_generic_draw_filled_rect+0x34>
  4004d4:	463b      	mov	r3, r7
  4004d6:	4642      	mov	r2, r8
  4004d8:	4621      	mov	r1, r4
  4004da:	4630      	mov	r0, r6
  4004dc:	47c8      	blx	r9
  4004de:	3c01      	subs	r4, #1
  4004e0:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4004e2:	42ac      	cmp	r4, r5
  4004e4:	d1f6      	bne.n	4004d4 <gfx_mono_generic_draw_filled_rect+0x1c>
  4004e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4004ea:	bf00      	nop
  4004ec:	004003e9 	.word	0x004003e9

004004f0 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4004f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4004f4:	b083      	sub	sp, #12
  4004f6:	4604      	mov	r4, r0
  4004f8:	4688      	mov	r8, r1
  4004fa:	4691      	mov	r9, r2
  4004fc:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4004fe:	7a5b      	ldrb	r3, [r3, #9]
  400500:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400504:	2100      	movs	r1, #0
  400506:	9100      	str	r1, [sp, #0]
  400508:	4649      	mov	r1, r9
  40050a:	4640      	mov	r0, r8
  40050c:	4d21      	ldr	r5, [pc, #132]	; (400594 <gfx_mono_draw_char+0xa4>)
  40050e:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400510:	f89b 3000 	ldrb.w	r3, [fp]
  400514:	b113      	cbz	r3, 40051c <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400516:	b003      	add	sp, #12
  400518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  40051c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400520:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400522:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400526:	bf18      	it	ne
  400528:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40052a:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40052e:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400532:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400534:	fb17 f70a 	smulbb	r7, r7, sl
  400538:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  40053c:	f8db 3004 	ldr.w	r3, [fp, #4]
  400540:	fa13 f787 	uxtah	r7, r3, r7
  400544:	e01f      	b.n	400586 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400546:	0064      	lsls	r4, r4, #1
  400548:	b2e4      	uxtb	r4, r4
  40054a:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  40054c:	b2eb      	uxtb	r3, r5
  40054e:	429e      	cmp	r6, r3
  400550:	d910      	bls.n	400574 <gfx_mono_draw_char+0x84>
  400552:	b2eb      	uxtb	r3, r5
  400554:	eb08 0003 	add.w	r0, r8, r3
  400558:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40055a:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40055e:	bf08      	it	eq
  400560:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400564:	f014 0f80 	tst.w	r4, #128	; 0x80
  400568:	d0ed      	beq.n	400546 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40056a:	2201      	movs	r2, #1
  40056c:	4649      	mov	r1, r9
  40056e:	4b0a      	ldr	r3, [pc, #40]	; (400598 <gfx_mono_draw_char+0xa8>)
  400570:	4798      	blx	r3
  400572:	e7e8      	b.n	400546 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400574:	f109 0901 	add.w	r9, r9, #1
  400578:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  40057c:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400580:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400584:	d0c7      	beq.n	400516 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  400586:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40058a:	2e00      	cmp	r6, #0
  40058c:	d0f2      	beq.n	400574 <gfx_mono_draw_char+0x84>
  40058e:	2500      	movs	r5, #0
  400590:	462c      	mov	r4, r5
  400592:	e7de      	b.n	400552 <gfx_mono_draw_char+0x62>
  400594:	004004b9 	.word	0x004004b9
  400598:	00400685 	.word	0x00400685

0040059c <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  40059c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4005a0:	4604      	mov	r4, r0
  4005a2:	4690      	mov	r8, r2
  4005a4:	461d      	mov	r5, r3
  4005a6:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4005a8:	4f0d      	ldr	r7, [pc, #52]	; (4005e0 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4005aa:	460e      	mov	r6, r1
  4005ac:	e008      	b.n	4005c0 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4005ae:	7a6a      	ldrb	r2, [r5, #9]
  4005b0:	3201      	adds	r2, #1
  4005b2:	4442      	add	r2, r8
  4005b4:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4005b8:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4005ba:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4005be:	b16b      	cbz	r3, 4005dc <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4005c0:	7820      	ldrb	r0, [r4, #0]
  4005c2:	280a      	cmp	r0, #10
  4005c4:	d0f3      	beq.n	4005ae <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4005c6:	280d      	cmp	r0, #13
  4005c8:	d0f7      	beq.n	4005ba <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4005ca:	462b      	mov	r3, r5
  4005cc:	4642      	mov	r2, r8
  4005ce:	4649      	mov	r1, r9
  4005d0:	47b8      	blx	r7
			x += font->width;
  4005d2:	7a2b      	ldrb	r3, [r5, #8]
  4005d4:	4499      	add	r9, r3
  4005d6:	fa5f f989 	uxtb.w	r9, r9
  4005da:	e7ee      	b.n	4005ba <gfx_mono_draw_string+0x1e>
}
  4005dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005e0:	004004f1 	.word	0x004004f1

004005e4 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4005e4:	b570      	push	{r4, r5, r6, lr}
  4005e6:	4604      	mov	r4, r0
  4005e8:	460d      	mov	r5, r1
  4005ea:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4005ec:	b91b      	cbnz	r3, 4005f6 <gfx_mono_ssd1306_put_byte+0x12>
  4005ee:	4b0d      	ldr	r3, [pc, #52]	; (400624 <gfx_mono_ssd1306_put_byte+0x40>)
  4005f0:	4798      	blx	r3
  4005f2:	42b0      	cmp	r0, r6
  4005f4:	d015      	beq.n	400622 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4005f6:	4632      	mov	r2, r6
  4005f8:	4629      	mov	r1, r5
  4005fa:	4620      	mov	r0, r4
  4005fc:	4b0a      	ldr	r3, [pc, #40]	; (400628 <gfx_mono_ssd1306_put_byte+0x44>)
  4005fe:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  400600:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400604:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400608:	4c08      	ldr	r4, [pc, #32]	; (40062c <gfx_mono_ssd1306_put_byte+0x48>)
  40060a:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  40060c:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400610:	f040 0010 	orr.w	r0, r0, #16
  400614:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400616:	f005 000f 	and.w	r0, r5, #15
  40061a:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  40061c:	4630      	mov	r0, r6
  40061e:	4b04      	ldr	r3, [pc, #16]	; (400630 <gfx_mono_ssd1306_put_byte+0x4c>)
  400620:	4798      	blx	r3
  400622:	bd70      	pop	{r4, r5, r6, pc}
  400624:	004003d9 	.word	0x004003d9
  400628:	004003c9 	.word	0x004003c9
  40062c:	004006f5 	.word	0x004006f5
  400630:	00400915 	.word	0x00400915

00400634 <gfx_mono_ssd1306_init>:
{
  400634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400638:	480d      	ldr	r0, [pc, #52]	; (400670 <gfx_mono_ssd1306_init+0x3c>)
  40063a:	4b0e      	ldr	r3, [pc, #56]	; (400674 <gfx_mono_ssd1306_init+0x40>)
  40063c:	4798      	blx	r3
	ssd1306_init();
  40063e:	4b0e      	ldr	r3, [pc, #56]	; (400678 <gfx_mono_ssd1306_init+0x44>)
  400640:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400642:	2040      	movs	r0, #64	; 0x40
  400644:	4b0d      	ldr	r3, [pc, #52]	; (40067c <gfx_mono_ssd1306_init+0x48>)
  400646:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400648:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40064a:	f04f 0801 	mov.w	r8, #1
  40064e:	462f      	mov	r7, r5
  400650:	4e0b      	ldr	r6, [pc, #44]	; (400680 <gfx_mono_ssd1306_init+0x4c>)
{
  400652:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400654:	4643      	mov	r3, r8
  400656:	463a      	mov	r2, r7
  400658:	b2e1      	uxtb	r1, r4
  40065a:	4628      	mov	r0, r5
  40065c:	47b0      	blx	r6
  40065e:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400660:	2c80      	cmp	r4, #128	; 0x80
  400662:	d1f7      	bne.n	400654 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400664:	3501      	adds	r5, #1
  400666:	b2ed      	uxtb	r5, r5
  400668:	2d04      	cmp	r5, #4
  40066a:	d1f2      	bne.n	400652 <gfx_mono_ssd1306_init+0x1e>
  40066c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400670:	204009f4 	.word	0x204009f4
  400674:	004003bd 	.word	0x004003bd
  400678:	00400735 	.word	0x00400735
  40067c:	004006f5 	.word	0x004006f5
  400680:	004005e5 	.word	0x004005e5

00400684 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400684:	09c3      	lsrs	r3, r0, #7
  400686:	d12a      	bne.n	4006de <gfx_mono_ssd1306_draw_pixel+0x5a>
  400688:	291f      	cmp	r1, #31
  40068a:	d828      	bhi.n	4006de <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  40068c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400690:	4614      	mov	r4, r2
  400692:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400694:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  400696:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40069a:	2201      	movs	r2, #1
  40069c:	fa02 f701 	lsl.w	r7, r2, r1
  4006a0:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4006a4:	4601      	mov	r1, r0
  4006a6:	4630      	mov	r0, r6
  4006a8:	4b0d      	ldr	r3, [pc, #52]	; (4006e0 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4006aa:	4798      	blx	r3
  4006ac:	4602      	mov	r2, r0
	switch (color) {
  4006ae:	2c01      	cmp	r4, #1
  4006b0:	d009      	beq.n	4006c6 <gfx_mono_ssd1306_draw_pixel+0x42>
  4006b2:	b164      	cbz	r4, 4006ce <gfx_mono_ssd1306_draw_pixel+0x4a>
  4006b4:	2c02      	cmp	r4, #2
  4006b6:	d00e      	beq.n	4006d6 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4006b8:	2300      	movs	r3, #0
  4006ba:	4629      	mov	r1, r5
  4006bc:	4630      	mov	r0, r6
  4006be:	4c09      	ldr	r4, [pc, #36]	; (4006e4 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4006c0:	47a0      	blx	r4
  4006c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4006c6:	ea48 0200 	orr.w	r2, r8, r0
  4006ca:	b2d2      	uxtb	r2, r2
		break;
  4006cc:	e7f4      	b.n	4006b8 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4006ce:	ea20 0207 	bic.w	r2, r0, r7
  4006d2:	b2d2      	uxtb	r2, r2
		break;
  4006d4:	e7f0      	b.n	4006b8 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4006d6:	ea88 0200 	eor.w	r2, r8, r0
  4006da:	b2d2      	uxtb	r2, r2
		break;
  4006dc:	e7ec      	b.n	4006b8 <gfx_mono_ssd1306_draw_pixel+0x34>
  4006de:	4770      	bx	lr
  4006e0:	004003d9 	.word	0x004003d9
  4006e4:	004005e5 	.word	0x004005e5

004006e8 <gfx_mono_ssd1306_get_byte>:
{
  4006e8:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4006ea:	4b01      	ldr	r3, [pc, #4]	; (4006f0 <gfx_mono_ssd1306_get_byte+0x8>)
  4006ec:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4006ee:	bd08      	pop	{r3, pc}
  4006f0:	004003d9 	.word	0x004003d9

004006f4 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4006f4:	b538      	push	{r3, r4, r5, lr}
  4006f6:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4006f8:	2208      	movs	r2, #8
  4006fa:	4b09      	ldr	r3, [pc, #36]	; (400720 <ssd1306_write_command+0x2c>)
  4006fc:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4006fe:	4c09      	ldr	r4, [pc, #36]	; (400724 <ssd1306_write_command+0x30>)
  400700:	2101      	movs	r1, #1
  400702:	4620      	mov	r0, r4
  400704:	4b08      	ldr	r3, [pc, #32]	; (400728 <ssd1306_write_command+0x34>)
  400706:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400708:	2301      	movs	r3, #1
  40070a:	461a      	mov	r2, r3
  40070c:	4629      	mov	r1, r5
  40070e:	4620      	mov	r0, r4
  400710:	4c06      	ldr	r4, [pc, #24]	; (40072c <ssd1306_write_command+0x38>)
  400712:	47a0      	blx	r4
	delay_us(10);
  400714:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400718:	4b05      	ldr	r3, [pc, #20]	; (400730 <ssd1306_write_command+0x3c>)
  40071a:	4798      	blx	r3
  40071c:	bd38      	pop	{r3, r4, r5, pc}
  40071e:	bf00      	nop
  400720:	400e1000 	.word	0x400e1000
  400724:	40008000 	.word	0x40008000
  400728:	0040029d 	.word	0x0040029d
  40072c:	004002b3 	.word	0x004002b3
  400730:	20400001 	.word	0x20400001

00400734 <ssd1306_init>:
{
  400734:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400738:	4d66      	ldr	r5, [pc, #408]	; (4008d4 <ssd1306_init+0x1a0>)
  40073a:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40073e:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400740:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400744:	4b64      	ldr	r3, [pc, #400]	; (4008d8 <ssd1306_init+0x1a4>)
  400746:	2708      	movs	r7, #8
  400748:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40074a:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40074e:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400750:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400754:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400756:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400758:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40075c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  40075e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400762:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400764:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  400766:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40076a:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  40076c:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40076e:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400772:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400774:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400776:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40077a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40077c:	f022 0208 	bic.w	r2, r2, #8
  400780:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400782:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400784:	f022 0208 	bic.w	r2, r2, #8
  400788:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  40078a:	601f      	str	r7, [r3, #0]
  40078c:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40078e:	631f      	str	r7, [r3, #48]	; 0x30
  400790:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400792:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400910 <ssd1306_init+0x1dc>
  400796:	2300      	movs	r3, #0
  400798:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  40079c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007a0:	4640      	mov	r0, r8
  4007a2:	4c4e      	ldr	r4, [pc, #312]	; (4008dc <ssd1306_init+0x1a8>)
  4007a4:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4007a6:	2300      	movs	r3, #0
  4007a8:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007ac:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007b0:	4640      	mov	r0, r8
  4007b2:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4007b4:	2300      	movs	r3, #0
  4007b6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4007ba:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007be:	4640      	mov	r0, r8
  4007c0:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4007c2:	2300      	movs	r3, #0
  4007c4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4007c8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007cc:	4640      	mov	r0, r8
  4007ce:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4007d0:	2300      	movs	r3, #0
  4007d2:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007d6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007da:	4640      	mov	r0, r8
  4007dc:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4007de:	2300      	movs	r3, #0
  4007e0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4007e4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007e8:	4640      	mov	r0, r8
  4007ea:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4007ec:	4c3c      	ldr	r4, [pc, #240]	; (4008e0 <ssd1306_init+0x1ac>)
  4007ee:	f04f 0902 	mov.w	r9, #2
  4007f2:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4007f6:	f04f 0880 	mov.w	r8, #128	; 0x80
  4007fa:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4007fe:	6863      	ldr	r3, [r4, #4]
  400800:	f043 0301 	orr.w	r3, r3, #1
  400804:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400806:	463a      	mov	r2, r7
  400808:	2101      	movs	r1, #1
  40080a:	4620      	mov	r0, r4
  40080c:	4b35      	ldr	r3, [pc, #212]	; (4008e4 <ssd1306_init+0x1b0>)
  40080e:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400810:	2200      	movs	r2, #0
  400812:	2101      	movs	r1, #1
  400814:	4620      	mov	r0, r4
  400816:	4b34      	ldr	r3, [pc, #208]	; (4008e8 <ssd1306_init+0x1b4>)
  400818:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  40081a:	2200      	movs	r2, #0
  40081c:	2101      	movs	r1, #1
  40081e:	4620      	mov	r0, r4
  400820:	4b32      	ldr	r3, [pc, #200]	; (4008ec <ssd1306_init+0x1b8>)
  400822:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400824:	6863      	ldr	r3, [r4, #4]
  400826:	f023 0302 	bic.w	r3, r3, #2
  40082a:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  40082c:	2200      	movs	r2, #0
  40082e:	2101      	movs	r1, #1
  400830:	4620      	mov	r0, r4
  400832:	4b2f      	ldr	r3, [pc, #188]	; (4008f0 <ssd1306_init+0x1bc>)
  400834:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400836:	6863      	ldr	r3, [r4, #4]
  400838:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40083c:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40083e:	6863      	ldr	r3, [r4, #4]
  400840:	f043 0310 	orr.w	r3, r3, #16
  400844:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  400846:	492b      	ldr	r1, [pc, #172]	; (4008f4 <ssd1306_init+0x1c0>)
  400848:	482b      	ldr	r0, [pc, #172]	; (4008f8 <ssd1306_init+0x1c4>)
  40084a:	4b2c      	ldr	r3, [pc, #176]	; (4008fc <ssd1306_init+0x1c8>)
  40084c:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  40084e:	b2c2      	uxtb	r2, r0
  400850:	2101      	movs	r1, #1
  400852:	4620      	mov	r0, r4
  400854:	4b2a      	ldr	r3, [pc, #168]	; (400900 <ssd1306_init+0x1cc>)
  400856:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400858:	4620      	mov	r0, r4
  40085a:	4b2a      	ldr	r3, [pc, #168]	; (400904 <ssd1306_init+0x1d0>)
  40085c:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40085e:	2301      	movs	r3, #1
  400860:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400862:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400864:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400868:	4c27      	ldr	r4, [pc, #156]	; (400908 <ssd1306_init+0x1d4>)
  40086a:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40086c:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  40086e:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400872:	47a0      	blx	r4
  400874:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400876:	20a8      	movs	r0, #168	; 0xa8
  400878:	4c24      	ldr	r4, [pc, #144]	; (40090c <ssd1306_init+0x1d8>)
  40087a:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  40087c:	201f      	movs	r0, #31
  40087e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400880:	20d3      	movs	r0, #211	; 0xd3
  400882:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400884:	2000      	movs	r0, #0
  400886:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400888:	2040      	movs	r0, #64	; 0x40
  40088a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  40088c:	20a1      	movs	r0, #161	; 0xa1
  40088e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400890:	20c8      	movs	r0, #200	; 0xc8
  400892:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400894:	20da      	movs	r0, #218	; 0xda
  400896:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400898:	4648      	mov	r0, r9
  40089a:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  40089c:	2081      	movs	r0, #129	; 0x81
  40089e:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4008a0:	208f      	movs	r0, #143	; 0x8f
  4008a2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4008a4:	20a4      	movs	r0, #164	; 0xa4
  4008a6:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4008a8:	20a6      	movs	r0, #166	; 0xa6
  4008aa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4008ac:	20d5      	movs	r0, #213	; 0xd5
  4008ae:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  4008b0:	4640      	mov	r0, r8
  4008b2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  4008b4:	208d      	movs	r0, #141	; 0x8d
  4008b6:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  4008b8:	2014      	movs	r0, #20
  4008ba:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4008bc:	20db      	movs	r0, #219	; 0xdb
  4008be:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4008c0:	2040      	movs	r0, #64	; 0x40
  4008c2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  4008c4:	20d9      	movs	r0, #217	; 0xd9
  4008c6:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  4008c8:	20f1      	movs	r0, #241	; 0xf1
  4008ca:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  4008cc:	20af      	movs	r0, #175	; 0xaf
  4008ce:	47a0      	blx	r4
  4008d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4008d4:	400e1200 	.word	0x400e1200
  4008d8:	400e1000 	.word	0x400e1000
  4008dc:	00400c31 	.word	0x00400c31
  4008e0:	40008000 	.word	0x40008000
  4008e4:	00400323 	.word	0x00400323
  4008e8:	004002e7 	.word	0x004002e7
  4008ec:	00400305 	.word	0x00400305
  4008f0:	00400369 	.word	0x00400369
  4008f4:	08f0d180 	.word	0x08f0d180
  4008f8:	001e8480 	.word	0x001e8480
  4008fc:	0040037d 	.word	0x0040037d
  400900:	00400393 	.word	0x00400393
  400904:	00400271 	.word	0x00400271
  400908:	20400001 	.word	0x20400001
  40090c:	004006f5 	.word	0x004006f5
  400910:	400e1400 	.word	0x400e1400

00400914 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400914:	b538      	push	{r3, r4, r5, lr}
  400916:	4605      	mov	r5, r0
  400918:	2208      	movs	r2, #8
  40091a:	4b09      	ldr	r3, [pc, #36]	; (400940 <ssd1306_write_data+0x2c>)
  40091c:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40091e:	4c09      	ldr	r4, [pc, #36]	; (400944 <ssd1306_write_data+0x30>)
  400920:	2101      	movs	r1, #1
  400922:	4620      	mov	r0, r4
  400924:	4b08      	ldr	r3, [pc, #32]	; (400948 <ssd1306_write_data+0x34>)
  400926:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400928:	2301      	movs	r3, #1
  40092a:	461a      	mov	r2, r3
  40092c:	4629      	mov	r1, r5
  40092e:	4620      	mov	r0, r4
  400930:	4c06      	ldr	r4, [pc, #24]	; (40094c <ssd1306_write_data+0x38>)
  400932:	47a0      	blx	r4
	delay_us(10);
  400934:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400938:	4b05      	ldr	r3, [pc, #20]	; (400950 <ssd1306_write_data+0x3c>)
  40093a:	4798      	blx	r3
  40093c:	bd38      	pop	{r3, r4, r5, pc}
  40093e:	bf00      	nop
  400940:	400e1000 	.word	0x400e1000
  400944:	40008000 	.word	0x40008000
  400948:	0040029d 	.word	0x0040029d
  40094c:	004002b3 	.word	0x004002b3
  400950:	20400001 	.word	0x20400001

00400954 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400954:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400956:	4810      	ldr	r0, [pc, #64]	; (400998 <sysclk_init+0x44>)
  400958:	4b10      	ldr	r3, [pc, #64]	; (40099c <sysclk_init+0x48>)
  40095a:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  40095c:	213e      	movs	r1, #62	; 0x3e
  40095e:	2000      	movs	r0, #0
  400960:	4b0f      	ldr	r3, [pc, #60]	; (4009a0 <sysclk_init+0x4c>)
  400962:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400964:	4c0f      	ldr	r4, [pc, #60]	; (4009a4 <sysclk_init+0x50>)
  400966:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400968:	2800      	cmp	r0, #0
  40096a:	d0fc      	beq.n	400966 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  40096c:	4b0e      	ldr	r3, [pc, #56]	; (4009a8 <sysclk_init+0x54>)
  40096e:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400970:	4a0e      	ldr	r2, [pc, #56]	; (4009ac <sysclk_init+0x58>)
  400972:	4b0f      	ldr	r3, [pc, #60]	; (4009b0 <sysclk_init+0x5c>)
  400974:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400976:	4c0f      	ldr	r4, [pc, #60]	; (4009b4 <sysclk_init+0x60>)
  400978:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40097a:	2800      	cmp	r0, #0
  40097c:	d0fc      	beq.n	400978 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  40097e:	2002      	movs	r0, #2
  400980:	4b0d      	ldr	r3, [pc, #52]	; (4009b8 <sysclk_init+0x64>)
  400982:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400984:	2000      	movs	r0, #0
  400986:	4b0d      	ldr	r3, [pc, #52]	; (4009bc <sysclk_init+0x68>)
  400988:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40098a:	4b0d      	ldr	r3, [pc, #52]	; (4009c0 <sysclk_init+0x6c>)
  40098c:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40098e:	4802      	ldr	r0, [pc, #8]	; (400998 <sysclk_init+0x44>)
  400990:	4b02      	ldr	r3, [pc, #8]	; (40099c <sysclk_init+0x48>)
  400992:	4798      	blx	r3
  400994:	bd10      	pop	{r4, pc}
  400996:	bf00      	nop
  400998:	11e1a300 	.word	0x11e1a300
  40099c:	00401171 	.word	0x00401171
  4009a0:	00400ec1 	.word	0x00400ec1
  4009a4:	00400f15 	.word	0x00400f15
  4009a8:	00400f25 	.word	0x00400f25
  4009ac:	20183f01 	.word	0x20183f01
  4009b0:	400e0600 	.word	0x400e0600
  4009b4:	00400f35 	.word	0x00400f35
  4009b8:	00400e25 	.word	0x00400e25
  4009bc:	00400e5d 	.word	0x00400e5d
  4009c0:	00401065 	.word	0x00401065

004009c4 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4009c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4009c6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4009ca:	4b48      	ldr	r3, [pc, #288]	; (400aec <board_init+0x128>)
  4009cc:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  4009ce:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009d2:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  4009d6:	4b46      	ldr	r3, [pc, #280]	; (400af0 <board_init+0x12c>)
  4009d8:	2200      	movs	r2, #0
  4009da:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  4009de:	695a      	ldr	r2, [r3, #20]
  4009e0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4009e4:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  4009e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009ea:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  4009ee:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  4009f2:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  4009f6:	f007 0007 	and.w	r0, r7, #7
  4009fa:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  4009fc:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400a00:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400a04:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400a08:	f3bf 8f4f 	dsb	sy
  400a0c:	f04f 34ff 	mov.w	r4, #4294967295
  400a10:	fa04 fc00 	lsl.w	ip, r4, r0
  400a14:	fa06 f000 	lsl.w	r0, r6, r0
  400a18:	fa04 f40e 	lsl.w	r4, r4, lr
  400a1c:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400a20:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400a22:	463a      	mov	r2, r7
  400a24:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400a26:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400a2a:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400a2e:	3a01      	subs	r2, #1
  400a30:	4423      	add	r3, r4
  400a32:	f1b2 3fff 	cmp.w	r2, #4294967295
  400a36:	d1f6      	bne.n	400a26 <board_init+0x62>
        } while(sets--);
  400a38:	3e01      	subs	r6, #1
  400a3a:	4460      	add	r0, ip
  400a3c:	f1b6 3fff 	cmp.w	r6, #4294967295
  400a40:	d1ef      	bne.n	400a22 <board_init+0x5e>
  400a42:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400a46:	4b2a      	ldr	r3, [pc, #168]	; (400af0 <board_init+0x12c>)
  400a48:	695a      	ldr	r2, [r3, #20]
  400a4a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400a4e:	615a      	str	r2, [r3, #20]
  400a50:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a54:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a58:	4a26      	ldr	r2, [pc, #152]	; (400af4 <board_init+0x130>)
  400a5a:	4927      	ldr	r1, [pc, #156]	; (400af8 <board_init+0x134>)
  400a5c:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a5e:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400a62:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400a64:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a68:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400a6c:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400a70:	f022 0201 	bic.w	r2, r2, #1
  400a74:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400a78:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400a7c:	f022 0201 	bic.w	r2, r2, #1
  400a80:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400a84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a88:	f3bf 8f6f 	isb	sy
  400a8c:	200a      	movs	r0, #10
  400a8e:	4c1b      	ldr	r4, [pc, #108]	; (400afc <board_init+0x138>)
  400a90:	47a0      	blx	r4
  400a92:	200b      	movs	r0, #11
  400a94:	47a0      	blx	r4
  400a96:	200c      	movs	r0, #12
  400a98:	47a0      	blx	r4
  400a9a:	2010      	movs	r0, #16
  400a9c:	47a0      	blx	r4
  400a9e:	2011      	movs	r0, #17
  400aa0:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400aa2:	4b17      	ldr	r3, [pc, #92]	; (400b00 <board_init+0x13c>)
  400aa4:	f44f 7280 	mov.w	r2, #256	; 0x100
  400aa8:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400aaa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400aae:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400ab0:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400ab4:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400ab8:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400aba:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400abe:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400ac0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ac4:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400ac6:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400ac8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400acc:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400ace:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400ad2:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ad4:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400ad6:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400ada:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400adc:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400ae0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400ae4:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400ae8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400aea:	bf00      	nop
  400aec:	400e1850 	.word	0x400e1850
  400af0:	e000ed00 	.word	0xe000ed00
  400af4:	400e0c00 	.word	0x400e0c00
  400af8:	5a00080c 	.word	0x5a00080c
  400afc:	00400f45 	.word	0x00400f45
  400b00:	400e1200 	.word	0x400e1200

00400b04 <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  400b04:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  400b08:	0053      	lsls	r3, r2, #1
  400b0a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b0e:	fbb2 f2f3 	udiv	r2, r2, r3
  400b12:	3a01      	subs	r2, #1
  400b14:	f3c2 020d 	ubfx	r2, r2, #0, #14
  400b18:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  400b1c:	4770      	bx	lr

00400b1e <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400b1e:	6301      	str	r1, [r0, #48]	; 0x30
  400b20:	4770      	bx	lr

00400b22 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400b22:	6341      	str	r1, [r0, #52]	; 0x34
  400b24:	4770      	bx	lr

00400b26 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400b26:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400b2a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b2e:	d105      	bne.n	400b3c <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400b30:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400b32:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400b34:	bf14      	ite	ne
  400b36:	2001      	movne	r0, #1
  400b38:	2000      	moveq	r0, #0
  400b3a:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400b3c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400b3e:	e7f8      	b.n	400b32 <pio_get+0xc>

00400b40 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400b40:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400b42:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400b46:	d03a      	beq.n	400bbe <pio_set_peripheral+0x7e>
  400b48:	d813      	bhi.n	400b72 <pio_set_peripheral+0x32>
  400b4a:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400b4e:	d025      	beq.n	400b9c <pio_set_peripheral+0x5c>
  400b50:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400b54:	d10a      	bne.n	400b6c <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b56:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b58:	4313      	orrs	r3, r2
  400b5a:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400b5c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400b5e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400b60:	400b      	ands	r3, r1
  400b62:	ea23 0302 	bic.w	r3, r3, r2
  400b66:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400b68:	6042      	str	r2, [r0, #4]
  400b6a:	4770      	bx	lr
	switch (ul_type) {
  400b6c:	2900      	cmp	r1, #0
  400b6e:	d1fb      	bne.n	400b68 <pio_set_peripheral+0x28>
  400b70:	4770      	bx	lr
  400b72:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400b76:	d021      	beq.n	400bbc <pio_set_peripheral+0x7c>
  400b78:	d809      	bhi.n	400b8e <pio_set_peripheral+0x4e>
  400b7a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400b7e:	d1f3      	bne.n	400b68 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b80:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b82:	4313      	orrs	r3, r2
  400b84:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b86:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400b88:	4313      	orrs	r3, r2
  400b8a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400b8c:	e7ec      	b.n	400b68 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400b8e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b92:	d013      	beq.n	400bbc <pio_set_peripheral+0x7c>
  400b94:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400b98:	d010      	beq.n	400bbc <pio_set_peripheral+0x7c>
  400b9a:	e7e5      	b.n	400b68 <pio_set_peripheral+0x28>
{
  400b9c:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b9e:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400ba0:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400ba2:	43d3      	mvns	r3, r2
  400ba4:	4021      	ands	r1, r4
  400ba6:	461c      	mov	r4, r3
  400ba8:	4019      	ands	r1, r3
  400baa:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400bac:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400bae:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400bb0:	400b      	ands	r3, r1
  400bb2:	4023      	ands	r3, r4
  400bb4:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400bb6:	6042      	str	r2, [r0, #4]
}
  400bb8:	f85d 4b04 	ldr.w	r4, [sp], #4
  400bbc:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bbe:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400bc0:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400bc2:	400b      	ands	r3, r1
  400bc4:	ea23 0302 	bic.w	r3, r3, r2
  400bc8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400bca:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400bcc:	4313      	orrs	r3, r2
  400bce:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400bd0:	e7ca      	b.n	400b68 <pio_set_peripheral+0x28>

00400bd2 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400bd2:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400bd4:	f012 0f01 	tst.w	r2, #1
  400bd8:	d10d      	bne.n	400bf6 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400bda:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400bdc:	f012 0f0a 	tst.w	r2, #10
  400be0:	d00b      	beq.n	400bfa <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400be2:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400be4:	f012 0f02 	tst.w	r2, #2
  400be8:	d109      	bne.n	400bfe <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400bea:	f012 0f08 	tst.w	r2, #8
  400bee:	d008      	beq.n	400c02 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400bf0:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400bf4:	e005      	b.n	400c02 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400bf6:	6641      	str	r1, [r0, #100]	; 0x64
  400bf8:	e7f0      	b.n	400bdc <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400bfa:	6241      	str	r1, [r0, #36]	; 0x24
  400bfc:	e7f2      	b.n	400be4 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400bfe:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400c02:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400c04:	6001      	str	r1, [r0, #0]
  400c06:	4770      	bx	lr

00400c08 <pio_set_output>:
{
  400c08:	b410      	push	{r4}
  400c0a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400c0c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c0e:	b94c      	cbnz	r4, 400c24 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400c10:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400c12:	b14b      	cbz	r3, 400c28 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400c14:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400c16:	b94a      	cbnz	r2, 400c2c <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400c18:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400c1a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400c1c:	6001      	str	r1, [r0, #0]
}
  400c1e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c22:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400c24:	6641      	str	r1, [r0, #100]	; 0x64
  400c26:	e7f4      	b.n	400c12 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400c28:	6541      	str	r1, [r0, #84]	; 0x54
  400c2a:	e7f4      	b.n	400c16 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400c2c:	6301      	str	r1, [r0, #48]	; 0x30
  400c2e:	e7f4      	b.n	400c1a <pio_set_output+0x12>

00400c30 <pio_configure>:
{
  400c30:	b570      	push	{r4, r5, r6, lr}
  400c32:	b082      	sub	sp, #8
  400c34:	4605      	mov	r5, r0
  400c36:	4616      	mov	r6, r2
  400c38:	461c      	mov	r4, r3
	switch (ul_type) {
  400c3a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c3e:	d014      	beq.n	400c6a <pio_configure+0x3a>
  400c40:	d90a      	bls.n	400c58 <pio_configure+0x28>
  400c42:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c46:	d024      	beq.n	400c92 <pio_configure+0x62>
  400c48:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c4c:	d021      	beq.n	400c92 <pio_configure+0x62>
  400c4e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c52:	d017      	beq.n	400c84 <pio_configure+0x54>
		return 0;
  400c54:	2000      	movs	r0, #0
  400c56:	e01a      	b.n	400c8e <pio_configure+0x5e>
	switch (ul_type) {
  400c58:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c5c:	d005      	beq.n	400c6a <pio_configure+0x3a>
  400c5e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c62:	d002      	beq.n	400c6a <pio_configure+0x3a>
  400c64:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c68:	d1f4      	bne.n	400c54 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400c6a:	4632      	mov	r2, r6
  400c6c:	4628      	mov	r0, r5
  400c6e:	4b11      	ldr	r3, [pc, #68]	; (400cb4 <pio_configure+0x84>)
  400c70:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c72:	f014 0f01 	tst.w	r4, #1
  400c76:	d102      	bne.n	400c7e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400c78:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400c7a:	2001      	movs	r0, #1
  400c7c:	e007      	b.n	400c8e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400c7e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400c80:	2001      	movs	r0, #1
  400c82:	e004      	b.n	400c8e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400c84:	461a      	mov	r2, r3
  400c86:	4631      	mov	r1, r6
  400c88:	4b0b      	ldr	r3, [pc, #44]	; (400cb8 <pio_configure+0x88>)
  400c8a:	4798      	blx	r3
	return 1;
  400c8c:	2001      	movs	r0, #1
}
  400c8e:	b002      	add	sp, #8
  400c90:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400c92:	f004 0301 	and.w	r3, r4, #1
  400c96:	9300      	str	r3, [sp, #0]
  400c98:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400c9c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400ca0:	bf14      	ite	ne
  400ca2:	2200      	movne	r2, #0
  400ca4:	2201      	moveq	r2, #1
  400ca6:	4631      	mov	r1, r6
  400ca8:	4628      	mov	r0, r5
  400caa:	4c04      	ldr	r4, [pc, #16]	; (400cbc <pio_configure+0x8c>)
  400cac:	47a0      	blx	r4
	return 1;
  400cae:	2001      	movs	r0, #1
		break;
  400cb0:	e7ed      	b.n	400c8e <pio_configure+0x5e>
  400cb2:	bf00      	nop
  400cb4:	00400b41 	.word	0x00400b41
  400cb8:	00400bd3 	.word	0x00400bd3
  400cbc:	00400c09 	.word	0x00400c09

00400cc0 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400cc0:	f012 0f10 	tst.w	r2, #16
  400cc4:	d012      	beq.n	400cec <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400cc6:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400cca:	f012 0f20 	tst.w	r2, #32
  400cce:	d007      	beq.n	400ce0 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400cd0:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400cd4:	f012 0f40 	tst.w	r2, #64	; 0x40
  400cd8:	d005      	beq.n	400ce6 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400cda:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400cde:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400ce0:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400ce4:	e7f6      	b.n	400cd4 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400ce6:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400cea:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400cec:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400cf0:	4770      	bx	lr

00400cf2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400cf2:	6401      	str	r1, [r0, #64]	; 0x40
  400cf4:	4770      	bx	lr

00400cf6 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400cf6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400cf8:	4770      	bx	lr

00400cfa <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400cfa:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400cfc:	4770      	bx	lr
	...

00400d00 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400d04:	4604      	mov	r4, r0
  400d06:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400d08:	4b0e      	ldr	r3, [pc, #56]	; (400d44 <pio_handler_process+0x44>)
  400d0a:	4798      	blx	r3
  400d0c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400d0e:	4620      	mov	r0, r4
  400d10:	4b0d      	ldr	r3, [pc, #52]	; (400d48 <pio_handler_process+0x48>)
  400d12:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400d14:	4005      	ands	r5, r0
  400d16:	d013      	beq.n	400d40 <pio_handler_process+0x40>
  400d18:	4c0c      	ldr	r4, [pc, #48]	; (400d4c <pio_handler_process+0x4c>)
  400d1a:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400d1e:	e003      	b.n	400d28 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400d20:	42b4      	cmp	r4, r6
  400d22:	d00d      	beq.n	400d40 <pio_handler_process+0x40>
  400d24:	3410      	adds	r4, #16
		while (status != 0) {
  400d26:	b15d      	cbz	r5, 400d40 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400d28:	6820      	ldr	r0, [r4, #0]
  400d2a:	4540      	cmp	r0, r8
  400d2c:	d1f8      	bne.n	400d20 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400d2e:	6861      	ldr	r1, [r4, #4]
  400d30:	4229      	tst	r1, r5
  400d32:	d0f5      	beq.n	400d20 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400d34:	68e3      	ldr	r3, [r4, #12]
  400d36:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400d38:	6863      	ldr	r3, [r4, #4]
  400d3a:	ea25 0503 	bic.w	r5, r5, r3
  400d3e:	e7ef      	b.n	400d20 <pio_handler_process+0x20>
  400d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d44:	00400cf7 	.word	0x00400cf7
  400d48:	00400cfb 	.word	0x00400cfb
  400d4c:	20400bf4 	.word	0x20400bf4

00400d50 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400d50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400d52:	4c18      	ldr	r4, [pc, #96]	; (400db4 <pio_handler_set+0x64>)
  400d54:	6826      	ldr	r6, [r4, #0]
  400d56:	2e06      	cmp	r6, #6
  400d58:	d82a      	bhi.n	400db0 <pio_handler_set+0x60>
  400d5a:	f04f 0c00 	mov.w	ip, #0
  400d5e:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d60:	4f15      	ldr	r7, [pc, #84]	; (400db8 <pio_handler_set+0x68>)
  400d62:	e004      	b.n	400d6e <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400d64:	3401      	adds	r4, #1
  400d66:	b2e4      	uxtb	r4, r4
  400d68:	46a4      	mov	ip, r4
  400d6a:	42a6      	cmp	r6, r4
  400d6c:	d309      	bcc.n	400d82 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400d6e:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d70:	0125      	lsls	r5, r4, #4
  400d72:	597d      	ldr	r5, [r7, r5]
  400d74:	428d      	cmp	r5, r1
  400d76:	d1f5      	bne.n	400d64 <pio_handler_set+0x14>
  400d78:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400d7c:	686d      	ldr	r5, [r5, #4]
  400d7e:	4295      	cmp	r5, r2
  400d80:	d1f0      	bne.n	400d64 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400d82:	4d0d      	ldr	r5, [pc, #52]	; (400db8 <pio_handler_set+0x68>)
  400d84:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400d88:	eb05 040e 	add.w	r4, r5, lr
  400d8c:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400d90:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400d92:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400d94:	9906      	ldr	r1, [sp, #24]
  400d96:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400d98:	3601      	adds	r6, #1
  400d9a:	4566      	cmp	r6, ip
  400d9c:	d005      	beq.n	400daa <pio_handler_set+0x5a>
  400d9e:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400da0:	461a      	mov	r2, r3
  400da2:	4b06      	ldr	r3, [pc, #24]	; (400dbc <pio_handler_set+0x6c>)
  400da4:	4798      	blx	r3

	return 0;
  400da6:	2000      	movs	r0, #0
  400da8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400daa:	4902      	ldr	r1, [pc, #8]	; (400db4 <pio_handler_set+0x64>)
  400dac:	600e      	str	r6, [r1, #0]
  400dae:	e7f6      	b.n	400d9e <pio_handler_set+0x4e>
		return 1;
  400db0:	2001      	movs	r0, #1
}
  400db2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400db4:	20400c64 	.word	0x20400c64
  400db8:	20400bf4 	.word	0x20400bf4
  400dbc:	00400cc1 	.word	0x00400cc1

00400dc0 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400dc0:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400dc2:	210a      	movs	r1, #10
  400dc4:	4801      	ldr	r0, [pc, #4]	; (400dcc <PIOA_Handler+0xc>)
  400dc6:	4b02      	ldr	r3, [pc, #8]	; (400dd0 <PIOA_Handler+0x10>)
  400dc8:	4798      	blx	r3
  400dca:	bd08      	pop	{r3, pc}
  400dcc:	400e0e00 	.word	0x400e0e00
  400dd0:	00400d01 	.word	0x00400d01

00400dd4 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400dd4:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400dd6:	210b      	movs	r1, #11
  400dd8:	4801      	ldr	r0, [pc, #4]	; (400de0 <PIOB_Handler+0xc>)
  400dda:	4b02      	ldr	r3, [pc, #8]	; (400de4 <PIOB_Handler+0x10>)
  400ddc:	4798      	blx	r3
  400dde:	bd08      	pop	{r3, pc}
  400de0:	400e1000 	.word	0x400e1000
  400de4:	00400d01 	.word	0x00400d01

00400de8 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400de8:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400dea:	210c      	movs	r1, #12
  400dec:	4801      	ldr	r0, [pc, #4]	; (400df4 <PIOC_Handler+0xc>)
  400dee:	4b02      	ldr	r3, [pc, #8]	; (400df8 <PIOC_Handler+0x10>)
  400df0:	4798      	blx	r3
  400df2:	bd08      	pop	{r3, pc}
  400df4:	400e1200 	.word	0x400e1200
  400df8:	00400d01 	.word	0x00400d01

00400dfc <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400dfc:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400dfe:	2110      	movs	r1, #16
  400e00:	4801      	ldr	r0, [pc, #4]	; (400e08 <PIOD_Handler+0xc>)
  400e02:	4b02      	ldr	r3, [pc, #8]	; (400e0c <PIOD_Handler+0x10>)
  400e04:	4798      	blx	r3
  400e06:	bd08      	pop	{r3, pc}
  400e08:	400e1400 	.word	0x400e1400
  400e0c:	00400d01 	.word	0x00400d01

00400e10 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400e10:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400e12:	2111      	movs	r1, #17
  400e14:	4801      	ldr	r0, [pc, #4]	; (400e1c <PIOE_Handler+0xc>)
  400e16:	4b02      	ldr	r3, [pc, #8]	; (400e20 <PIOE_Handler+0x10>)
  400e18:	4798      	blx	r3
  400e1a:	bd08      	pop	{r3, pc}
  400e1c:	400e1600 	.word	0x400e1600
  400e20:	00400d01 	.word	0x00400d01

00400e24 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400e24:	2803      	cmp	r0, #3
  400e26:	d011      	beq.n	400e4c <pmc_mck_set_division+0x28>
  400e28:	2804      	cmp	r0, #4
  400e2a:	d012      	beq.n	400e52 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400e2c:	2802      	cmp	r0, #2
  400e2e:	bf0c      	ite	eq
  400e30:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400e34:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400e36:	4a08      	ldr	r2, [pc, #32]	; (400e58 <pmc_mck_set_division+0x34>)
  400e38:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e3a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400e3e:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400e40:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400e42:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e44:	f013 0f08 	tst.w	r3, #8
  400e48:	d0fb      	beq.n	400e42 <pmc_mck_set_division+0x1e>
}
  400e4a:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400e4c:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400e50:	e7f1      	b.n	400e36 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400e52:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400e56:	e7ee      	b.n	400e36 <pmc_mck_set_division+0x12>
  400e58:	400e0600 	.word	0x400e0600

00400e5c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400e5c:	4a17      	ldr	r2, [pc, #92]	; (400ebc <pmc_switch_mck_to_pllack+0x60>)
  400e5e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e60:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400e64:	4318      	orrs	r0, r3
  400e66:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e68:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e6a:	f013 0f08 	tst.w	r3, #8
  400e6e:	d10a      	bne.n	400e86 <pmc_switch_mck_to_pllack+0x2a>
  400e70:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400e74:	4911      	ldr	r1, [pc, #68]	; (400ebc <pmc_switch_mck_to_pllack+0x60>)
  400e76:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e78:	f012 0f08 	tst.w	r2, #8
  400e7c:	d103      	bne.n	400e86 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e7e:	3b01      	subs	r3, #1
  400e80:	d1f9      	bne.n	400e76 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400e82:	2001      	movs	r0, #1
  400e84:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400e86:	4a0d      	ldr	r2, [pc, #52]	; (400ebc <pmc_switch_mck_to_pllack+0x60>)
  400e88:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e8a:	f023 0303 	bic.w	r3, r3, #3
  400e8e:	f043 0302 	orr.w	r3, r3, #2
  400e92:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e94:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e96:	f013 0f08 	tst.w	r3, #8
  400e9a:	d10a      	bne.n	400eb2 <pmc_switch_mck_to_pllack+0x56>
  400e9c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400ea0:	4906      	ldr	r1, [pc, #24]	; (400ebc <pmc_switch_mck_to_pllack+0x60>)
  400ea2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400ea4:	f012 0f08 	tst.w	r2, #8
  400ea8:	d105      	bne.n	400eb6 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400eaa:	3b01      	subs	r3, #1
  400eac:	d1f9      	bne.n	400ea2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400eae:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400eb0:	4770      	bx	lr
	return 0;
  400eb2:	2000      	movs	r0, #0
  400eb4:	4770      	bx	lr
  400eb6:	2000      	movs	r0, #0
  400eb8:	4770      	bx	lr
  400eba:	bf00      	nop
  400ebc:	400e0600 	.word	0x400e0600

00400ec0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400ec0:	b9a0      	cbnz	r0, 400eec <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400ec2:	480e      	ldr	r0, [pc, #56]	; (400efc <pmc_switch_mainck_to_xtal+0x3c>)
  400ec4:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400ec6:	0209      	lsls	r1, r1, #8
  400ec8:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400eca:	4a0d      	ldr	r2, [pc, #52]	; (400f00 <pmc_switch_mainck_to_xtal+0x40>)
  400ecc:	401a      	ands	r2, r3
  400ece:	4b0d      	ldr	r3, [pc, #52]	; (400f04 <pmc_switch_mainck_to_xtal+0x44>)
  400ed0:	4313      	orrs	r3, r2
  400ed2:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400ed4:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400ed6:	4602      	mov	r2, r0
  400ed8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400eda:	f013 0f01 	tst.w	r3, #1
  400ede:	d0fb      	beq.n	400ed8 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400ee0:	4a06      	ldr	r2, [pc, #24]	; (400efc <pmc_switch_mainck_to_xtal+0x3c>)
  400ee2:	6a11      	ldr	r1, [r2, #32]
  400ee4:	4b08      	ldr	r3, [pc, #32]	; (400f08 <pmc_switch_mainck_to_xtal+0x48>)
  400ee6:	430b      	orrs	r3, r1
  400ee8:	6213      	str	r3, [r2, #32]
  400eea:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400eec:	4903      	ldr	r1, [pc, #12]	; (400efc <pmc_switch_mainck_to_xtal+0x3c>)
  400eee:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400ef0:	4a06      	ldr	r2, [pc, #24]	; (400f0c <pmc_switch_mainck_to_xtal+0x4c>)
  400ef2:	401a      	ands	r2, r3
  400ef4:	4b06      	ldr	r3, [pc, #24]	; (400f10 <pmc_switch_mainck_to_xtal+0x50>)
  400ef6:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ef8:	620b      	str	r3, [r1, #32]
  400efa:	4770      	bx	lr
  400efc:	400e0600 	.word	0x400e0600
  400f00:	ffc8fffc 	.word	0xffc8fffc
  400f04:	00370001 	.word	0x00370001
  400f08:	01370000 	.word	0x01370000
  400f0c:	fec8fffc 	.word	0xfec8fffc
  400f10:	01370002 	.word	0x01370002

00400f14 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400f14:	4b02      	ldr	r3, [pc, #8]	; (400f20 <pmc_osc_is_ready_mainck+0xc>)
  400f16:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f18:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400f1c:	4770      	bx	lr
  400f1e:	bf00      	nop
  400f20:	400e0600 	.word	0x400e0600

00400f24 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400f24:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400f28:	4b01      	ldr	r3, [pc, #4]	; (400f30 <pmc_disable_pllack+0xc>)
  400f2a:	629a      	str	r2, [r3, #40]	; 0x28
  400f2c:	4770      	bx	lr
  400f2e:	bf00      	nop
  400f30:	400e0600 	.word	0x400e0600

00400f34 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400f34:	4b02      	ldr	r3, [pc, #8]	; (400f40 <pmc_is_locked_pllack+0xc>)
  400f36:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f38:	f000 0002 	and.w	r0, r0, #2
  400f3c:	4770      	bx	lr
  400f3e:	bf00      	nop
  400f40:	400e0600 	.word	0x400e0600

00400f44 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400f44:	283f      	cmp	r0, #63	; 0x3f
  400f46:	d81e      	bhi.n	400f86 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400f48:	281f      	cmp	r0, #31
  400f4a:	d80c      	bhi.n	400f66 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400f4c:	4b11      	ldr	r3, [pc, #68]	; (400f94 <pmc_enable_periph_clk+0x50>)
  400f4e:	699a      	ldr	r2, [r3, #24]
  400f50:	2301      	movs	r3, #1
  400f52:	4083      	lsls	r3, r0
  400f54:	4393      	bics	r3, r2
  400f56:	d018      	beq.n	400f8a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400f58:	2301      	movs	r3, #1
  400f5a:	fa03 f000 	lsl.w	r0, r3, r0
  400f5e:	4b0d      	ldr	r3, [pc, #52]	; (400f94 <pmc_enable_periph_clk+0x50>)
  400f60:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400f62:	2000      	movs	r0, #0
  400f64:	4770      	bx	lr
		ul_id -= 32;
  400f66:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400f68:	4b0a      	ldr	r3, [pc, #40]	; (400f94 <pmc_enable_periph_clk+0x50>)
  400f6a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400f6e:	2301      	movs	r3, #1
  400f70:	4083      	lsls	r3, r0
  400f72:	4393      	bics	r3, r2
  400f74:	d00b      	beq.n	400f8e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400f76:	2301      	movs	r3, #1
  400f78:	fa03 f000 	lsl.w	r0, r3, r0
  400f7c:	4b05      	ldr	r3, [pc, #20]	; (400f94 <pmc_enable_periph_clk+0x50>)
  400f7e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400f82:	2000      	movs	r0, #0
  400f84:	4770      	bx	lr
		return 1;
  400f86:	2001      	movs	r0, #1
  400f88:	4770      	bx	lr
	return 0;
  400f8a:	2000      	movs	r0, #0
  400f8c:	4770      	bx	lr
  400f8e:	2000      	movs	r0, #0
}
  400f90:	4770      	bx	lr
  400f92:	bf00      	nop
  400f94:	400e0600 	.word	0x400e0600

00400f98 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400f98:	e7fe      	b.n	400f98 <Dummy_Handler>
	...

00400f9c <Reset_Handler>:
{
  400f9c:	b500      	push	{lr}
  400f9e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  400fa0:	4b25      	ldr	r3, [pc, #148]	; (401038 <Reset_Handler+0x9c>)
  400fa2:	4a26      	ldr	r2, [pc, #152]	; (40103c <Reset_Handler+0xa0>)
  400fa4:	429a      	cmp	r2, r3
  400fa6:	d010      	beq.n	400fca <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  400fa8:	4b25      	ldr	r3, [pc, #148]	; (401040 <Reset_Handler+0xa4>)
  400faa:	4a23      	ldr	r2, [pc, #140]	; (401038 <Reset_Handler+0x9c>)
  400fac:	429a      	cmp	r2, r3
  400fae:	d20c      	bcs.n	400fca <Reset_Handler+0x2e>
  400fb0:	3b01      	subs	r3, #1
  400fb2:	1a9b      	subs	r3, r3, r2
  400fb4:	f023 0303 	bic.w	r3, r3, #3
  400fb8:	3304      	adds	r3, #4
  400fba:	4413      	add	r3, r2
  400fbc:	491f      	ldr	r1, [pc, #124]	; (40103c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  400fbe:	f851 0b04 	ldr.w	r0, [r1], #4
  400fc2:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  400fc6:	429a      	cmp	r2, r3
  400fc8:	d1f9      	bne.n	400fbe <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  400fca:	4b1e      	ldr	r3, [pc, #120]	; (401044 <Reset_Handler+0xa8>)
  400fcc:	4a1e      	ldr	r2, [pc, #120]	; (401048 <Reset_Handler+0xac>)
  400fce:	429a      	cmp	r2, r3
  400fd0:	d20a      	bcs.n	400fe8 <Reset_Handler+0x4c>
  400fd2:	3b01      	subs	r3, #1
  400fd4:	1a9b      	subs	r3, r3, r2
  400fd6:	f023 0303 	bic.w	r3, r3, #3
  400fda:	3304      	adds	r3, #4
  400fdc:	4413      	add	r3, r2
                *pDest++ = 0;
  400fde:	2100      	movs	r1, #0
  400fe0:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400fe4:	4293      	cmp	r3, r2
  400fe6:	d1fb      	bne.n	400fe0 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400fe8:	4a18      	ldr	r2, [pc, #96]	; (40104c <Reset_Handler+0xb0>)
  400fea:	4b19      	ldr	r3, [pc, #100]	; (401050 <Reset_Handler+0xb4>)
  400fec:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400ff0:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400ff2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400ff6:	fab3 f383 	clz	r3, r3
  400ffa:	095b      	lsrs	r3, r3, #5
  400ffc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400ffe:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401000:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401004:	2200      	movs	r2, #0
  401006:	4b13      	ldr	r3, [pc, #76]	; (401054 <Reset_Handler+0xb8>)
  401008:	701a      	strb	r2, [r3, #0]
	return flags;
  40100a:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  40100c:	4a12      	ldr	r2, [pc, #72]	; (401058 <Reset_Handler+0xbc>)
  40100e:	6813      	ldr	r3, [r2, #0]
  401010:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401014:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401016:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40101a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40101e:	b129      	cbz	r1, 40102c <Reset_Handler+0x90>
		cpu_irq_enable();
  401020:	2201      	movs	r2, #1
  401022:	4b0c      	ldr	r3, [pc, #48]	; (401054 <Reset_Handler+0xb8>)
  401024:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401026:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40102a:	b662      	cpsie	i
        __libc_init_array();
  40102c:	4b0b      	ldr	r3, [pc, #44]	; (40105c <Reset_Handler+0xc0>)
  40102e:	4798      	blx	r3
        main();
  401030:	4b0b      	ldr	r3, [pc, #44]	; (401060 <Reset_Handler+0xc4>)
  401032:	4798      	blx	r3
  401034:	e7fe      	b.n	401034 <Reset_Handler+0x98>
  401036:	bf00      	nop
  401038:	20400000 	.word	0x20400000
  40103c:	00406ae4 	.word	0x00406ae4
  401040:	204009d0 	.word	0x204009d0
  401044:	20400ccc 	.word	0x20400ccc
  401048:	204009d0 	.word	0x204009d0
  40104c:	e000ed00 	.word	0xe000ed00
  401050:	00400000 	.word	0x00400000
  401054:	20400018 	.word	0x20400018
  401058:	e000ed88 	.word	0xe000ed88
  40105c:	00401c61 	.word	0x00401c61
  401060:	004013d9 	.word	0x004013d9

00401064 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401064:	4b3b      	ldr	r3, [pc, #236]	; (401154 <SystemCoreClockUpdate+0xf0>)
  401066:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401068:	f003 0303 	and.w	r3, r3, #3
  40106c:	2b01      	cmp	r3, #1
  40106e:	d01d      	beq.n	4010ac <SystemCoreClockUpdate+0x48>
  401070:	b183      	cbz	r3, 401094 <SystemCoreClockUpdate+0x30>
  401072:	2b02      	cmp	r3, #2
  401074:	d036      	beq.n	4010e4 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401076:	4b37      	ldr	r3, [pc, #220]	; (401154 <SystemCoreClockUpdate+0xf0>)
  401078:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40107a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40107e:	2b70      	cmp	r3, #112	; 0x70
  401080:	d05f      	beq.n	401142 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401082:	4b34      	ldr	r3, [pc, #208]	; (401154 <SystemCoreClockUpdate+0xf0>)
  401084:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401086:	4934      	ldr	r1, [pc, #208]	; (401158 <SystemCoreClockUpdate+0xf4>)
  401088:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40108c:	680b      	ldr	r3, [r1, #0]
  40108e:	40d3      	lsrs	r3, r2
  401090:	600b      	str	r3, [r1, #0]
  401092:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401094:	4b31      	ldr	r3, [pc, #196]	; (40115c <SystemCoreClockUpdate+0xf8>)
  401096:	695b      	ldr	r3, [r3, #20]
  401098:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40109c:	bf14      	ite	ne
  40109e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4010a2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4010a6:	4b2c      	ldr	r3, [pc, #176]	; (401158 <SystemCoreClockUpdate+0xf4>)
  4010a8:	601a      	str	r2, [r3, #0]
  4010aa:	e7e4      	b.n	401076 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4010ac:	4b29      	ldr	r3, [pc, #164]	; (401154 <SystemCoreClockUpdate+0xf0>)
  4010ae:	6a1b      	ldr	r3, [r3, #32]
  4010b0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4010b4:	d003      	beq.n	4010be <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4010b6:	4a2a      	ldr	r2, [pc, #168]	; (401160 <SystemCoreClockUpdate+0xfc>)
  4010b8:	4b27      	ldr	r3, [pc, #156]	; (401158 <SystemCoreClockUpdate+0xf4>)
  4010ba:	601a      	str	r2, [r3, #0]
  4010bc:	e7db      	b.n	401076 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4010be:	4a29      	ldr	r2, [pc, #164]	; (401164 <SystemCoreClockUpdate+0x100>)
  4010c0:	4b25      	ldr	r3, [pc, #148]	; (401158 <SystemCoreClockUpdate+0xf4>)
  4010c2:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4010c4:	4b23      	ldr	r3, [pc, #140]	; (401154 <SystemCoreClockUpdate+0xf0>)
  4010c6:	6a1b      	ldr	r3, [r3, #32]
  4010c8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4010cc:	2b10      	cmp	r3, #16
  4010ce:	d005      	beq.n	4010dc <SystemCoreClockUpdate+0x78>
  4010d0:	2b20      	cmp	r3, #32
  4010d2:	d1d0      	bne.n	401076 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4010d4:	4a22      	ldr	r2, [pc, #136]	; (401160 <SystemCoreClockUpdate+0xfc>)
  4010d6:	4b20      	ldr	r3, [pc, #128]	; (401158 <SystemCoreClockUpdate+0xf4>)
  4010d8:	601a      	str	r2, [r3, #0]
          break;
  4010da:	e7cc      	b.n	401076 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4010dc:	4a22      	ldr	r2, [pc, #136]	; (401168 <SystemCoreClockUpdate+0x104>)
  4010de:	4b1e      	ldr	r3, [pc, #120]	; (401158 <SystemCoreClockUpdate+0xf4>)
  4010e0:	601a      	str	r2, [r3, #0]
          break;
  4010e2:	e7c8      	b.n	401076 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4010e4:	4b1b      	ldr	r3, [pc, #108]	; (401154 <SystemCoreClockUpdate+0xf0>)
  4010e6:	6a1b      	ldr	r3, [r3, #32]
  4010e8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4010ec:	d016      	beq.n	40111c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4010ee:	4a1c      	ldr	r2, [pc, #112]	; (401160 <SystemCoreClockUpdate+0xfc>)
  4010f0:	4b19      	ldr	r3, [pc, #100]	; (401158 <SystemCoreClockUpdate+0xf4>)
  4010f2:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4010f4:	4b17      	ldr	r3, [pc, #92]	; (401154 <SystemCoreClockUpdate+0xf0>)
  4010f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4010f8:	f003 0303 	and.w	r3, r3, #3
  4010fc:	2b02      	cmp	r3, #2
  4010fe:	d1ba      	bne.n	401076 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401100:	4a14      	ldr	r2, [pc, #80]	; (401154 <SystemCoreClockUpdate+0xf0>)
  401102:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401104:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401106:	4814      	ldr	r0, [pc, #80]	; (401158 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401108:	f3c1 410a 	ubfx	r1, r1, #16, #11
  40110c:	6803      	ldr	r3, [r0, #0]
  40110e:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401112:	b2d2      	uxtb	r2, r2
  401114:	fbb3 f3f2 	udiv	r3, r3, r2
  401118:	6003      	str	r3, [r0, #0]
  40111a:	e7ac      	b.n	401076 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40111c:	4a11      	ldr	r2, [pc, #68]	; (401164 <SystemCoreClockUpdate+0x100>)
  40111e:	4b0e      	ldr	r3, [pc, #56]	; (401158 <SystemCoreClockUpdate+0xf4>)
  401120:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401122:	4b0c      	ldr	r3, [pc, #48]	; (401154 <SystemCoreClockUpdate+0xf0>)
  401124:	6a1b      	ldr	r3, [r3, #32]
  401126:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40112a:	2b10      	cmp	r3, #16
  40112c:	d005      	beq.n	40113a <SystemCoreClockUpdate+0xd6>
  40112e:	2b20      	cmp	r3, #32
  401130:	d1e0      	bne.n	4010f4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401132:	4a0b      	ldr	r2, [pc, #44]	; (401160 <SystemCoreClockUpdate+0xfc>)
  401134:	4b08      	ldr	r3, [pc, #32]	; (401158 <SystemCoreClockUpdate+0xf4>)
  401136:	601a      	str	r2, [r3, #0]
          break;
  401138:	e7dc      	b.n	4010f4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40113a:	4a0b      	ldr	r2, [pc, #44]	; (401168 <SystemCoreClockUpdate+0x104>)
  40113c:	4b06      	ldr	r3, [pc, #24]	; (401158 <SystemCoreClockUpdate+0xf4>)
  40113e:	601a      	str	r2, [r3, #0]
          break;
  401140:	e7d8      	b.n	4010f4 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401142:	4a05      	ldr	r2, [pc, #20]	; (401158 <SystemCoreClockUpdate+0xf4>)
  401144:	6813      	ldr	r3, [r2, #0]
  401146:	4909      	ldr	r1, [pc, #36]	; (40116c <SystemCoreClockUpdate+0x108>)
  401148:	fba1 1303 	umull	r1, r3, r1, r3
  40114c:	085b      	lsrs	r3, r3, #1
  40114e:	6013      	str	r3, [r2, #0]
  401150:	4770      	bx	lr
  401152:	bf00      	nop
  401154:	400e0600 	.word	0x400e0600
  401158:	2040001c 	.word	0x2040001c
  40115c:	400e1810 	.word	0x400e1810
  401160:	00b71b00 	.word	0x00b71b00
  401164:	003d0900 	.word	0x003d0900
  401168:	007a1200 	.word	0x007a1200
  40116c:	aaaaaaab 	.word	0xaaaaaaab

00401170 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401170:	4b16      	ldr	r3, [pc, #88]	; (4011cc <system_init_flash+0x5c>)
  401172:	4298      	cmp	r0, r3
  401174:	d913      	bls.n	40119e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401176:	4b16      	ldr	r3, [pc, #88]	; (4011d0 <system_init_flash+0x60>)
  401178:	4298      	cmp	r0, r3
  40117a:	d915      	bls.n	4011a8 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  40117c:	4b15      	ldr	r3, [pc, #84]	; (4011d4 <system_init_flash+0x64>)
  40117e:	4298      	cmp	r0, r3
  401180:	d916      	bls.n	4011b0 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401182:	4b15      	ldr	r3, [pc, #84]	; (4011d8 <system_init_flash+0x68>)
  401184:	4298      	cmp	r0, r3
  401186:	d917      	bls.n	4011b8 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401188:	4b14      	ldr	r3, [pc, #80]	; (4011dc <system_init_flash+0x6c>)
  40118a:	4298      	cmp	r0, r3
  40118c:	d918      	bls.n	4011c0 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40118e:	4b14      	ldr	r3, [pc, #80]	; (4011e0 <system_init_flash+0x70>)
  401190:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401192:	bf94      	ite	ls
  401194:	4a13      	ldrls	r2, [pc, #76]	; (4011e4 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401196:	4a14      	ldrhi	r2, [pc, #80]	; (4011e8 <system_init_flash+0x78>)
  401198:	4b14      	ldr	r3, [pc, #80]	; (4011ec <system_init_flash+0x7c>)
  40119a:	601a      	str	r2, [r3, #0]
  40119c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40119e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4011a2:	4b12      	ldr	r3, [pc, #72]	; (4011ec <system_init_flash+0x7c>)
  4011a4:	601a      	str	r2, [r3, #0]
  4011a6:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4011a8:	4a11      	ldr	r2, [pc, #68]	; (4011f0 <system_init_flash+0x80>)
  4011aa:	4b10      	ldr	r3, [pc, #64]	; (4011ec <system_init_flash+0x7c>)
  4011ac:	601a      	str	r2, [r3, #0]
  4011ae:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4011b0:	4a10      	ldr	r2, [pc, #64]	; (4011f4 <system_init_flash+0x84>)
  4011b2:	4b0e      	ldr	r3, [pc, #56]	; (4011ec <system_init_flash+0x7c>)
  4011b4:	601a      	str	r2, [r3, #0]
  4011b6:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4011b8:	4a0f      	ldr	r2, [pc, #60]	; (4011f8 <system_init_flash+0x88>)
  4011ba:	4b0c      	ldr	r3, [pc, #48]	; (4011ec <system_init_flash+0x7c>)
  4011bc:	601a      	str	r2, [r3, #0]
  4011be:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4011c0:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4011c4:	4b09      	ldr	r3, [pc, #36]	; (4011ec <system_init_flash+0x7c>)
  4011c6:	601a      	str	r2, [r3, #0]
  4011c8:	4770      	bx	lr
  4011ca:	bf00      	nop
  4011cc:	015ef3bf 	.word	0x015ef3bf
  4011d0:	02bde77f 	.word	0x02bde77f
  4011d4:	041cdb3f 	.word	0x041cdb3f
  4011d8:	057bceff 	.word	0x057bceff
  4011dc:	06dac2bf 	.word	0x06dac2bf
  4011e0:	0839b67f 	.word	0x0839b67f
  4011e4:	04000500 	.word	0x04000500
  4011e8:	04000600 	.word	0x04000600
  4011ec:	400e0c00 	.word	0x400e0c00
  4011f0:	04000100 	.word	0x04000100
  4011f4:	04000200 	.word	0x04000200
  4011f8:	04000300 	.word	0x04000300

004011fc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4011fc:	4b0a      	ldr	r3, [pc, #40]	; (401228 <_sbrk+0x2c>)
  4011fe:	681b      	ldr	r3, [r3, #0]
  401200:	b153      	cbz	r3, 401218 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401202:	4b09      	ldr	r3, [pc, #36]	; (401228 <_sbrk+0x2c>)
  401204:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401206:	181a      	adds	r2, r3, r0
  401208:	4908      	ldr	r1, [pc, #32]	; (40122c <_sbrk+0x30>)
  40120a:	4291      	cmp	r1, r2
  40120c:	db08      	blt.n	401220 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40120e:	4610      	mov	r0, r2
  401210:	4a05      	ldr	r2, [pc, #20]	; (401228 <_sbrk+0x2c>)
  401212:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401214:	4618      	mov	r0, r3
  401216:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401218:	4a05      	ldr	r2, [pc, #20]	; (401230 <_sbrk+0x34>)
  40121a:	4b03      	ldr	r3, [pc, #12]	; (401228 <_sbrk+0x2c>)
  40121c:	601a      	str	r2, [r3, #0]
  40121e:	e7f0      	b.n	401202 <_sbrk+0x6>
		return (caddr_t) -1;	
  401220:	f04f 30ff 	mov.w	r0, #4294967295
}
  401224:	4770      	bx	lr
  401226:	bf00      	nop
  401228:	20400c68 	.word	0x20400c68
  40122c:	2045fffc 	.word	0x2045fffc
  401230:	20402ed0 	.word	0x20402ed0

00401234 <RTT_init>:

static float get_time_rtt(){
	uint ul_previous_time = rtt_read_timer_value(RTT);
}

static void RTT_init(float freqPrescale, uint32_t IrqNPulses, uint32_t rttIRQSource) {
  401234:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401238:	ed2d 8b02 	vpush	{d8}
  40123c:	b082      	sub	sp, #8
  40123e:	eeb0 8a40 	vmov.f32	s16, s0
  401242:	4680      	mov	r8, r0
  401244:	460f      	mov	r7, r1

	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
	
	rtt_sel_source(RTT, false);
  401246:	4c20      	ldr	r4, [pc, #128]	; (4012c8 <RTT_init+0x94>)
  401248:	2100      	movs	r1, #0
  40124a:	4620      	mov	r0, r4
  40124c:	4b1f      	ldr	r3, [pc, #124]	; (4012cc <RTT_init+0x98>)
  40124e:	4798      	blx	r3
	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
  401250:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 4012d0 <RTT_init+0x9c>
  401254:	eec7 7a08 	vdiv.f32	s15, s14, s16
  401258:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  40125c:	edcd 7a01 	vstr	s15, [sp, #4]
	rtt_init(RTT, pllPreScale);
  401260:	f8bd 1004 	ldrh.w	r1, [sp, #4]
  401264:	4620      	mov	r0, r4
  401266:	4b1b      	ldr	r3, [pc, #108]	; (4012d4 <RTT_init+0xa0>)
  401268:	4798      	blx	r3
	
	if (rttIRQSource & RTT_MR_ALMIEN) {
  40126a:	f417 3f80 	tst.w	r7, #65536	; 0x10000
  40126e:	d116      	bne.n	40129e <RTT_init+0x6a>
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401270:	4b19      	ldr	r3, [pc, #100]	; (4012d8 <RTT_init+0xa4>)
  401272:	2208      	movs	r2, #8
  401274:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401278:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40127c:	2180      	movs	r1, #128	; 0x80
  40127e:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401282:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(RTT_IRQn);
	NVIC_SetPriority(RTT_IRQn, 4);
	NVIC_EnableIRQ(RTT_IRQn);

	/* Enable RTT interrupt */
	if (rttIRQSource & (RTT_MR_RTTINCIEN | RTT_MR_ALMIEN))
  401284:	f417 3f40 	tst.w	r7, #196608	; 0x30000
  401288:	d119      	bne.n	4012be <RTT_init+0x8a>
	rtt_enable_interrupt(RTT, rttIRQSource);
	else
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN | RTT_MR_ALMIEN);
  40128a:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  40128e:	480e      	ldr	r0, [pc, #56]	; (4012c8 <RTT_init+0x94>)
  401290:	4b12      	ldr	r3, [pc, #72]	; (4012dc <RTT_init+0xa8>)
  401292:	4798      	blx	r3
	
}
  401294:	b002      	add	sp, #8
  401296:	ecbd 8b02 	vpop	{d8}
  40129a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ul_previous_time = rtt_read_timer_value(RTT);
  40129e:	4620      	mov	r0, r4
  4012a0:	4b0f      	ldr	r3, [pc, #60]	; (4012e0 <RTT_init+0xac>)
  4012a2:	4798      	blx	r3
  4012a4:	4604      	mov	r4, r0
		while (ul_previous_time == rtt_read_timer_value(RTT));
  4012a6:	4e08      	ldr	r6, [pc, #32]	; (4012c8 <RTT_init+0x94>)
  4012a8:	4d0d      	ldr	r5, [pc, #52]	; (4012e0 <RTT_init+0xac>)
  4012aa:	4630      	mov	r0, r6
  4012ac:	47a8      	blx	r5
  4012ae:	4284      	cmp	r4, r0
  4012b0:	d0fb      	beq.n	4012aa <RTT_init+0x76>
		rtt_write_alarm_time(RTT, IrqNPulses+ul_previous_time);
  4012b2:	eb04 0108 	add.w	r1, r4, r8
  4012b6:	4804      	ldr	r0, [pc, #16]	; (4012c8 <RTT_init+0x94>)
  4012b8:	4b0a      	ldr	r3, [pc, #40]	; (4012e4 <RTT_init+0xb0>)
  4012ba:	4798      	blx	r3
  4012bc:	e7d8      	b.n	401270 <RTT_init+0x3c>
	rtt_enable_interrupt(RTT, rttIRQSource);
  4012be:	4639      	mov	r1, r7
  4012c0:	4801      	ldr	r0, [pc, #4]	; (4012c8 <RTT_init+0x94>)
  4012c2:	4b09      	ldr	r3, [pc, #36]	; (4012e8 <RTT_init+0xb4>)
  4012c4:	4798      	blx	r3
  4012c6:	e7e5      	b.n	401294 <RTT_init+0x60>
  4012c8:	400e1830 	.word	0x400e1830
  4012cc:	004001c1 	.word	0x004001c1
  4012d0:	47000000 	.word	0x47000000
  4012d4:	004001ad 	.word	0x004001ad
  4012d8:	e000e100 	.word	0xe000e100
  4012dc:	00400201 	.word	0x00400201
  4012e0:	00400215 	.word	0x00400215
  4012e4:	0040022d 	.word	0x0040022d
  4012e8:	004001ed 	.word	0x004001ed

004012ec <echo_callback>:
	ul_status = rtt_get_status(RTT);

}


void echo_callback(void){
  4012ec:	b508      	push	{r3, lr}
	if(pio_get(ECHO_PIO,PIO_INPUT,ECHO_IDX_MASK)){
  4012ee:	2240      	movs	r2, #64	; 0x40
  4012f0:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4012f4:	4808      	ldr	r0, [pc, #32]	; (401318 <echo_callback+0x2c>)
  4012f6:	4b09      	ldr	r3, [pc, #36]	; (40131c <echo_callback+0x30>)
  4012f8:	4798      	blx	r3
  4012fa:	b928      	cbnz	r0, 401308 <echo_callback+0x1c>
		RTT_init(8620,(int) 8620*(4/340) ,0);
	}
	
	else{
		timer=rtt_read_timer_value(RTT);
  4012fc:	4808      	ldr	r0, [pc, #32]	; (401320 <echo_callback+0x34>)
  4012fe:	4b09      	ldr	r3, [pc, #36]	; (401324 <echo_callback+0x38>)
  401300:	4798      	blx	r3
  401302:	4b09      	ldr	r3, [pc, #36]	; (401328 <echo_callback+0x3c>)
  401304:	6018      	str	r0, [r3, #0]
  401306:	bd08      	pop	{r3, pc}
		RTT_init(8620,(int) 8620*(4/340) ,0);
  401308:	2100      	movs	r1, #0
  40130a:	4608      	mov	r0, r1
  40130c:	ed9f 0a07 	vldr	s0, [pc, #28]	; 40132c <echo_callback+0x40>
  401310:	4b07      	ldr	r3, [pc, #28]	; (401330 <echo_callback+0x44>)
  401312:	4798      	blx	r3
  401314:	bd08      	pop	{r3, pc}
  401316:	bf00      	nop
  401318:	400e0e00 	.word	0x400e0e00
  40131c:	00400b27 	.word	0x00400b27
  401320:	400e1830 	.word	0x400e1830
  401324:	00400215 	.word	0x00400215
  401328:	20400ca0 	.word	0x20400ca0
  40132c:	4606b000 	.word	0x4606b000
  401330:	00401235 	.word	0x00401235

00401334 <RTT_Handler>:
void RTT_Handler(void) {
  401334:	b508      	push	{r3, lr}
	ul_status = rtt_get_status(RTT);
  401336:	4802      	ldr	r0, [pc, #8]	; (401340 <RTT_Handler+0xc>)
  401338:	4b02      	ldr	r3, [pc, #8]	; (401344 <RTT_Handler+0x10>)
  40133a:	4798      	blx	r3
  40133c:	bd08      	pop	{r3, pc}
  40133e:	bf00      	nop
  401340:	400e1830 	.word	0x400e1830
  401344:	00400229 	.word	0x00400229

00401348 <io_init>:
	}
}
void io_init(void)
{
  401348:	b530      	push	{r4, r5, lr}
  40134a:	b083      	sub	sp, #12
	
	
	pmc_enable_periph_clk(LED_PIO_ID);
  40134c:	200c      	movs	r0, #12
  40134e:	4c18      	ldr	r4, [pc, #96]	; (4013b0 <io_init+0x68>)
  401350:	47a0      	blx	r4
	pio_configure(LED_PIO, PIO_OUTPUT_1, LED_IDX_MASK, PIO_DEFAULT);
  401352:	2300      	movs	r3, #0
  401354:	f44f 7280 	mov.w	r2, #256	; 0x100
  401358:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40135c:	4815      	ldr	r0, [pc, #84]	; (4013b4 <io_init+0x6c>)
  40135e:	4d16      	ldr	r5, [pc, #88]	; (4013b8 <io_init+0x70>)
  401360:	47a8      	blx	r5
	

	pmc_enable_periph_clk(ECHO_PIO_ID);
  401362:	200a      	movs	r0, #10
  401364:	47a0      	blx	r4
	pio_configure(ECHO_PIO, PIO_INPUT, ECHO_IDX_MASK, PIO_PULLUP);
  401366:	4c15      	ldr	r4, [pc, #84]	; (4013bc <io_init+0x74>)
  401368:	2301      	movs	r3, #1
  40136a:	2240      	movs	r2, #64	; 0x40
  40136c:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401370:	4620      	mov	r0, r4
  401372:	47a8      	blx	r5
	pio_set_debounce_filter(ECHO_PIO, ECHO_IDX_MASK, 60);
  401374:	223c      	movs	r2, #60	; 0x3c
  401376:	2140      	movs	r1, #64	; 0x40
  401378:	4620      	mov	r0, r4
  40137a:	4b11      	ldr	r3, [pc, #68]	; (4013c0 <io_init+0x78>)
  40137c:	4798      	blx	r3
	pio_get_interrupt_status(ECHO_PIO);
  40137e:	4620      	mov	r0, r4
  401380:	4b10      	ldr	r3, [pc, #64]	; (4013c4 <io_init+0x7c>)
  401382:	4798      	blx	r3

	pio_enable_interrupt(ECHO_PIO, ECHO_IDX_MASK);
  401384:	2140      	movs	r1, #64	; 0x40
  401386:	4620      	mov	r0, r4
  401388:	4b0f      	ldr	r3, [pc, #60]	; (4013c8 <io_init+0x80>)
  40138a:	4798      	blx	r3

	pio_handler_set(ECHO_PIO,
  40138c:	4b0f      	ldr	r3, [pc, #60]	; (4013cc <io_init+0x84>)
  40138e:	9300      	str	r3, [sp, #0]
  401390:	2340      	movs	r3, #64	; 0x40
  401392:	461a      	mov	r2, r3
  401394:	210a      	movs	r1, #10
  401396:	4620      	mov	r0, r4
  401398:	4c0d      	ldr	r4, [pc, #52]	; (4013d0 <io_init+0x88>)
  40139a:	47a0      	blx	r4
  40139c:	4b0d      	ldr	r3, [pc, #52]	; (4013d4 <io_init+0x8c>)
  40139e:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4013a2:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4013a4:	2280      	movs	r2, #128	; 0x80
  4013a6:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
					PIO_IT_EDGE,
					echo_callback);

	NVIC_EnableIRQ(ECHO_PIO_ID);
	NVIC_SetPriority(ECHO_PIO_ID, 4);
}
  4013aa:	b003      	add	sp, #12
  4013ac:	bd30      	pop	{r4, r5, pc}
  4013ae:	bf00      	nop
  4013b0:	00400f45 	.word	0x00400f45
  4013b4:	400e1200 	.word	0x400e1200
  4013b8:	00400c31 	.word	0x00400c31
  4013bc:	400e0e00 	.word	0x400e0e00
  4013c0:	00400b05 	.word	0x00400b05
  4013c4:	00400cf7 	.word	0x00400cf7
  4013c8:	00400cf3 	.word	0x00400cf3
  4013cc:	004012ed 	.word	0x004012ed
  4013d0:	00400d51 	.word	0x00400d51
  4013d4:	e000e100 	.word	0xe000e100

004013d8 <main>:

int main (void)
{
  4013d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4013dc:	b08e      	sub	sp, #56	; 0x38
	board_init();
  4013de:	4b26      	ldr	r3, [pc, #152]	; (401478 <main+0xa0>)
  4013e0:	4798      	blx	r3
	sysclk_init();
  4013e2:	4b26      	ldr	r3, [pc, #152]	; (40147c <main+0xa4>)
  4013e4:	4798      	blx	r3
	delay_init();

	// Init OLED
	gfx_mono_ssd1306_init();
  4013e6:	4b26      	ldr	r3, [pc, #152]	; (401480 <main+0xa8>)
  4013e8:	4798      	blx	r3
	io_init();
  4013ea:	4b26      	ldr	r3, [pc, #152]	; (401484 <main+0xac>)
  4013ec:	4798      	blx	r3
	
	WDT->WDT_MR = WDT_MR_WDDIS;
  4013ee:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4013f2:	4b25      	ldr	r3, [pc, #148]	; (401488 <main+0xb0>)
  4013f4:	605a      	str	r2, [r3, #4]
	
	RTT_init(4, 16, 0);
  4013f6:	2100      	movs	r1, #0
  4013f8:	2010      	movs	r0, #16
  4013fa:	eeb1 0a00 	vmov.f32	s0, #16	; 0x40800000  4.0
  4013fe:	4b23      	ldr	r3, [pc, #140]	; (40148c <main+0xb4>)
  401400:	4798      	blx	r3
	/* Insert application code here, after the board has been initialized. */
	while(1) {
		
		//pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
		
		pio_set(LED_PIO,LED_IDX_MASK);
  401402:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 4014c8 <main+0xf0>
  401406:	f44f 7580 	mov.w	r5, #256	; 0x100
		delay_us(10);
		pio_clear(LED_PIO,LED_IDX_MASK);
		
		double f = 8620.0;
		
		double time=timer/f;
  40140a:	f20f 0964 	addw	r9, pc, #100	; 0x64
  40140e:	e9d9 8900 	ldrd	r8, r9, [r9]
		
		double distance = (340*time/2) * 100;
  401412:	2600      	movs	r6, #0
  401414:	4f1e      	ldr	r7, [pc, #120]	; (401490 <main+0xb8>)
		pio_set(LED_PIO,LED_IDX_MASK);
  401416:	4629      	mov	r1, r5
  401418:	4650      	mov	r0, sl
  40141a:	4b1e      	ldr	r3, [pc, #120]	; (401494 <main+0xbc>)
  40141c:	4798      	blx	r3
		delay_us(10);
  40141e:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  401422:	4b1d      	ldr	r3, [pc, #116]	; (401498 <main+0xc0>)
  401424:	4798      	blx	r3
		pio_clear(LED_PIO,LED_IDX_MASK);
  401426:	4629      	mov	r1, r5
  401428:	4650      	mov	r0, sl
  40142a:	4b1c      	ldr	r3, [pc, #112]	; (40149c <main+0xc4>)
  40142c:	4798      	blx	r3
		double time=timer/f;
  40142e:	4b1c      	ldr	r3, [pc, #112]	; (4014a0 <main+0xc8>)
  401430:	6818      	ldr	r0, [r3, #0]
  401432:	4b1c      	ldr	r3, [pc, #112]	; (4014a4 <main+0xcc>)
  401434:	4798      	blx	r3
  401436:	4642      	mov	r2, r8
  401438:	464b      	mov	r3, r9
  40143a:	4c1b      	ldr	r4, [pc, #108]	; (4014a8 <main+0xd0>)
  40143c:	47a0      	blx	r4
		double distance = (340*time/2) * 100;
  40143e:	4c1b      	ldr	r4, [pc, #108]	; (4014ac <main+0xd4>)
  401440:	4632      	mov	r2, r6
  401442:	463b      	mov	r3, r7
  401444:	47a0      	blx	r4
  401446:	2200      	movs	r2, #0
  401448:	4b19      	ldr	r3, [pc, #100]	; (4014b0 <main+0xd8>)
  40144a:	47a0      	blx	r4
  40144c:	2200      	movs	r2, #0
  40144e:	4b19      	ldr	r3, [pc, #100]	; (4014b4 <main+0xdc>)
  401450:	47a0      	blx	r4
		
		sprintf(string, "%f cm", distance);
  401452:	4602      	mov	r2, r0
  401454:	460b      	mov	r3, r1
  401456:	4918      	ldr	r1, [pc, #96]	; (4014b8 <main+0xe0>)
  401458:	a801      	add	r0, sp, #4
  40145a:	4c18      	ldr	r4, [pc, #96]	; (4014bc <main+0xe4>)
  40145c:	47a0      	blx	r4
		gfx_mono_draw_string(string, 0, 0, &sysfont);
  40145e:	4b18      	ldr	r3, [pc, #96]	; (4014c0 <main+0xe8>)
  401460:	2200      	movs	r2, #0
  401462:	4611      	mov	r1, r2
  401464:	a801      	add	r0, sp, #4
  401466:	4c17      	ldr	r4, [pc, #92]	; (4014c4 <main+0xec>)
  401468:	47a0      	blx	r4
  40146a:	e7d4      	b.n	401416 <main+0x3e>
  40146c:	f3af 8000 	nop.w
  401470:	00000000 	.word	0x00000000
  401474:	40c0d600 	.word	0x40c0d600
  401478:	004009c5 	.word	0x004009c5
  40147c:	00400955 	.word	0x00400955
  401480:	00400635 	.word	0x00400635
  401484:	00401349 	.word	0x00401349
  401488:	400e1850 	.word	0x400e1850
  40148c:	00401235 	.word	0x00401235
  401490:	40754000 	.word	0x40754000
  401494:	00400b1f 	.word	0x00400b1f
  401498:	20400001 	.word	0x20400001
  40149c:	00400b23 	.word	0x00400b23
  4014a0:	20400ca0 	.word	0x20400ca0
  4014a4:	00401751 	.word	0x00401751
  4014a8:	00401a91 	.word	0x00401a91
  4014ac:	0040183d 	.word	0x0040183d
  4014b0:	3fe00000 	.word	0x3fe00000
  4014b4:	40590000 	.word	0x40590000
  4014b8:	00406828 	.word	0x00406828
  4014bc:	00401d4d 	.word	0x00401d4d
  4014c0:	2040000c 	.word	0x2040000c
  4014c4:	0040059d 	.word	0x0040059d
  4014c8:	400e1200 	.word	0x400e1200

004014cc <__aeabi_drsub>:
  4014cc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4014d0:	e002      	b.n	4014d8 <__adddf3>
  4014d2:	bf00      	nop

004014d4 <__aeabi_dsub>:
  4014d4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004014d8 <__adddf3>:
  4014d8:	b530      	push	{r4, r5, lr}
  4014da:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4014de:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4014e2:	ea94 0f05 	teq	r4, r5
  4014e6:	bf08      	it	eq
  4014e8:	ea90 0f02 	teqeq	r0, r2
  4014ec:	bf1f      	itttt	ne
  4014ee:	ea54 0c00 	orrsne.w	ip, r4, r0
  4014f2:	ea55 0c02 	orrsne.w	ip, r5, r2
  4014f6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4014fa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4014fe:	f000 80e2 	beq.w	4016c6 <__adddf3+0x1ee>
  401502:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401506:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40150a:	bfb8      	it	lt
  40150c:	426d      	neglt	r5, r5
  40150e:	dd0c      	ble.n	40152a <__adddf3+0x52>
  401510:	442c      	add	r4, r5
  401512:	ea80 0202 	eor.w	r2, r0, r2
  401516:	ea81 0303 	eor.w	r3, r1, r3
  40151a:	ea82 0000 	eor.w	r0, r2, r0
  40151e:	ea83 0101 	eor.w	r1, r3, r1
  401522:	ea80 0202 	eor.w	r2, r0, r2
  401526:	ea81 0303 	eor.w	r3, r1, r3
  40152a:	2d36      	cmp	r5, #54	; 0x36
  40152c:	bf88      	it	hi
  40152e:	bd30      	pophi	{r4, r5, pc}
  401530:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401534:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401538:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40153c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401540:	d002      	beq.n	401548 <__adddf3+0x70>
  401542:	4240      	negs	r0, r0
  401544:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401548:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  40154c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401550:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401554:	d002      	beq.n	40155c <__adddf3+0x84>
  401556:	4252      	negs	r2, r2
  401558:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40155c:	ea94 0f05 	teq	r4, r5
  401560:	f000 80a7 	beq.w	4016b2 <__adddf3+0x1da>
  401564:	f1a4 0401 	sub.w	r4, r4, #1
  401568:	f1d5 0e20 	rsbs	lr, r5, #32
  40156c:	db0d      	blt.n	40158a <__adddf3+0xb2>
  40156e:	fa02 fc0e 	lsl.w	ip, r2, lr
  401572:	fa22 f205 	lsr.w	r2, r2, r5
  401576:	1880      	adds	r0, r0, r2
  401578:	f141 0100 	adc.w	r1, r1, #0
  40157c:	fa03 f20e 	lsl.w	r2, r3, lr
  401580:	1880      	adds	r0, r0, r2
  401582:	fa43 f305 	asr.w	r3, r3, r5
  401586:	4159      	adcs	r1, r3
  401588:	e00e      	b.n	4015a8 <__adddf3+0xd0>
  40158a:	f1a5 0520 	sub.w	r5, r5, #32
  40158e:	f10e 0e20 	add.w	lr, lr, #32
  401592:	2a01      	cmp	r2, #1
  401594:	fa03 fc0e 	lsl.w	ip, r3, lr
  401598:	bf28      	it	cs
  40159a:	f04c 0c02 	orrcs.w	ip, ip, #2
  40159e:	fa43 f305 	asr.w	r3, r3, r5
  4015a2:	18c0      	adds	r0, r0, r3
  4015a4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4015a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4015ac:	d507      	bpl.n	4015be <__adddf3+0xe6>
  4015ae:	f04f 0e00 	mov.w	lr, #0
  4015b2:	f1dc 0c00 	rsbs	ip, ip, #0
  4015b6:	eb7e 0000 	sbcs.w	r0, lr, r0
  4015ba:	eb6e 0101 	sbc.w	r1, lr, r1
  4015be:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4015c2:	d31b      	bcc.n	4015fc <__adddf3+0x124>
  4015c4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4015c8:	d30c      	bcc.n	4015e4 <__adddf3+0x10c>
  4015ca:	0849      	lsrs	r1, r1, #1
  4015cc:	ea5f 0030 	movs.w	r0, r0, rrx
  4015d0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4015d4:	f104 0401 	add.w	r4, r4, #1
  4015d8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4015dc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4015e0:	f080 809a 	bcs.w	401718 <__adddf3+0x240>
  4015e4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4015e8:	bf08      	it	eq
  4015ea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4015ee:	f150 0000 	adcs.w	r0, r0, #0
  4015f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4015f6:	ea41 0105 	orr.w	r1, r1, r5
  4015fa:	bd30      	pop	{r4, r5, pc}
  4015fc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401600:	4140      	adcs	r0, r0
  401602:	eb41 0101 	adc.w	r1, r1, r1
  401606:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40160a:	f1a4 0401 	sub.w	r4, r4, #1
  40160e:	d1e9      	bne.n	4015e4 <__adddf3+0x10c>
  401610:	f091 0f00 	teq	r1, #0
  401614:	bf04      	itt	eq
  401616:	4601      	moveq	r1, r0
  401618:	2000      	moveq	r0, #0
  40161a:	fab1 f381 	clz	r3, r1
  40161e:	bf08      	it	eq
  401620:	3320      	addeq	r3, #32
  401622:	f1a3 030b 	sub.w	r3, r3, #11
  401626:	f1b3 0220 	subs.w	r2, r3, #32
  40162a:	da0c      	bge.n	401646 <__adddf3+0x16e>
  40162c:	320c      	adds	r2, #12
  40162e:	dd08      	ble.n	401642 <__adddf3+0x16a>
  401630:	f102 0c14 	add.w	ip, r2, #20
  401634:	f1c2 020c 	rsb	r2, r2, #12
  401638:	fa01 f00c 	lsl.w	r0, r1, ip
  40163c:	fa21 f102 	lsr.w	r1, r1, r2
  401640:	e00c      	b.n	40165c <__adddf3+0x184>
  401642:	f102 0214 	add.w	r2, r2, #20
  401646:	bfd8      	it	le
  401648:	f1c2 0c20 	rsble	ip, r2, #32
  40164c:	fa01 f102 	lsl.w	r1, r1, r2
  401650:	fa20 fc0c 	lsr.w	ip, r0, ip
  401654:	bfdc      	itt	le
  401656:	ea41 010c 	orrle.w	r1, r1, ip
  40165a:	4090      	lslle	r0, r2
  40165c:	1ae4      	subs	r4, r4, r3
  40165e:	bfa2      	ittt	ge
  401660:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401664:	4329      	orrge	r1, r5
  401666:	bd30      	popge	{r4, r5, pc}
  401668:	ea6f 0404 	mvn.w	r4, r4
  40166c:	3c1f      	subs	r4, #31
  40166e:	da1c      	bge.n	4016aa <__adddf3+0x1d2>
  401670:	340c      	adds	r4, #12
  401672:	dc0e      	bgt.n	401692 <__adddf3+0x1ba>
  401674:	f104 0414 	add.w	r4, r4, #20
  401678:	f1c4 0220 	rsb	r2, r4, #32
  40167c:	fa20 f004 	lsr.w	r0, r0, r4
  401680:	fa01 f302 	lsl.w	r3, r1, r2
  401684:	ea40 0003 	orr.w	r0, r0, r3
  401688:	fa21 f304 	lsr.w	r3, r1, r4
  40168c:	ea45 0103 	orr.w	r1, r5, r3
  401690:	bd30      	pop	{r4, r5, pc}
  401692:	f1c4 040c 	rsb	r4, r4, #12
  401696:	f1c4 0220 	rsb	r2, r4, #32
  40169a:	fa20 f002 	lsr.w	r0, r0, r2
  40169e:	fa01 f304 	lsl.w	r3, r1, r4
  4016a2:	ea40 0003 	orr.w	r0, r0, r3
  4016a6:	4629      	mov	r1, r5
  4016a8:	bd30      	pop	{r4, r5, pc}
  4016aa:	fa21 f004 	lsr.w	r0, r1, r4
  4016ae:	4629      	mov	r1, r5
  4016b0:	bd30      	pop	{r4, r5, pc}
  4016b2:	f094 0f00 	teq	r4, #0
  4016b6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4016ba:	bf06      	itte	eq
  4016bc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4016c0:	3401      	addeq	r4, #1
  4016c2:	3d01      	subne	r5, #1
  4016c4:	e74e      	b.n	401564 <__adddf3+0x8c>
  4016c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4016ca:	bf18      	it	ne
  4016cc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4016d0:	d029      	beq.n	401726 <__adddf3+0x24e>
  4016d2:	ea94 0f05 	teq	r4, r5
  4016d6:	bf08      	it	eq
  4016d8:	ea90 0f02 	teqeq	r0, r2
  4016dc:	d005      	beq.n	4016ea <__adddf3+0x212>
  4016de:	ea54 0c00 	orrs.w	ip, r4, r0
  4016e2:	bf04      	itt	eq
  4016e4:	4619      	moveq	r1, r3
  4016e6:	4610      	moveq	r0, r2
  4016e8:	bd30      	pop	{r4, r5, pc}
  4016ea:	ea91 0f03 	teq	r1, r3
  4016ee:	bf1e      	ittt	ne
  4016f0:	2100      	movne	r1, #0
  4016f2:	2000      	movne	r0, #0
  4016f4:	bd30      	popne	{r4, r5, pc}
  4016f6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4016fa:	d105      	bne.n	401708 <__adddf3+0x230>
  4016fc:	0040      	lsls	r0, r0, #1
  4016fe:	4149      	adcs	r1, r1
  401700:	bf28      	it	cs
  401702:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401706:	bd30      	pop	{r4, r5, pc}
  401708:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40170c:	bf3c      	itt	cc
  40170e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401712:	bd30      	popcc	{r4, r5, pc}
  401714:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401718:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40171c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401720:	f04f 0000 	mov.w	r0, #0
  401724:	bd30      	pop	{r4, r5, pc}
  401726:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40172a:	bf1a      	itte	ne
  40172c:	4619      	movne	r1, r3
  40172e:	4610      	movne	r0, r2
  401730:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401734:	bf1c      	itt	ne
  401736:	460b      	movne	r3, r1
  401738:	4602      	movne	r2, r0
  40173a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40173e:	bf06      	itte	eq
  401740:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401744:	ea91 0f03 	teqeq	r1, r3
  401748:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40174c:	bd30      	pop	{r4, r5, pc}
  40174e:	bf00      	nop

00401750 <__aeabi_ui2d>:
  401750:	f090 0f00 	teq	r0, #0
  401754:	bf04      	itt	eq
  401756:	2100      	moveq	r1, #0
  401758:	4770      	bxeq	lr
  40175a:	b530      	push	{r4, r5, lr}
  40175c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401760:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401764:	f04f 0500 	mov.w	r5, #0
  401768:	f04f 0100 	mov.w	r1, #0
  40176c:	e750      	b.n	401610 <__adddf3+0x138>
  40176e:	bf00      	nop

00401770 <__aeabi_i2d>:
  401770:	f090 0f00 	teq	r0, #0
  401774:	bf04      	itt	eq
  401776:	2100      	moveq	r1, #0
  401778:	4770      	bxeq	lr
  40177a:	b530      	push	{r4, r5, lr}
  40177c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401780:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401784:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401788:	bf48      	it	mi
  40178a:	4240      	negmi	r0, r0
  40178c:	f04f 0100 	mov.w	r1, #0
  401790:	e73e      	b.n	401610 <__adddf3+0x138>
  401792:	bf00      	nop

00401794 <__aeabi_f2d>:
  401794:	0042      	lsls	r2, r0, #1
  401796:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40179a:	ea4f 0131 	mov.w	r1, r1, rrx
  40179e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4017a2:	bf1f      	itttt	ne
  4017a4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4017a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4017ac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4017b0:	4770      	bxne	lr
  4017b2:	f092 0f00 	teq	r2, #0
  4017b6:	bf14      	ite	ne
  4017b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4017bc:	4770      	bxeq	lr
  4017be:	b530      	push	{r4, r5, lr}
  4017c0:	f44f 7460 	mov.w	r4, #896	; 0x380
  4017c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4017c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4017cc:	e720      	b.n	401610 <__adddf3+0x138>
  4017ce:	bf00      	nop

004017d0 <__aeabi_ul2d>:
  4017d0:	ea50 0201 	orrs.w	r2, r0, r1
  4017d4:	bf08      	it	eq
  4017d6:	4770      	bxeq	lr
  4017d8:	b530      	push	{r4, r5, lr}
  4017da:	f04f 0500 	mov.w	r5, #0
  4017de:	e00a      	b.n	4017f6 <__aeabi_l2d+0x16>

004017e0 <__aeabi_l2d>:
  4017e0:	ea50 0201 	orrs.w	r2, r0, r1
  4017e4:	bf08      	it	eq
  4017e6:	4770      	bxeq	lr
  4017e8:	b530      	push	{r4, r5, lr}
  4017ea:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4017ee:	d502      	bpl.n	4017f6 <__aeabi_l2d+0x16>
  4017f0:	4240      	negs	r0, r0
  4017f2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4017f6:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4017fa:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4017fe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401802:	f43f aedc 	beq.w	4015be <__adddf3+0xe6>
  401806:	f04f 0203 	mov.w	r2, #3
  40180a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40180e:	bf18      	it	ne
  401810:	3203      	addne	r2, #3
  401812:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401816:	bf18      	it	ne
  401818:	3203      	addne	r2, #3
  40181a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40181e:	f1c2 0320 	rsb	r3, r2, #32
  401822:	fa00 fc03 	lsl.w	ip, r0, r3
  401826:	fa20 f002 	lsr.w	r0, r0, r2
  40182a:	fa01 fe03 	lsl.w	lr, r1, r3
  40182e:	ea40 000e 	orr.w	r0, r0, lr
  401832:	fa21 f102 	lsr.w	r1, r1, r2
  401836:	4414      	add	r4, r2
  401838:	e6c1      	b.n	4015be <__adddf3+0xe6>
  40183a:	bf00      	nop

0040183c <__aeabi_dmul>:
  40183c:	b570      	push	{r4, r5, r6, lr}
  40183e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401842:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401846:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40184a:	bf1d      	ittte	ne
  40184c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401850:	ea94 0f0c 	teqne	r4, ip
  401854:	ea95 0f0c 	teqne	r5, ip
  401858:	f000 f8de 	bleq	401a18 <__aeabi_dmul+0x1dc>
  40185c:	442c      	add	r4, r5
  40185e:	ea81 0603 	eor.w	r6, r1, r3
  401862:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401866:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40186a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40186e:	bf18      	it	ne
  401870:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401874:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401878:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40187c:	d038      	beq.n	4018f0 <__aeabi_dmul+0xb4>
  40187e:	fba0 ce02 	umull	ip, lr, r0, r2
  401882:	f04f 0500 	mov.w	r5, #0
  401886:	fbe1 e502 	umlal	lr, r5, r1, r2
  40188a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40188e:	fbe0 e503 	umlal	lr, r5, r0, r3
  401892:	f04f 0600 	mov.w	r6, #0
  401896:	fbe1 5603 	umlal	r5, r6, r1, r3
  40189a:	f09c 0f00 	teq	ip, #0
  40189e:	bf18      	it	ne
  4018a0:	f04e 0e01 	orrne.w	lr, lr, #1
  4018a4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4018a8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4018ac:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4018b0:	d204      	bcs.n	4018bc <__aeabi_dmul+0x80>
  4018b2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4018b6:	416d      	adcs	r5, r5
  4018b8:	eb46 0606 	adc.w	r6, r6, r6
  4018bc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4018c0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4018c4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4018c8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4018cc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4018d0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4018d4:	bf88      	it	hi
  4018d6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4018da:	d81e      	bhi.n	40191a <__aeabi_dmul+0xde>
  4018dc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4018e0:	bf08      	it	eq
  4018e2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4018e6:	f150 0000 	adcs.w	r0, r0, #0
  4018ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4018ee:	bd70      	pop	{r4, r5, r6, pc}
  4018f0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4018f4:	ea46 0101 	orr.w	r1, r6, r1
  4018f8:	ea40 0002 	orr.w	r0, r0, r2
  4018fc:	ea81 0103 	eor.w	r1, r1, r3
  401900:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401904:	bfc2      	ittt	gt
  401906:	ebd4 050c 	rsbsgt	r5, r4, ip
  40190a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40190e:	bd70      	popgt	{r4, r5, r6, pc}
  401910:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401914:	f04f 0e00 	mov.w	lr, #0
  401918:	3c01      	subs	r4, #1
  40191a:	f300 80ab 	bgt.w	401a74 <__aeabi_dmul+0x238>
  40191e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401922:	bfde      	ittt	le
  401924:	2000      	movle	r0, #0
  401926:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40192a:	bd70      	pople	{r4, r5, r6, pc}
  40192c:	f1c4 0400 	rsb	r4, r4, #0
  401930:	3c20      	subs	r4, #32
  401932:	da35      	bge.n	4019a0 <__aeabi_dmul+0x164>
  401934:	340c      	adds	r4, #12
  401936:	dc1b      	bgt.n	401970 <__aeabi_dmul+0x134>
  401938:	f104 0414 	add.w	r4, r4, #20
  40193c:	f1c4 0520 	rsb	r5, r4, #32
  401940:	fa00 f305 	lsl.w	r3, r0, r5
  401944:	fa20 f004 	lsr.w	r0, r0, r4
  401948:	fa01 f205 	lsl.w	r2, r1, r5
  40194c:	ea40 0002 	orr.w	r0, r0, r2
  401950:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401954:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401958:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40195c:	fa21 f604 	lsr.w	r6, r1, r4
  401960:	eb42 0106 	adc.w	r1, r2, r6
  401964:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401968:	bf08      	it	eq
  40196a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40196e:	bd70      	pop	{r4, r5, r6, pc}
  401970:	f1c4 040c 	rsb	r4, r4, #12
  401974:	f1c4 0520 	rsb	r5, r4, #32
  401978:	fa00 f304 	lsl.w	r3, r0, r4
  40197c:	fa20 f005 	lsr.w	r0, r0, r5
  401980:	fa01 f204 	lsl.w	r2, r1, r4
  401984:	ea40 0002 	orr.w	r0, r0, r2
  401988:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40198c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401990:	f141 0100 	adc.w	r1, r1, #0
  401994:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401998:	bf08      	it	eq
  40199a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40199e:	bd70      	pop	{r4, r5, r6, pc}
  4019a0:	f1c4 0520 	rsb	r5, r4, #32
  4019a4:	fa00 f205 	lsl.w	r2, r0, r5
  4019a8:	ea4e 0e02 	orr.w	lr, lr, r2
  4019ac:	fa20 f304 	lsr.w	r3, r0, r4
  4019b0:	fa01 f205 	lsl.w	r2, r1, r5
  4019b4:	ea43 0302 	orr.w	r3, r3, r2
  4019b8:	fa21 f004 	lsr.w	r0, r1, r4
  4019bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4019c0:	fa21 f204 	lsr.w	r2, r1, r4
  4019c4:	ea20 0002 	bic.w	r0, r0, r2
  4019c8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4019cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4019d0:	bf08      	it	eq
  4019d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4019d6:	bd70      	pop	{r4, r5, r6, pc}
  4019d8:	f094 0f00 	teq	r4, #0
  4019dc:	d10f      	bne.n	4019fe <__aeabi_dmul+0x1c2>
  4019de:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4019e2:	0040      	lsls	r0, r0, #1
  4019e4:	eb41 0101 	adc.w	r1, r1, r1
  4019e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4019ec:	bf08      	it	eq
  4019ee:	3c01      	subeq	r4, #1
  4019f0:	d0f7      	beq.n	4019e2 <__aeabi_dmul+0x1a6>
  4019f2:	ea41 0106 	orr.w	r1, r1, r6
  4019f6:	f095 0f00 	teq	r5, #0
  4019fa:	bf18      	it	ne
  4019fc:	4770      	bxne	lr
  4019fe:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401a02:	0052      	lsls	r2, r2, #1
  401a04:	eb43 0303 	adc.w	r3, r3, r3
  401a08:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401a0c:	bf08      	it	eq
  401a0e:	3d01      	subeq	r5, #1
  401a10:	d0f7      	beq.n	401a02 <__aeabi_dmul+0x1c6>
  401a12:	ea43 0306 	orr.w	r3, r3, r6
  401a16:	4770      	bx	lr
  401a18:	ea94 0f0c 	teq	r4, ip
  401a1c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401a20:	bf18      	it	ne
  401a22:	ea95 0f0c 	teqne	r5, ip
  401a26:	d00c      	beq.n	401a42 <__aeabi_dmul+0x206>
  401a28:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401a2c:	bf18      	it	ne
  401a2e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401a32:	d1d1      	bne.n	4019d8 <__aeabi_dmul+0x19c>
  401a34:	ea81 0103 	eor.w	r1, r1, r3
  401a38:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401a3c:	f04f 0000 	mov.w	r0, #0
  401a40:	bd70      	pop	{r4, r5, r6, pc}
  401a42:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401a46:	bf06      	itte	eq
  401a48:	4610      	moveq	r0, r2
  401a4a:	4619      	moveq	r1, r3
  401a4c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401a50:	d019      	beq.n	401a86 <__aeabi_dmul+0x24a>
  401a52:	ea94 0f0c 	teq	r4, ip
  401a56:	d102      	bne.n	401a5e <__aeabi_dmul+0x222>
  401a58:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401a5c:	d113      	bne.n	401a86 <__aeabi_dmul+0x24a>
  401a5e:	ea95 0f0c 	teq	r5, ip
  401a62:	d105      	bne.n	401a70 <__aeabi_dmul+0x234>
  401a64:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401a68:	bf1c      	itt	ne
  401a6a:	4610      	movne	r0, r2
  401a6c:	4619      	movne	r1, r3
  401a6e:	d10a      	bne.n	401a86 <__aeabi_dmul+0x24a>
  401a70:	ea81 0103 	eor.w	r1, r1, r3
  401a74:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401a78:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401a7c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401a80:	f04f 0000 	mov.w	r0, #0
  401a84:	bd70      	pop	{r4, r5, r6, pc}
  401a86:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401a8a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401a8e:	bd70      	pop	{r4, r5, r6, pc}

00401a90 <__aeabi_ddiv>:
  401a90:	b570      	push	{r4, r5, r6, lr}
  401a92:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401a96:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401a9a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401a9e:	bf1d      	ittte	ne
  401aa0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401aa4:	ea94 0f0c 	teqne	r4, ip
  401aa8:	ea95 0f0c 	teqne	r5, ip
  401aac:	f000 f8a7 	bleq	401bfe <__aeabi_ddiv+0x16e>
  401ab0:	eba4 0405 	sub.w	r4, r4, r5
  401ab4:	ea81 0e03 	eor.w	lr, r1, r3
  401ab8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401abc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401ac0:	f000 8088 	beq.w	401bd4 <__aeabi_ddiv+0x144>
  401ac4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401ac8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401acc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401ad0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401ad4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401ad8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401adc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401ae0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401ae4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401ae8:	429d      	cmp	r5, r3
  401aea:	bf08      	it	eq
  401aec:	4296      	cmpeq	r6, r2
  401aee:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401af2:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401af6:	d202      	bcs.n	401afe <__aeabi_ddiv+0x6e>
  401af8:	085b      	lsrs	r3, r3, #1
  401afa:	ea4f 0232 	mov.w	r2, r2, rrx
  401afe:	1ab6      	subs	r6, r6, r2
  401b00:	eb65 0503 	sbc.w	r5, r5, r3
  401b04:	085b      	lsrs	r3, r3, #1
  401b06:	ea4f 0232 	mov.w	r2, r2, rrx
  401b0a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401b0e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401b12:	ebb6 0e02 	subs.w	lr, r6, r2
  401b16:	eb75 0e03 	sbcs.w	lr, r5, r3
  401b1a:	bf22      	ittt	cs
  401b1c:	1ab6      	subcs	r6, r6, r2
  401b1e:	4675      	movcs	r5, lr
  401b20:	ea40 000c 	orrcs.w	r0, r0, ip
  401b24:	085b      	lsrs	r3, r3, #1
  401b26:	ea4f 0232 	mov.w	r2, r2, rrx
  401b2a:	ebb6 0e02 	subs.w	lr, r6, r2
  401b2e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401b32:	bf22      	ittt	cs
  401b34:	1ab6      	subcs	r6, r6, r2
  401b36:	4675      	movcs	r5, lr
  401b38:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401b3c:	085b      	lsrs	r3, r3, #1
  401b3e:	ea4f 0232 	mov.w	r2, r2, rrx
  401b42:	ebb6 0e02 	subs.w	lr, r6, r2
  401b46:	eb75 0e03 	sbcs.w	lr, r5, r3
  401b4a:	bf22      	ittt	cs
  401b4c:	1ab6      	subcs	r6, r6, r2
  401b4e:	4675      	movcs	r5, lr
  401b50:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401b54:	085b      	lsrs	r3, r3, #1
  401b56:	ea4f 0232 	mov.w	r2, r2, rrx
  401b5a:	ebb6 0e02 	subs.w	lr, r6, r2
  401b5e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401b62:	bf22      	ittt	cs
  401b64:	1ab6      	subcs	r6, r6, r2
  401b66:	4675      	movcs	r5, lr
  401b68:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401b6c:	ea55 0e06 	orrs.w	lr, r5, r6
  401b70:	d018      	beq.n	401ba4 <__aeabi_ddiv+0x114>
  401b72:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401b76:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401b7a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401b7e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401b82:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401b86:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401b8a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401b8e:	d1c0      	bne.n	401b12 <__aeabi_ddiv+0x82>
  401b90:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401b94:	d10b      	bne.n	401bae <__aeabi_ddiv+0x11e>
  401b96:	ea41 0100 	orr.w	r1, r1, r0
  401b9a:	f04f 0000 	mov.w	r0, #0
  401b9e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401ba2:	e7b6      	b.n	401b12 <__aeabi_ddiv+0x82>
  401ba4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ba8:	bf04      	itt	eq
  401baa:	4301      	orreq	r1, r0
  401bac:	2000      	moveq	r0, #0
  401bae:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401bb2:	bf88      	it	hi
  401bb4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401bb8:	f63f aeaf 	bhi.w	40191a <__aeabi_dmul+0xde>
  401bbc:	ebb5 0c03 	subs.w	ip, r5, r3
  401bc0:	bf04      	itt	eq
  401bc2:	ebb6 0c02 	subseq.w	ip, r6, r2
  401bc6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401bca:	f150 0000 	adcs.w	r0, r0, #0
  401bce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401bd2:	bd70      	pop	{r4, r5, r6, pc}
  401bd4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401bd8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401bdc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401be0:	bfc2      	ittt	gt
  401be2:	ebd4 050c 	rsbsgt	r5, r4, ip
  401be6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401bea:	bd70      	popgt	{r4, r5, r6, pc}
  401bec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401bf0:	f04f 0e00 	mov.w	lr, #0
  401bf4:	3c01      	subs	r4, #1
  401bf6:	e690      	b.n	40191a <__aeabi_dmul+0xde>
  401bf8:	ea45 0e06 	orr.w	lr, r5, r6
  401bfc:	e68d      	b.n	40191a <__aeabi_dmul+0xde>
  401bfe:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401c02:	ea94 0f0c 	teq	r4, ip
  401c06:	bf08      	it	eq
  401c08:	ea95 0f0c 	teqeq	r5, ip
  401c0c:	f43f af3b 	beq.w	401a86 <__aeabi_dmul+0x24a>
  401c10:	ea94 0f0c 	teq	r4, ip
  401c14:	d10a      	bne.n	401c2c <__aeabi_ddiv+0x19c>
  401c16:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401c1a:	f47f af34 	bne.w	401a86 <__aeabi_dmul+0x24a>
  401c1e:	ea95 0f0c 	teq	r5, ip
  401c22:	f47f af25 	bne.w	401a70 <__aeabi_dmul+0x234>
  401c26:	4610      	mov	r0, r2
  401c28:	4619      	mov	r1, r3
  401c2a:	e72c      	b.n	401a86 <__aeabi_dmul+0x24a>
  401c2c:	ea95 0f0c 	teq	r5, ip
  401c30:	d106      	bne.n	401c40 <__aeabi_ddiv+0x1b0>
  401c32:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401c36:	f43f aefd 	beq.w	401a34 <__aeabi_dmul+0x1f8>
  401c3a:	4610      	mov	r0, r2
  401c3c:	4619      	mov	r1, r3
  401c3e:	e722      	b.n	401a86 <__aeabi_dmul+0x24a>
  401c40:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401c44:	bf18      	it	ne
  401c46:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401c4a:	f47f aec5 	bne.w	4019d8 <__aeabi_dmul+0x19c>
  401c4e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401c52:	f47f af0d 	bne.w	401a70 <__aeabi_dmul+0x234>
  401c56:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401c5a:	f47f aeeb 	bne.w	401a34 <__aeabi_dmul+0x1f8>
  401c5e:	e712      	b.n	401a86 <__aeabi_dmul+0x24a>

00401c60 <__libc_init_array>:
  401c60:	b570      	push	{r4, r5, r6, lr}
  401c62:	4e0f      	ldr	r6, [pc, #60]	; (401ca0 <__libc_init_array+0x40>)
  401c64:	4d0f      	ldr	r5, [pc, #60]	; (401ca4 <__libc_init_array+0x44>)
  401c66:	1b76      	subs	r6, r6, r5
  401c68:	10b6      	asrs	r6, r6, #2
  401c6a:	bf18      	it	ne
  401c6c:	2400      	movne	r4, #0
  401c6e:	d005      	beq.n	401c7c <__libc_init_array+0x1c>
  401c70:	3401      	adds	r4, #1
  401c72:	f855 3b04 	ldr.w	r3, [r5], #4
  401c76:	4798      	blx	r3
  401c78:	42a6      	cmp	r6, r4
  401c7a:	d1f9      	bne.n	401c70 <__libc_init_array+0x10>
  401c7c:	4e0a      	ldr	r6, [pc, #40]	; (401ca8 <__libc_init_array+0x48>)
  401c7e:	4d0b      	ldr	r5, [pc, #44]	; (401cac <__libc_init_array+0x4c>)
  401c80:	1b76      	subs	r6, r6, r5
  401c82:	f004 ff19 	bl	406ab8 <_init>
  401c86:	10b6      	asrs	r6, r6, #2
  401c88:	bf18      	it	ne
  401c8a:	2400      	movne	r4, #0
  401c8c:	d006      	beq.n	401c9c <__libc_init_array+0x3c>
  401c8e:	3401      	adds	r4, #1
  401c90:	f855 3b04 	ldr.w	r3, [r5], #4
  401c94:	4798      	blx	r3
  401c96:	42a6      	cmp	r6, r4
  401c98:	d1f9      	bne.n	401c8e <__libc_init_array+0x2e>
  401c9a:	bd70      	pop	{r4, r5, r6, pc}
  401c9c:	bd70      	pop	{r4, r5, r6, pc}
  401c9e:	bf00      	nop
  401ca0:	00406ac4 	.word	0x00406ac4
  401ca4:	00406ac4 	.word	0x00406ac4
  401ca8:	00406acc 	.word	0x00406acc
  401cac:	00406ac4 	.word	0x00406ac4

00401cb0 <memset>:
  401cb0:	b470      	push	{r4, r5, r6}
  401cb2:	0786      	lsls	r6, r0, #30
  401cb4:	d046      	beq.n	401d44 <memset+0x94>
  401cb6:	1e54      	subs	r4, r2, #1
  401cb8:	2a00      	cmp	r2, #0
  401cba:	d041      	beq.n	401d40 <memset+0x90>
  401cbc:	b2ca      	uxtb	r2, r1
  401cbe:	4603      	mov	r3, r0
  401cc0:	e002      	b.n	401cc8 <memset+0x18>
  401cc2:	f114 34ff 	adds.w	r4, r4, #4294967295
  401cc6:	d33b      	bcc.n	401d40 <memset+0x90>
  401cc8:	f803 2b01 	strb.w	r2, [r3], #1
  401ccc:	079d      	lsls	r5, r3, #30
  401cce:	d1f8      	bne.n	401cc2 <memset+0x12>
  401cd0:	2c03      	cmp	r4, #3
  401cd2:	d92e      	bls.n	401d32 <memset+0x82>
  401cd4:	b2cd      	uxtb	r5, r1
  401cd6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401cda:	2c0f      	cmp	r4, #15
  401cdc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401ce0:	d919      	bls.n	401d16 <memset+0x66>
  401ce2:	f103 0210 	add.w	r2, r3, #16
  401ce6:	4626      	mov	r6, r4
  401ce8:	3e10      	subs	r6, #16
  401cea:	2e0f      	cmp	r6, #15
  401cec:	f842 5c10 	str.w	r5, [r2, #-16]
  401cf0:	f842 5c0c 	str.w	r5, [r2, #-12]
  401cf4:	f842 5c08 	str.w	r5, [r2, #-8]
  401cf8:	f842 5c04 	str.w	r5, [r2, #-4]
  401cfc:	f102 0210 	add.w	r2, r2, #16
  401d00:	d8f2      	bhi.n	401ce8 <memset+0x38>
  401d02:	f1a4 0210 	sub.w	r2, r4, #16
  401d06:	f022 020f 	bic.w	r2, r2, #15
  401d0a:	f004 040f 	and.w	r4, r4, #15
  401d0e:	3210      	adds	r2, #16
  401d10:	2c03      	cmp	r4, #3
  401d12:	4413      	add	r3, r2
  401d14:	d90d      	bls.n	401d32 <memset+0x82>
  401d16:	461e      	mov	r6, r3
  401d18:	4622      	mov	r2, r4
  401d1a:	3a04      	subs	r2, #4
  401d1c:	2a03      	cmp	r2, #3
  401d1e:	f846 5b04 	str.w	r5, [r6], #4
  401d22:	d8fa      	bhi.n	401d1a <memset+0x6a>
  401d24:	1f22      	subs	r2, r4, #4
  401d26:	f022 0203 	bic.w	r2, r2, #3
  401d2a:	3204      	adds	r2, #4
  401d2c:	4413      	add	r3, r2
  401d2e:	f004 0403 	and.w	r4, r4, #3
  401d32:	b12c      	cbz	r4, 401d40 <memset+0x90>
  401d34:	b2c9      	uxtb	r1, r1
  401d36:	441c      	add	r4, r3
  401d38:	f803 1b01 	strb.w	r1, [r3], #1
  401d3c:	429c      	cmp	r4, r3
  401d3e:	d1fb      	bne.n	401d38 <memset+0x88>
  401d40:	bc70      	pop	{r4, r5, r6}
  401d42:	4770      	bx	lr
  401d44:	4614      	mov	r4, r2
  401d46:	4603      	mov	r3, r0
  401d48:	e7c2      	b.n	401cd0 <memset+0x20>
  401d4a:	bf00      	nop

00401d4c <sprintf>:
  401d4c:	b40e      	push	{r1, r2, r3}
  401d4e:	b5f0      	push	{r4, r5, r6, r7, lr}
  401d50:	b09c      	sub	sp, #112	; 0x70
  401d52:	ab21      	add	r3, sp, #132	; 0x84
  401d54:	490f      	ldr	r1, [pc, #60]	; (401d94 <sprintf+0x48>)
  401d56:	f853 2b04 	ldr.w	r2, [r3], #4
  401d5a:	9301      	str	r3, [sp, #4]
  401d5c:	4605      	mov	r5, r0
  401d5e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401d62:	6808      	ldr	r0, [r1, #0]
  401d64:	9502      	str	r5, [sp, #8]
  401d66:	f44f 7702 	mov.w	r7, #520	; 0x208
  401d6a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401d6e:	a902      	add	r1, sp, #8
  401d70:	9506      	str	r5, [sp, #24]
  401d72:	f8ad 7014 	strh.w	r7, [sp, #20]
  401d76:	9404      	str	r4, [sp, #16]
  401d78:	9407      	str	r4, [sp, #28]
  401d7a:	f8ad 6016 	strh.w	r6, [sp, #22]
  401d7e:	f000 f80b 	bl	401d98 <_svfprintf_r>
  401d82:	9b02      	ldr	r3, [sp, #8]
  401d84:	2200      	movs	r2, #0
  401d86:	701a      	strb	r2, [r3, #0]
  401d88:	b01c      	add	sp, #112	; 0x70
  401d8a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401d8e:	b003      	add	sp, #12
  401d90:	4770      	bx	lr
  401d92:	bf00      	nop
  401d94:	20400020 	.word	0x20400020

00401d98 <_svfprintf_r>:
  401d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401d9c:	b0c3      	sub	sp, #268	; 0x10c
  401d9e:	460c      	mov	r4, r1
  401da0:	910b      	str	r1, [sp, #44]	; 0x2c
  401da2:	4692      	mov	sl, r2
  401da4:	930f      	str	r3, [sp, #60]	; 0x3c
  401da6:	900c      	str	r0, [sp, #48]	; 0x30
  401da8:	f002 fa0e 	bl	4041c8 <_localeconv_r>
  401dac:	6803      	ldr	r3, [r0, #0]
  401dae:	931a      	str	r3, [sp, #104]	; 0x68
  401db0:	4618      	mov	r0, r3
  401db2:	f003 f8e5 	bl	404f80 <strlen>
  401db6:	89a3      	ldrh	r3, [r4, #12]
  401db8:	9019      	str	r0, [sp, #100]	; 0x64
  401dba:	0619      	lsls	r1, r3, #24
  401dbc:	d503      	bpl.n	401dc6 <_svfprintf_r+0x2e>
  401dbe:	6923      	ldr	r3, [r4, #16]
  401dc0:	2b00      	cmp	r3, #0
  401dc2:	f001 8003 	beq.w	402dcc <_svfprintf_r+0x1034>
  401dc6:	2300      	movs	r3, #0
  401dc8:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401dcc:	9313      	str	r3, [sp, #76]	; 0x4c
  401dce:	9315      	str	r3, [sp, #84]	; 0x54
  401dd0:	9314      	str	r3, [sp, #80]	; 0x50
  401dd2:	9327      	str	r3, [sp, #156]	; 0x9c
  401dd4:	9326      	str	r3, [sp, #152]	; 0x98
  401dd6:	9318      	str	r3, [sp, #96]	; 0x60
  401dd8:	931b      	str	r3, [sp, #108]	; 0x6c
  401dda:	9309      	str	r3, [sp, #36]	; 0x24
  401ddc:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401de0:	46c8      	mov	r8, r9
  401de2:	9316      	str	r3, [sp, #88]	; 0x58
  401de4:	9317      	str	r3, [sp, #92]	; 0x5c
  401de6:	f89a 3000 	ldrb.w	r3, [sl]
  401dea:	4654      	mov	r4, sl
  401dec:	b1e3      	cbz	r3, 401e28 <_svfprintf_r+0x90>
  401dee:	2b25      	cmp	r3, #37	; 0x25
  401df0:	d102      	bne.n	401df8 <_svfprintf_r+0x60>
  401df2:	e019      	b.n	401e28 <_svfprintf_r+0x90>
  401df4:	2b25      	cmp	r3, #37	; 0x25
  401df6:	d003      	beq.n	401e00 <_svfprintf_r+0x68>
  401df8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401dfc:	2b00      	cmp	r3, #0
  401dfe:	d1f9      	bne.n	401df4 <_svfprintf_r+0x5c>
  401e00:	eba4 050a 	sub.w	r5, r4, sl
  401e04:	b185      	cbz	r5, 401e28 <_svfprintf_r+0x90>
  401e06:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e08:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401e0a:	f8c8 a000 	str.w	sl, [r8]
  401e0e:	3301      	adds	r3, #1
  401e10:	442a      	add	r2, r5
  401e12:	2b07      	cmp	r3, #7
  401e14:	f8c8 5004 	str.w	r5, [r8, #4]
  401e18:	9227      	str	r2, [sp, #156]	; 0x9c
  401e1a:	9326      	str	r3, [sp, #152]	; 0x98
  401e1c:	dc7f      	bgt.n	401f1e <_svfprintf_r+0x186>
  401e1e:	f108 0808 	add.w	r8, r8, #8
  401e22:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401e24:	442b      	add	r3, r5
  401e26:	9309      	str	r3, [sp, #36]	; 0x24
  401e28:	7823      	ldrb	r3, [r4, #0]
  401e2a:	2b00      	cmp	r3, #0
  401e2c:	d07f      	beq.n	401f2e <_svfprintf_r+0x196>
  401e2e:	2300      	movs	r3, #0
  401e30:	461a      	mov	r2, r3
  401e32:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401e36:	4619      	mov	r1, r3
  401e38:	930d      	str	r3, [sp, #52]	; 0x34
  401e3a:	469b      	mov	fp, r3
  401e3c:	f04f 30ff 	mov.w	r0, #4294967295
  401e40:	7863      	ldrb	r3, [r4, #1]
  401e42:	900a      	str	r0, [sp, #40]	; 0x28
  401e44:	f104 0a01 	add.w	sl, r4, #1
  401e48:	f10a 0a01 	add.w	sl, sl, #1
  401e4c:	f1a3 0020 	sub.w	r0, r3, #32
  401e50:	2858      	cmp	r0, #88	; 0x58
  401e52:	f200 83c1 	bhi.w	4025d8 <_svfprintf_r+0x840>
  401e56:	e8df f010 	tbh	[pc, r0, lsl #1]
  401e5a:	0238      	.short	0x0238
  401e5c:	03bf03bf 	.word	0x03bf03bf
  401e60:	03bf0240 	.word	0x03bf0240
  401e64:	03bf03bf 	.word	0x03bf03bf
  401e68:	03bf03bf 	.word	0x03bf03bf
  401e6c:	024503bf 	.word	0x024503bf
  401e70:	03bf0203 	.word	0x03bf0203
  401e74:	026b005d 	.word	0x026b005d
  401e78:	028603bf 	.word	0x028603bf
  401e7c:	039d039d 	.word	0x039d039d
  401e80:	039d039d 	.word	0x039d039d
  401e84:	039d039d 	.word	0x039d039d
  401e88:	039d039d 	.word	0x039d039d
  401e8c:	03bf039d 	.word	0x03bf039d
  401e90:	03bf03bf 	.word	0x03bf03bf
  401e94:	03bf03bf 	.word	0x03bf03bf
  401e98:	03bf03bf 	.word	0x03bf03bf
  401e9c:	03bf03bf 	.word	0x03bf03bf
  401ea0:	033703bf 	.word	0x033703bf
  401ea4:	03bf0357 	.word	0x03bf0357
  401ea8:	03bf0357 	.word	0x03bf0357
  401eac:	03bf03bf 	.word	0x03bf03bf
  401eb0:	039803bf 	.word	0x039803bf
  401eb4:	03bf03bf 	.word	0x03bf03bf
  401eb8:	03bf03ad 	.word	0x03bf03ad
  401ebc:	03bf03bf 	.word	0x03bf03bf
  401ec0:	03bf03bf 	.word	0x03bf03bf
  401ec4:	03bf0259 	.word	0x03bf0259
  401ec8:	031e03bf 	.word	0x031e03bf
  401ecc:	03bf03bf 	.word	0x03bf03bf
  401ed0:	03bf03bf 	.word	0x03bf03bf
  401ed4:	03bf03bf 	.word	0x03bf03bf
  401ed8:	03bf03bf 	.word	0x03bf03bf
  401edc:	03bf03bf 	.word	0x03bf03bf
  401ee0:	02db02c6 	.word	0x02db02c6
  401ee4:	03570357 	.word	0x03570357
  401ee8:	028b0357 	.word	0x028b0357
  401eec:	03bf02db 	.word	0x03bf02db
  401ef0:	029003bf 	.word	0x029003bf
  401ef4:	029d03bf 	.word	0x029d03bf
  401ef8:	02b401cc 	.word	0x02b401cc
  401efc:	03bf0208 	.word	0x03bf0208
  401f00:	03bf01e1 	.word	0x03bf01e1
  401f04:	03bf007e 	.word	0x03bf007e
  401f08:	020d03bf 	.word	0x020d03bf
  401f0c:	980d      	ldr	r0, [sp, #52]	; 0x34
  401f0e:	930f      	str	r3, [sp, #60]	; 0x3c
  401f10:	4240      	negs	r0, r0
  401f12:	900d      	str	r0, [sp, #52]	; 0x34
  401f14:	f04b 0b04 	orr.w	fp, fp, #4
  401f18:	f89a 3000 	ldrb.w	r3, [sl]
  401f1c:	e794      	b.n	401e48 <_svfprintf_r+0xb0>
  401f1e:	aa25      	add	r2, sp, #148	; 0x94
  401f20:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f22:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f24:	f003 f89a 	bl	40505c <__ssprint_r>
  401f28:	b940      	cbnz	r0, 401f3c <_svfprintf_r+0x1a4>
  401f2a:	46c8      	mov	r8, r9
  401f2c:	e779      	b.n	401e22 <_svfprintf_r+0x8a>
  401f2e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401f30:	b123      	cbz	r3, 401f3c <_svfprintf_r+0x1a4>
  401f32:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f36:	aa25      	add	r2, sp, #148	; 0x94
  401f38:	f003 f890 	bl	40505c <__ssprint_r>
  401f3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401f3e:	899b      	ldrh	r3, [r3, #12]
  401f40:	f013 0f40 	tst.w	r3, #64	; 0x40
  401f44:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f46:	bf18      	it	ne
  401f48:	f04f 33ff 	movne.w	r3, #4294967295
  401f4c:	9309      	str	r3, [sp, #36]	; 0x24
  401f4e:	9809      	ldr	r0, [sp, #36]	; 0x24
  401f50:	b043      	add	sp, #268	; 0x10c
  401f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f56:	f01b 0f20 	tst.w	fp, #32
  401f5a:	9311      	str	r3, [sp, #68]	; 0x44
  401f5c:	f040 81dd 	bne.w	40231a <_svfprintf_r+0x582>
  401f60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f62:	f01b 0f10 	tst.w	fp, #16
  401f66:	4613      	mov	r3, r2
  401f68:	f040 856e 	bne.w	402a48 <_svfprintf_r+0xcb0>
  401f6c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401f70:	f000 856a 	beq.w	402a48 <_svfprintf_r+0xcb0>
  401f74:	8814      	ldrh	r4, [r2, #0]
  401f76:	3204      	adds	r2, #4
  401f78:	2500      	movs	r5, #0
  401f7a:	2301      	movs	r3, #1
  401f7c:	920f      	str	r2, [sp, #60]	; 0x3c
  401f7e:	2700      	movs	r7, #0
  401f80:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401f84:	990a      	ldr	r1, [sp, #40]	; 0x28
  401f86:	1c4a      	adds	r2, r1, #1
  401f88:	f000 8265 	beq.w	402456 <_svfprintf_r+0x6be>
  401f8c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401f90:	9207      	str	r2, [sp, #28]
  401f92:	ea54 0205 	orrs.w	r2, r4, r5
  401f96:	f040 8264 	bne.w	402462 <_svfprintf_r+0x6ca>
  401f9a:	2900      	cmp	r1, #0
  401f9c:	f040 843c 	bne.w	402818 <_svfprintf_r+0xa80>
  401fa0:	2b00      	cmp	r3, #0
  401fa2:	f040 84d7 	bne.w	402954 <_svfprintf_r+0xbbc>
  401fa6:	f01b 0301 	ands.w	r3, fp, #1
  401faa:	930e      	str	r3, [sp, #56]	; 0x38
  401fac:	f000 8604 	beq.w	402bb8 <_svfprintf_r+0xe20>
  401fb0:	ae42      	add	r6, sp, #264	; 0x108
  401fb2:	2330      	movs	r3, #48	; 0x30
  401fb4:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401fb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401fba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401fbc:	4293      	cmp	r3, r2
  401fbe:	bfb8      	it	lt
  401fc0:	4613      	movlt	r3, r2
  401fc2:	9308      	str	r3, [sp, #32]
  401fc4:	2300      	movs	r3, #0
  401fc6:	9312      	str	r3, [sp, #72]	; 0x48
  401fc8:	b117      	cbz	r7, 401fd0 <_svfprintf_r+0x238>
  401fca:	9b08      	ldr	r3, [sp, #32]
  401fcc:	3301      	adds	r3, #1
  401fce:	9308      	str	r3, [sp, #32]
  401fd0:	9b07      	ldr	r3, [sp, #28]
  401fd2:	f013 0302 	ands.w	r3, r3, #2
  401fd6:	9310      	str	r3, [sp, #64]	; 0x40
  401fd8:	d002      	beq.n	401fe0 <_svfprintf_r+0x248>
  401fda:	9b08      	ldr	r3, [sp, #32]
  401fdc:	3302      	adds	r3, #2
  401fde:	9308      	str	r3, [sp, #32]
  401fe0:	9b07      	ldr	r3, [sp, #28]
  401fe2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401fe6:	f040 830e 	bne.w	402606 <_svfprintf_r+0x86e>
  401fea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401fec:	9a08      	ldr	r2, [sp, #32]
  401fee:	eba3 0b02 	sub.w	fp, r3, r2
  401ff2:	f1bb 0f00 	cmp.w	fp, #0
  401ff6:	f340 8306 	ble.w	402606 <_svfprintf_r+0x86e>
  401ffa:	f1bb 0f10 	cmp.w	fp, #16
  401ffe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402000:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402002:	dd29      	ble.n	402058 <_svfprintf_r+0x2c0>
  402004:	4643      	mov	r3, r8
  402006:	4621      	mov	r1, r4
  402008:	46a8      	mov	r8, r5
  40200a:	2710      	movs	r7, #16
  40200c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40200e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402010:	e006      	b.n	402020 <_svfprintf_r+0x288>
  402012:	f1ab 0b10 	sub.w	fp, fp, #16
  402016:	f1bb 0f10 	cmp.w	fp, #16
  40201a:	f103 0308 	add.w	r3, r3, #8
  40201e:	dd18      	ble.n	402052 <_svfprintf_r+0x2ba>
  402020:	3201      	adds	r2, #1
  402022:	48b7      	ldr	r0, [pc, #732]	; (402300 <_svfprintf_r+0x568>)
  402024:	9226      	str	r2, [sp, #152]	; 0x98
  402026:	3110      	adds	r1, #16
  402028:	2a07      	cmp	r2, #7
  40202a:	9127      	str	r1, [sp, #156]	; 0x9c
  40202c:	e883 0081 	stmia.w	r3, {r0, r7}
  402030:	ddef      	ble.n	402012 <_svfprintf_r+0x27a>
  402032:	aa25      	add	r2, sp, #148	; 0x94
  402034:	4629      	mov	r1, r5
  402036:	4620      	mov	r0, r4
  402038:	f003 f810 	bl	40505c <__ssprint_r>
  40203c:	2800      	cmp	r0, #0
  40203e:	f47f af7d 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402042:	f1ab 0b10 	sub.w	fp, fp, #16
  402046:	f1bb 0f10 	cmp.w	fp, #16
  40204a:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40204c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40204e:	464b      	mov	r3, r9
  402050:	dce6      	bgt.n	402020 <_svfprintf_r+0x288>
  402052:	4645      	mov	r5, r8
  402054:	460c      	mov	r4, r1
  402056:	4698      	mov	r8, r3
  402058:	3201      	adds	r2, #1
  40205a:	4ba9      	ldr	r3, [pc, #676]	; (402300 <_svfprintf_r+0x568>)
  40205c:	9226      	str	r2, [sp, #152]	; 0x98
  40205e:	445c      	add	r4, fp
  402060:	2a07      	cmp	r2, #7
  402062:	9427      	str	r4, [sp, #156]	; 0x9c
  402064:	e888 0808 	stmia.w	r8, {r3, fp}
  402068:	f300 8498 	bgt.w	40299c <_svfprintf_r+0xc04>
  40206c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402070:	f108 0808 	add.w	r8, r8, #8
  402074:	b177      	cbz	r7, 402094 <_svfprintf_r+0x2fc>
  402076:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402078:	3301      	adds	r3, #1
  40207a:	3401      	adds	r4, #1
  40207c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402080:	2201      	movs	r2, #1
  402082:	2b07      	cmp	r3, #7
  402084:	9427      	str	r4, [sp, #156]	; 0x9c
  402086:	9326      	str	r3, [sp, #152]	; 0x98
  402088:	e888 0006 	stmia.w	r8, {r1, r2}
  40208c:	f300 83db 	bgt.w	402846 <_svfprintf_r+0xaae>
  402090:	f108 0808 	add.w	r8, r8, #8
  402094:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402096:	b16b      	cbz	r3, 4020b4 <_svfprintf_r+0x31c>
  402098:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40209a:	3301      	adds	r3, #1
  40209c:	3402      	adds	r4, #2
  40209e:	a91e      	add	r1, sp, #120	; 0x78
  4020a0:	2202      	movs	r2, #2
  4020a2:	2b07      	cmp	r3, #7
  4020a4:	9427      	str	r4, [sp, #156]	; 0x9c
  4020a6:	9326      	str	r3, [sp, #152]	; 0x98
  4020a8:	e888 0006 	stmia.w	r8, {r1, r2}
  4020ac:	f300 83d6 	bgt.w	40285c <_svfprintf_r+0xac4>
  4020b0:	f108 0808 	add.w	r8, r8, #8
  4020b4:	2d80      	cmp	r5, #128	; 0x80
  4020b6:	f000 8315 	beq.w	4026e4 <_svfprintf_r+0x94c>
  4020ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4020bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4020be:	1a9f      	subs	r7, r3, r2
  4020c0:	2f00      	cmp	r7, #0
  4020c2:	dd36      	ble.n	402132 <_svfprintf_r+0x39a>
  4020c4:	2f10      	cmp	r7, #16
  4020c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020c8:	4d8e      	ldr	r5, [pc, #568]	; (402304 <_svfprintf_r+0x56c>)
  4020ca:	dd27      	ble.n	40211c <_svfprintf_r+0x384>
  4020cc:	4642      	mov	r2, r8
  4020ce:	4621      	mov	r1, r4
  4020d0:	46b0      	mov	r8, r6
  4020d2:	f04f 0b10 	mov.w	fp, #16
  4020d6:	462e      	mov	r6, r5
  4020d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4020da:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4020dc:	e004      	b.n	4020e8 <_svfprintf_r+0x350>
  4020de:	3f10      	subs	r7, #16
  4020e0:	2f10      	cmp	r7, #16
  4020e2:	f102 0208 	add.w	r2, r2, #8
  4020e6:	dd15      	ble.n	402114 <_svfprintf_r+0x37c>
  4020e8:	3301      	adds	r3, #1
  4020ea:	3110      	adds	r1, #16
  4020ec:	2b07      	cmp	r3, #7
  4020ee:	9127      	str	r1, [sp, #156]	; 0x9c
  4020f0:	9326      	str	r3, [sp, #152]	; 0x98
  4020f2:	e882 0840 	stmia.w	r2, {r6, fp}
  4020f6:	ddf2      	ble.n	4020de <_svfprintf_r+0x346>
  4020f8:	aa25      	add	r2, sp, #148	; 0x94
  4020fa:	4629      	mov	r1, r5
  4020fc:	4620      	mov	r0, r4
  4020fe:	f002 ffad 	bl	40505c <__ssprint_r>
  402102:	2800      	cmp	r0, #0
  402104:	f47f af1a 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402108:	3f10      	subs	r7, #16
  40210a:	2f10      	cmp	r7, #16
  40210c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40210e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402110:	464a      	mov	r2, r9
  402112:	dce9      	bgt.n	4020e8 <_svfprintf_r+0x350>
  402114:	4635      	mov	r5, r6
  402116:	460c      	mov	r4, r1
  402118:	4646      	mov	r6, r8
  40211a:	4690      	mov	r8, r2
  40211c:	3301      	adds	r3, #1
  40211e:	443c      	add	r4, r7
  402120:	2b07      	cmp	r3, #7
  402122:	9427      	str	r4, [sp, #156]	; 0x9c
  402124:	9326      	str	r3, [sp, #152]	; 0x98
  402126:	e888 00a0 	stmia.w	r8, {r5, r7}
  40212a:	f300 8381 	bgt.w	402830 <_svfprintf_r+0xa98>
  40212e:	f108 0808 	add.w	r8, r8, #8
  402132:	9b07      	ldr	r3, [sp, #28]
  402134:	05df      	lsls	r7, r3, #23
  402136:	f100 8268 	bmi.w	40260a <_svfprintf_r+0x872>
  40213a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40213c:	990e      	ldr	r1, [sp, #56]	; 0x38
  40213e:	f8c8 6000 	str.w	r6, [r8]
  402142:	3301      	adds	r3, #1
  402144:	440c      	add	r4, r1
  402146:	2b07      	cmp	r3, #7
  402148:	9427      	str	r4, [sp, #156]	; 0x9c
  40214a:	f8c8 1004 	str.w	r1, [r8, #4]
  40214e:	9326      	str	r3, [sp, #152]	; 0x98
  402150:	f300 834d 	bgt.w	4027ee <_svfprintf_r+0xa56>
  402154:	f108 0808 	add.w	r8, r8, #8
  402158:	9b07      	ldr	r3, [sp, #28]
  40215a:	075b      	lsls	r3, r3, #29
  40215c:	d53a      	bpl.n	4021d4 <_svfprintf_r+0x43c>
  40215e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402160:	9a08      	ldr	r2, [sp, #32]
  402162:	1a9d      	subs	r5, r3, r2
  402164:	2d00      	cmp	r5, #0
  402166:	dd35      	ble.n	4021d4 <_svfprintf_r+0x43c>
  402168:	2d10      	cmp	r5, #16
  40216a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40216c:	dd20      	ble.n	4021b0 <_svfprintf_r+0x418>
  40216e:	2610      	movs	r6, #16
  402170:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402172:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402176:	e004      	b.n	402182 <_svfprintf_r+0x3ea>
  402178:	3d10      	subs	r5, #16
  40217a:	2d10      	cmp	r5, #16
  40217c:	f108 0808 	add.w	r8, r8, #8
  402180:	dd16      	ble.n	4021b0 <_svfprintf_r+0x418>
  402182:	3301      	adds	r3, #1
  402184:	4a5e      	ldr	r2, [pc, #376]	; (402300 <_svfprintf_r+0x568>)
  402186:	9326      	str	r3, [sp, #152]	; 0x98
  402188:	3410      	adds	r4, #16
  40218a:	2b07      	cmp	r3, #7
  40218c:	9427      	str	r4, [sp, #156]	; 0x9c
  40218e:	e888 0044 	stmia.w	r8, {r2, r6}
  402192:	ddf1      	ble.n	402178 <_svfprintf_r+0x3e0>
  402194:	aa25      	add	r2, sp, #148	; 0x94
  402196:	4659      	mov	r1, fp
  402198:	4638      	mov	r0, r7
  40219a:	f002 ff5f 	bl	40505c <__ssprint_r>
  40219e:	2800      	cmp	r0, #0
  4021a0:	f47f aecc 	bne.w	401f3c <_svfprintf_r+0x1a4>
  4021a4:	3d10      	subs	r5, #16
  4021a6:	2d10      	cmp	r5, #16
  4021a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4021aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021ac:	46c8      	mov	r8, r9
  4021ae:	dce8      	bgt.n	402182 <_svfprintf_r+0x3ea>
  4021b0:	3301      	adds	r3, #1
  4021b2:	4a53      	ldr	r2, [pc, #332]	; (402300 <_svfprintf_r+0x568>)
  4021b4:	9326      	str	r3, [sp, #152]	; 0x98
  4021b6:	442c      	add	r4, r5
  4021b8:	2b07      	cmp	r3, #7
  4021ba:	9427      	str	r4, [sp, #156]	; 0x9c
  4021bc:	e888 0024 	stmia.w	r8, {r2, r5}
  4021c0:	dd08      	ble.n	4021d4 <_svfprintf_r+0x43c>
  4021c2:	aa25      	add	r2, sp, #148	; 0x94
  4021c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4021c6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4021c8:	f002 ff48 	bl	40505c <__ssprint_r>
  4021cc:	2800      	cmp	r0, #0
  4021ce:	f47f aeb5 	bne.w	401f3c <_svfprintf_r+0x1a4>
  4021d2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4021d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4021d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4021d8:	9908      	ldr	r1, [sp, #32]
  4021da:	428a      	cmp	r2, r1
  4021dc:	bfac      	ite	ge
  4021de:	189b      	addge	r3, r3, r2
  4021e0:	185b      	addlt	r3, r3, r1
  4021e2:	9309      	str	r3, [sp, #36]	; 0x24
  4021e4:	2c00      	cmp	r4, #0
  4021e6:	f040 830d 	bne.w	402804 <_svfprintf_r+0xa6c>
  4021ea:	2300      	movs	r3, #0
  4021ec:	9326      	str	r3, [sp, #152]	; 0x98
  4021ee:	46c8      	mov	r8, r9
  4021f0:	e5f9      	b.n	401de6 <_svfprintf_r+0x4e>
  4021f2:	9311      	str	r3, [sp, #68]	; 0x44
  4021f4:	f01b 0320 	ands.w	r3, fp, #32
  4021f8:	f040 81e3 	bne.w	4025c2 <_svfprintf_r+0x82a>
  4021fc:	f01b 0210 	ands.w	r2, fp, #16
  402200:	f040 842e 	bne.w	402a60 <_svfprintf_r+0xcc8>
  402204:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402208:	f000 842a 	beq.w	402a60 <_svfprintf_r+0xcc8>
  40220c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40220e:	4613      	mov	r3, r2
  402210:	460a      	mov	r2, r1
  402212:	3204      	adds	r2, #4
  402214:	880c      	ldrh	r4, [r1, #0]
  402216:	920f      	str	r2, [sp, #60]	; 0x3c
  402218:	2500      	movs	r5, #0
  40221a:	e6b0      	b.n	401f7e <_svfprintf_r+0x1e6>
  40221c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40221e:	9311      	str	r3, [sp, #68]	; 0x44
  402220:	6816      	ldr	r6, [r2, #0]
  402222:	2400      	movs	r4, #0
  402224:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402228:	1d15      	adds	r5, r2, #4
  40222a:	2e00      	cmp	r6, #0
  40222c:	f000 86a7 	beq.w	402f7e <_svfprintf_r+0x11e6>
  402230:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402232:	1c53      	adds	r3, r2, #1
  402234:	f000 8609 	beq.w	402e4a <_svfprintf_r+0x10b2>
  402238:	4621      	mov	r1, r4
  40223a:	4630      	mov	r0, r6
  40223c:	f002 fa88 	bl	404750 <memchr>
  402240:	2800      	cmp	r0, #0
  402242:	f000 86e1 	beq.w	403008 <_svfprintf_r+0x1270>
  402246:	1b83      	subs	r3, r0, r6
  402248:	930e      	str	r3, [sp, #56]	; 0x38
  40224a:	940a      	str	r4, [sp, #40]	; 0x28
  40224c:	950f      	str	r5, [sp, #60]	; 0x3c
  40224e:	f8cd b01c 	str.w	fp, [sp, #28]
  402252:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402256:	9308      	str	r3, [sp, #32]
  402258:	9412      	str	r4, [sp, #72]	; 0x48
  40225a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40225e:	e6b3      	b.n	401fc8 <_svfprintf_r+0x230>
  402260:	f89a 3000 	ldrb.w	r3, [sl]
  402264:	2201      	movs	r2, #1
  402266:	212b      	movs	r1, #43	; 0x2b
  402268:	e5ee      	b.n	401e48 <_svfprintf_r+0xb0>
  40226a:	f04b 0b20 	orr.w	fp, fp, #32
  40226e:	f89a 3000 	ldrb.w	r3, [sl]
  402272:	e5e9      	b.n	401e48 <_svfprintf_r+0xb0>
  402274:	9311      	str	r3, [sp, #68]	; 0x44
  402276:	2a00      	cmp	r2, #0
  402278:	f040 8795 	bne.w	4031a6 <_svfprintf_r+0x140e>
  40227c:	4b22      	ldr	r3, [pc, #136]	; (402308 <_svfprintf_r+0x570>)
  40227e:	9318      	str	r3, [sp, #96]	; 0x60
  402280:	f01b 0f20 	tst.w	fp, #32
  402284:	f040 8111 	bne.w	4024aa <_svfprintf_r+0x712>
  402288:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40228a:	f01b 0f10 	tst.w	fp, #16
  40228e:	4613      	mov	r3, r2
  402290:	f040 83e1 	bne.w	402a56 <_svfprintf_r+0xcbe>
  402294:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402298:	f000 83dd 	beq.w	402a56 <_svfprintf_r+0xcbe>
  40229c:	3304      	adds	r3, #4
  40229e:	8814      	ldrh	r4, [r2, #0]
  4022a0:	930f      	str	r3, [sp, #60]	; 0x3c
  4022a2:	2500      	movs	r5, #0
  4022a4:	f01b 0f01 	tst.w	fp, #1
  4022a8:	f000 810c 	beq.w	4024c4 <_svfprintf_r+0x72c>
  4022ac:	ea54 0305 	orrs.w	r3, r4, r5
  4022b0:	f000 8108 	beq.w	4024c4 <_svfprintf_r+0x72c>
  4022b4:	2330      	movs	r3, #48	; 0x30
  4022b6:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4022ba:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4022be:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4022c2:	f04b 0b02 	orr.w	fp, fp, #2
  4022c6:	2302      	movs	r3, #2
  4022c8:	e659      	b.n	401f7e <_svfprintf_r+0x1e6>
  4022ca:	f89a 3000 	ldrb.w	r3, [sl]
  4022ce:	2900      	cmp	r1, #0
  4022d0:	f47f adba 	bne.w	401e48 <_svfprintf_r+0xb0>
  4022d4:	2201      	movs	r2, #1
  4022d6:	2120      	movs	r1, #32
  4022d8:	e5b6      	b.n	401e48 <_svfprintf_r+0xb0>
  4022da:	f04b 0b01 	orr.w	fp, fp, #1
  4022de:	f89a 3000 	ldrb.w	r3, [sl]
  4022e2:	e5b1      	b.n	401e48 <_svfprintf_r+0xb0>
  4022e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4022e6:	6823      	ldr	r3, [r4, #0]
  4022e8:	930d      	str	r3, [sp, #52]	; 0x34
  4022ea:	4618      	mov	r0, r3
  4022ec:	2800      	cmp	r0, #0
  4022ee:	4623      	mov	r3, r4
  4022f0:	f103 0304 	add.w	r3, r3, #4
  4022f4:	f6ff ae0a 	blt.w	401f0c <_svfprintf_r+0x174>
  4022f8:	930f      	str	r3, [sp, #60]	; 0x3c
  4022fa:	f89a 3000 	ldrb.w	r3, [sl]
  4022fe:	e5a3      	b.n	401e48 <_svfprintf_r+0xb0>
  402300:	00406878 	.word	0x00406878
  402304:	00406888 	.word	0x00406888
  402308:	00406858 	.word	0x00406858
  40230c:	f04b 0b10 	orr.w	fp, fp, #16
  402310:	f01b 0f20 	tst.w	fp, #32
  402314:	9311      	str	r3, [sp, #68]	; 0x44
  402316:	f43f ae23 	beq.w	401f60 <_svfprintf_r+0x1c8>
  40231a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40231c:	3507      	adds	r5, #7
  40231e:	f025 0307 	bic.w	r3, r5, #7
  402322:	f103 0208 	add.w	r2, r3, #8
  402326:	e9d3 4500 	ldrd	r4, r5, [r3]
  40232a:	920f      	str	r2, [sp, #60]	; 0x3c
  40232c:	2301      	movs	r3, #1
  40232e:	e626      	b.n	401f7e <_svfprintf_r+0x1e6>
  402330:	f89a 3000 	ldrb.w	r3, [sl]
  402334:	2b2a      	cmp	r3, #42	; 0x2a
  402336:	f10a 0401 	add.w	r4, sl, #1
  40233a:	f000 8727 	beq.w	40318c <_svfprintf_r+0x13f4>
  40233e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402342:	2809      	cmp	r0, #9
  402344:	46a2      	mov	sl, r4
  402346:	f200 86ad 	bhi.w	4030a4 <_svfprintf_r+0x130c>
  40234a:	2300      	movs	r3, #0
  40234c:	461c      	mov	r4, r3
  40234e:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402352:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402356:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40235a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40235e:	2809      	cmp	r0, #9
  402360:	d9f5      	bls.n	40234e <_svfprintf_r+0x5b6>
  402362:	940a      	str	r4, [sp, #40]	; 0x28
  402364:	e572      	b.n	401e4c <_svfprintf_r+0xb4>
  402366:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40236a:	f89a 3000 	ldrb.w	r3, [sl]
  40236e:	e56b      	b.n	401e48 <_svfprintf_r+0xb0>
  402370:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402374:	f89a 3000 	ldrb.w	r3, [sl]
  402378:	e566      	b.n	401e48 <_svfprintf_r+0xb0>
  40237a:	f89a 3000 	ldrb.w	r3, [sl]
  40237e:	2b6c      	cmp	r3, #108	; 0x6c
  402380:	bf03      	ittte	eq
  402382:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402386:	f04b 0b20 	orreq.w	fp, fp, #32
  40238a:	f10a 0a01 	addeq.w	sl, sl, #1
  40238e:	f04b 0b10 	orrne.w	fp, fp, #16
  402392:	e559      	b.n	401e48 <_svfprintf_r+0xb0>
  402394:	2a00      	cmp	r2, #0
  402396:	f040 8711 	bne.w	4031bc <_svfprintf_r+0x1424>
  40239a:	f01b 0f20 	tst.w	fp, #32
  40239e:	f040 84f9 	bne.w	402d94 <_svfprintf_r+0xffc>
  4023a2:	f01b 0f10 	tst.w	fp, #16
  4023a6:	f040 84ac 	bne.w	402d02 <_svfprintf_r+0xf6a>
  4023aa:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4023ae:	f000 84a8 	beq.w	402d02 <_svfprintf_r+0xf6a>
  4023b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4023b4:	6813      	ldr	r3, [r2, #0]
  4023b6:	3204      	adds	r2, #4
  4023b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4023ba:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4023be:	801a      	strh	r2, [r3, #0]
  4023c0:	e511      	b.n	401de6 <_svfprintf_r+0x4e>
  4023c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4023c4:	4bb3      	ldr	r3, [pc, #716]	; (402694 <_svfprintf_r+0x8fc>)
  4023c6:	680c      	ldr	r4, [r1, #0]
  4023c8:	9318      	str	r3, [sp, #96]	; 0x60
  4023ca:	2230      	movs	r2, #48	; 0x30
  4023cc:	2378      	movs	r3, #120	; 0x78
  4023ce:	3104      	adds	r1, #4
  4023d0:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4023d4:	9311      	str	r3, [sp, #68]	; 0x44
  4023d6:	f04b 0b02 	orr.w	fp, fp, #2
  4023da:	910f      	str	r1, [sp, #60]	; 0x3c
  4023dc:	2500      	movs	r5, #0
  4023de:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4023e2:	2302      	movs	r3, #2
  4023e4:	e5cb      	b.n	401f7e <_svfprintf_r+0x1e6>
  4023e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4023e8:	9311      	str	r3, [sp, #68]	; 0x44
  4023ea:	680a      	ldr	r2, [r1, #0]
  4023ec:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4023f0:	2300      	movs	r3, #0
  4023f2:	460a      	mov	r2, r1
  4023f4:	461f      	mov	r7, r3
  4023f6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4023fa:	3204      	adds	r2, #4
  4023fc:	2301      	movs	r3, #1
  4023fe:	9308      	str	r3, [sp, #32]
  402400:	f8cd b01c 	str.w	fp, [sp, #28]
  402404:	970a      	str	r7, [sp, #40]	; 0x28
  402406:	9712      	str	r7, [sp, #72]	; 0x48
  402408:	920f      	str	r2, [sp, #60]	; 0x3c
  40240a:	930e      	str	r3, [sp, #56]	; 0x38
  40240c:	ae28      	add	r6, sp, #160	; 0xa0
  40240e:	e5df      	b.n	401fd0 <_svfprintf_r+0x238>
  402410:	9311      	str	r3, [sp, #68]	; 0x44
  402412:	2a00      	cmp	r2, #0
  402414:	f040 86ea 	bne.w	4031ec <_svfprintf_r+0x1454>
  402418:	f01b 0f20 	tst.w	fp, #32
  40241c:	d15d      	bne.n	4024da <_svfprintf_r+0x742>
  40241e:	f01b 0f10 	tst.w	fp, #16
  402422:	f040 8308 	bne.w	402a36 <_svfprintf_r+0xc9e>
  402426:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40242a:	f000 8304 	beq.w	402a36 <_svfprintf_r+0xc9e>
  40242e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402430:	f9b1 4000 	ldrsh.w	r4, [r1]
  402434:	3104      	adds	r1, #4
  402436:	17e5      	asrs	r5, r4, #31
  402438:	4622      	mov	r2, r4
  40243a:	462b      	mov	r3, r5
  40243c:	910f      	str	r1, [sp, #60]	; 0x3c
  40243e:	2a00      	cmp	r2, #0
  402440:	f173 0300 	sbcs.w	r3, r3, #0
  402444:	db58      	blt.n	4024f8 <_svfprintf_r+0x760>
  402446:	990a      	ldr	r1, [sp, #40]	; 0x28
  402448:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40244c:	1c4a      	adds	r2, r1, #1
  40244e:	f04f 0301 	mov.w	r3, #1
  402452:	f47f ad9b 	bne.w	401f8c <_svfprintf_r+0x1f4>
  402456:	ea54 0205 	orrs.w	r2, r4, r5
  40245a:	f000 81df 	beq.w	40281c <_svfprintf_r+0xa84>
  40245e:	f8cd b01c 	str.w	fp, [sp, #28]
  402462:	2b01      	cmp	r3, #1
  402464:	f000 827b 	beq.w	40295e <_svfprintf_r+0xbc6>
  402468:	2b02      	cmp	r3, #2
  40246a:	f040 8206 	bne.w	40287a <_svfprintf_r+0xae2>
  40246e:	9818      	ldr	r0, [sp, #96]	; 0x60
  402470:	464e      	mov	r6, r9
  402472:	0923      	lsrs	r3, r4, #4
  402474:	f004 010f 	and.w	r1, r4, #15
  402478:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  40247c:	092a      	lsrs	r2, r5, #4
  40247e:	461c      	mov	r4, r3
  402480:	4615      	mov	r5, r2
  402482:	5c43      	ldrb	r3, [r0, r1]
  402484:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402488:	ea54 0305 	orrs.w	r3, r4, r5
  40248c:	d1f1      	bne.n	402472 <_svfprintf_r+0x6da>
  40248e:	eba9 0306 	sub.w	r3, r9, r6
  402492:	930e      	str	r3, [sp, #56]	; 0x38
  402494:	e590      	b.n	401fb8 <_svfprintf_r+0x220>
  402496:	9311      	str	r3, [sp, #68]	; 0x44
  402498:	2a00      	cmp	r2, #0
  40249a:	f040 86a3 	bne.w	4031e4 <_svfprintf_r+0x144c>
  40249e:	4b7e      	ldr	r3, [pc, #504]	; (402698 <_svfprintf_r+0x900>)
  4024a0:	9318      	str	r3, [sp, #96]	; 0x60
  4024a2:	f01b 0f20 	tst.w	fp, #32
  4024a6:	f43f aeef 	beq.w	402288 <_svfprintf_r+0x4f0>
  4024aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024ac:	3507      	adds	r5, #7
  4024ae:	f025 0307 	bic.w	r3, r5, #7
  4024b2:	f103 0208 	add.w	r2, r3, #8
  4024b6:	f01b 0f01 	tst.w	fp, #1
  4024ba:	920f      	str	r2, [sp, #60]	; 0x3c
  4024bc:	e9d3 4500 	ldrd	r4, r5, [r3]
  4024c0:	f47f aef4 	bne.w	4022ac <_svfprintf_r+0x514>
  4024c4:	2302      	movs	r3, #2
  4024c6:	e55a      	b.n	401f7e <_svfprintf_r+0x1e6>
  4024c8:	9311      	str	r3, [sp, #68]	; 0x44
  4024ca:	2a00      	cmp	r2, #0
  4024cc:	f040 8686 	bne.w	4031dc <_svfprintf_r+0x1444>
  4024d0:	f04b 0b10 	orr.w	fp, fp, #16
  4024d4:	f01b 0f20 	tst.w	fp, #32
  4024d8:	d0a1      	beq.n	40241e <_svfprintf_r+0x686>
  4024da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024dc:	3507      	adds	r5, #7
  4024de:	f025 0507 	bic.w	r5, r5, #7
  4024e2:	e9d5 2300 	ldrd	r2, r3, [r5]
  4024e6:	2a00      	cmp	r2, #0
  4024e8:	f105 0108 	add.w	r1, r5, #8
  4024ec:	461d      	mov	r5, r3
  4024ee:	f173 0300 	sbcs.w	r3, r3, #0
  4024f2:	910f      	str	r1, [sp, #60]	; 0x3c
  4024f4:	4614      	mov	r4, r2
  4024f6:	daa6      	bge.n	402446 <_svfprintf_r+0x6ae>
  4024f8:	272d      	movs	r7, #45	; 0x2d
  4024fa:	4264      	negs	r4, r4
  4024fc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402500:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402504:	2301      	movs	r3, #1
  402506:	e53d      	b.n	401f84 <_svfprintf_r+0x1ec>
  402508:	9311      	str	r3, [sp, #68]	; 0x44
  40250a:	2a00      	cmp	r2, #0
  40250c:	f040 8662 	bne.w	4031d4 <_svfprintf_r+0x143c>
  402510:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402512:	3507      	adds	r5, #7
  402514:	f025 0307 	bic.w	r3, r5, #7
  402518:	f103 0208 	add.w	r2, r3, #8
  40251c:	920f      	str	r2, [sp, #60]	; 0x3c
  40251e:	681a      	ldr	r2, [r3, #0]
  402520:	9215      	str	r2, [sp, #84]	; 0x54
  402522:	685b      	ldr	r3, [r3, #4]
  402524:	9314      	str	r3, [sp, #80]	; 0x50
  402526:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402528:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40252a:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40252e:	4628      	mov	r0, r5
  402530:	4621      	mov	r1, r4
  402532:	f04f 32ff 	mov.w	r2, #4294967295
  402536:	4b59      	ldr	r3, [pc, #356]	; (40269c <_svfprintf_r+0x904>)
  402538:	f003 fa8c 	bl	405a54 <__aeabi_dcmpun>
  40253c:	2800      	cmp	r0, #0
  40253e:	f040 834a 	bne.w	402bd6 <_svfprintf_r+0xe3e>
  402542:	4628      	mov	r0, r5
  402544:	4621      	mov	r1, r4
  402546:	f04f 32ff 	mov.w	r2, #4294967295
  40254a:	4b54      	ldr	r3, [pc, #336]	; (40269c <_svfprintf_r+0x904>)
  40254c:	f003 fa64 	bl	405a18 <__aeabi_dcmple>
  402550:	2800      	cmp	r0, #0
  402552:	f040 8340 	bne.w	402bd6 <_svfprintf_r+0xe3e>
  402556:	a815      	add	r0, sp, #84	; 0x54
  402558:	c80d      	ldmia	r0, {r0, r2, r3}
  40255a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40255c:	f003 fa52 	bl	405a04 <__aeabi_dcmplt>
  402560:	2800      	cmp	r0, #0
  402562:	f040 8530 	bne.w	402fc6 <_svfprintf_r+0x122e>
  402566:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40256a:	4e4d      	ldr	r6, [pc, #308]	; (4026a0 <_svfprintf_r+0x908>)
  40256c:	4b4d      	ldr	r3, [pc, #308]	; (4026a4 <_svfprintf_r+0x90c>)
  40256e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402572:	9007      	str	r0, [sp, #28]
  402574:	9811      	ldr	r0, [sp, #68]	; 0x44
  402576:	2203      	movs	r2, #3
  402578:	2100      	movs	r1, #0
  40257a:	9208      	str	r2, [sp, #32]
  40257c:	910a      	str	r1, [sp, #40]	; 0x28
  40257e:	2847      	cmp	r0, #71	; 0x47
  402580:	bfd8      	it	le
  402582:	461e      	movle	r6, r3
  402584:	920e      	str	r2, [sp, #56]	; 0x38
  402586:	9112      	str	r1, [sp, #72]	; 0x48
  402588:	e51e      	b.n	401fc8 <_svfprintf_r+0x230>
  40258a:	f04b 0b08 	orr.w	fp, fp, #8
  40258e:	f89a 3000 	ldrb.w	r3, [sl]
  402592:	e459      	b.n	401e48 <_svfprintf_r+0xb0>
  402594:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402598:	2300      	movs	r3, #0
  40259a:	461c      	mov	r4, r3
  40259c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4025a0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4025a4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4025a8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4025ac:	2809      	cmp	r0, #9
  4025ae:	d9f5      	bls.n	40259c <_svfprintf_r+0x804>
  4025b0:	940d      	str	r4, [sp, #52]	; 0x34
  4025b2:	e44b      	b.n	401e4c <_svfprintf_r+0xb4>
  4025b4:	f04b 0b10 	orr.w	fp, fp, #16
  4025b8:	9311      	str	r3, [sp, #68]	; 0x44
  4025ba:	f01b 0320 	ands.w	r3, fp, #32
  4025be:	f43f ae1d 	beq.w	4021fc <_svfprintf_r+0x464>
  4025c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4025c4:	3507      	adds	r5, #7
  4025c6:	f025 0307 	bic.w	r3, r5, #7
  4025ca:	f103 0208 	add.w	r2, r3, #8
  4025ce:	e9d3 4500 	ldrd	r4, r5, [r3]
  4025d2:	920f      	str	r2, [sp, #60]	; 0x3c
  4025d4:	2300      	movs	r3, #0
  4025d6:	e4d2      	b.n	401f7e <_svfprintf_r+0x1e6>
  4025d8:	9311      	str	r3, [sp, #68]	; 0x44
  4025da:	2a00      	cmp	r2, #0
  4025dc:	f040 85e7 	bne.w	4031ae <_svfprintf_r+0x1416>
  4025e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4025e2:	2a00      	cmp	r2, #0
  4025e4:	f43f aca3 	beq.w	401f2e <_svfprintf_r+0x196>
  4025e8:	2300      	movs	r3, #0
  4025ea:	2101      	movs	r1, #1
  4025ec:	461f      	mov	r7, r3
  4025ee:	9108      	str	r1, [sp, #32]
  4025f0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4025f4:	f8cd b01c 	str.w	fp, [sp, #28]
  4025f8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4025fc:	930a      	str	r3, [sp, #40]	; 0x28
  4025fe:	9312      	str	r3, [sp, #72]	; 0x48
  402600:	910e      	str	r1, [sp, #56]	; 0x38
  402602:	ae28      	add	r6, sp, #160	; 0xa0
  402604:	e4e4      	b.n	401fd0 <_svfprintf_r+0x238>
  402606:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402608:	e534      	b.n	402074 <_svfprintf_r+0x2dc>
  40260a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40260c:	2b65      	cmp	r3, #101	; 0x65
  40260e:	f340 80a7 	ble.w	402760 <_svfprintf_r+0x9c8>
  402612:	a815      	add	r0, sp, #84	; 0x54
  402614:	c80d      	ldmia	r0, {r0, r2, r3}
  402616:	9914      	ldr	r1, [sp, #80]	; 0x50
  402618:	f003 f9ea 	bl	4059f0 <__aeabi_dcmpeq>
  40261c:	2800      	cmp	r0, #0
  40261e:	f000 8150 	beq.w	4028c2 <_svfprintf_r+0xb2a>
  402622:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402624:	4a20      	ldr	r2, [pc, #128]	; (4026a8 <_svfprintf_r+0x910>)
  402626:	f8c8 2000 	str.w	r2, [r8]
  40262a:	3301      	adds	r3, #1
  40262c:	3401      	adds	r4, #1
  40262e:	2201      	movs	r2, #1
  402630:	2b07      	cmp	r3, #7
  402632:	9427      	str	r4, [sp, #156]	; 0x9c
  402634:	9326      	str	r3, [sp, #152]	; 0x98
  402636:	f8c8 2004 	str.w	r2, [r8, #4]
  40263a:	f300 836a 	bgt.w	402d12 <_svfprintf_r+0xf7a>
  40263e:	f108 0808 	add.w	r8, r8, #8
  402642:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402644:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402646:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402648:	4293      	cmp	r3, r2
  40264a:	db03      	blt.n	402654 <_svfprintf_r+0x8bc>
  40264c:	9b07      	ldr	r3, [sp, #28]
  40264e:	07dd      	lsls	r5, r3, #31
  402650:	f57f ad82 	bpl.w	402158 <_svfprintf_r+0x3c0>
  402654:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402656:	9919      	ldr	r1, [sp, #100]	; 0x64
  402658:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40265a:	f8c8 2000 	str.w	r2, [r8]
  40265e:	3301      	adds	r3, #1
  402660:	440c      	add	r4, r1
  402662:	2b07      	cmp	r3, #7
  402664:	f8c8 1004 	str.w	r1, [r8, #4]
  402668:	9427      	str	r4, [sp, #156]	; 0x9c
  40266a:	9326      	str	r3, [sp, #152]	; 0x98
  40266c:	f300 839e 	bgt.w	402dac <_svfprintf_r+0x1014>
  402670:	f108 0808 	add.w	r8, r8, #8
  402674:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402676:	1e5e      	subs	r6, r3, #1
  402678:	2e00      	cmp	r6, #0
  40267a:	f77f ad6d 	ble.w	402158 <_svfprintf_r+0x3c0>
  40267e:	2e10      	cmp	r6, #16
  402680:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402682:	4d0a      	ldr	r5, [pc, #40]	; (4026ac <_svfprintf_r+0x914>)
  402684:	f340 81f5 	ble.w	402a72 <_svfprintf_r+0xcda>
  402688:	4622      	mov	r2, r4
  40268a:	2710      	movs	r7, #16
  40268c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402690:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402692:	e013      	b.n	4026bc <_svfprintf_r+0x924>
  402694:	00406858 	.word	0x00406858
  402698:	00406844 	.word	0x00406844
  40269c:	7fefffff 	.word	0x7fefffff
  4026a0:	00406838 	.word	0x00406838
  4026a4:	00406834 	.word	0x00406834
  4026a8:	00406874 	.word	0x00406874
  4026ac:	00406888 	.word	0x00406888
  4026b0:	f108 0808 	add.w	r8, r8, #8
  4026b4:	3e10      	subs	r6, #16
  4026b6:	2e10      	cmp	r6, #16
  4026b8:	f340 81da 	ble.w	402a70 <_svfprintf_r+0xcd8>
  4026bc:	3301      	adds	r3, #1
  4026be:	3210      	adds	r2, #16
  4026c0:	2b07      	cmp	r3, #7
  4026c2:	9227      	str	r2, [sp, #156]	; 0x9c
  4026c4:	9326      	str	r3, [sp, #152]	; 0x98
  4026c6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4026ca:	ddf1      	ble.n	4026b0 <_svfprintf_r+0x918>
  4026cc:	aa25      	add	r2, sp, #148	; 0x94
  4026ce:	4621      	mov	r1, r4
  4026d0:	4658      	mov	r0, fp
  4026d2:	f002 fcc3 	bl	40505c <__ssprint_r>
  4026d6:	2800      	cmp	r0, #0
  4026d8:	f47f ac30 	bne.w	401f3c <_svfprintf_r+0x1a4>
  4026dc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4026de:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026e0:	46c8      	mov	r8, r9
  4026e2:	e7e7      	b.n	4026b4 <_svfprintf_r+0x91c>
  4026e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4026e6:	9a08      	ldr	r2, [sp, #32]
  4026e8:	1a9f      	subs	r7, r3, r2
  4026ea:	2f00      	cmp	r7, #0
  4026ec:	f77f ace5 	ble.w	4020ba <_svfprintf_r+0x322>
  4026f0:	2f10      	cmp	r7, #16
  4026f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026f4:	4db6      	ldr	r5, [pc, #728]	; (4029d0 <_svfprintf_r+0xc38>)
  4026f6:	dd27      	ble.n	402748 <_svfprintf_r+0x9b0>
  4026f8:	4642      	mov	r2, r8
  4026fa:	4621      	mov	r1, r4
  4026fc:	46b0      	mov	r8, r6
  4026fe:	f04f 0b10 	mov.w	fp, #16
  402702:	462e      	mov	r6, r5
  402704:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402706:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402708:	e004      	b.n	402714 <_svfprintf_r+0x97c>
  40270a:	3f10      	subs	r7, #16
  40270c:	2f10      	cmp	r7, #16
  40270e:	f102 0208 	add.w	r2, r2, #8
  402712:	dd15      	ble.n	402740 <_svfprintf_r+0x9a8>
  402714:	3301      	adds	r3, #1
  402716:	3110      	adds	r1, #16
  402718:	2b07      	cmp	r3, #7
  40271a:	9127      	str	r1, [sp, #156]	; 0x9c
  40271c:	9326      	str	r3, [sp, #152]	; 0x98
  40271e:	e882 0840 	stmia.w	r2, {r6, fp}
  402722:	ddf2      	ble.n	40270a <_svfprintf_r+0x972>
  402724:	aa25      	add	r2, sp, #148	; 0x94
  402726:	4629      	mov	r1, r5
  402728:	4620      	mov	r0, r4
  40272a:	f002 fc97 	bl	40505c <__ssprint_r>
  40272e:	2800      	cmp	r0, #0
  402730:	f47f ac04 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402734:	3f10      	subs	r7, #16
  402736:	2f10      	cmp	r7, #16
  402738:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40273a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40273c:	464a      	mov	r2, r9
  40273e:	dce9      	bgt.n	402714 <_svfprintf_r+0x97c>
  402740:	4635      	mov	r5, r6
  402742:	460c      	mov	r4, r1
  402744:	4646      	mov	r6, r8
  402746:	4690      	mov	r8, r2
  402748:	3301      	adds	r3, #1
  40274a:	443c      	add	r4, r7
  40274c:	2b07      	cmp	r3, #7
  40274e:	9427      	str	r4, [sp, #156]	; 0x9c
  402750:	9326      	str	r3, [sp, #152]	; 0x98
  402752:	e888 00a0 	stmia.w	r8, {r5, r7}
  402756:	f300 8232 	bgt.w	402bbe <_svfprintf_r+0xe26>
  40275a:	f108 0808 	add.w	r8, r8, #8
  40275e:	e4ac      	b.n	4020ba <_svfprintf_r+0x322>
  402760:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402762:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402764:	2b01      	cmp	r3, #1
  402766:	f340 81fe 	ble.w	402b66 <_svfprintf_r+0xdce>
  40276a:	3701      	adds	r7, #1
  40276c:	3401      	adds	r4, #1
  40276e:	2301      	movs	r3, #1
  402770:	2f07      	cmp	r7, #7
  402772:	9427      	str	r4, [sp, #156]	; 0x9c
  402774:	9726      	str	r7, [sp, #152]	; 0x98
  402776:	f8c8 6000 	str.w	r6, [r8]
  40277a:	f8c8 3004 	str.w	r3, [r8, #4]
  40277e:	f300 8203 	bgt.w	402b88 <_svfprintf_r+0xdf0>
  402782:	f108 0808 	add.w	r8, r8, #8
  402786:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402788:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40278a:	f8c8 3000 	str.w	r3, [r8]
  40278e:	3701      	adds	r7, #1
  402790:	4414      	add	r4, r2
  402792:	2f07      	cmp	r7, #7
  402794:	9427      	str	r4, [sp, #156]	; 0x9c
  402796:	9726      	str	r7, [sp, #152]	; 0x98
  402798:	f8c8 2004 	str.w	r2, [r8, #4]
  40279c:	f300 8200 	bgt.w	402ba0 <_svfprintf_r+0xe08>
  4027a0:	f108 0808 	add.w	r8, r8, #8
  4027a4:	a815      	add	r0, sp, #84	; 0x54
  4027a6:	c80d      	ldmia	r0, {r0, r2, r3}
  4027a8:	9914      	ldr	r1, [sp, #80]	; 0x50
  4027aa:	f003 f921 	bl	4059f0 <__aeabi_dcmpeq>
  4027ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4027b0:	2800      	cmp	r0, #0
  4027b2:	f040 8101 	bne.w	4029b8 <_svfprintf_r+0xc20>
  4027b6:	3b01      	subs	r3, #1
  4027b8:	3701      	adds	r7, #1
  4027ba:	3601      	adds	r6, #1
  4027bc:	441c      	add	r4, r3
  4027be:	2f07      	cmp	r7, #7
  4027c0:	9726      	str	r7, [sp, #152]	; 0x98
  4027c2:	9427      	str	r4, [sp, #156]	; 0x9c
  4027c4:	f8c8 6000 	str.w	r6, [r8]
  4027c8:	f8c8 3004 	str.w	r3, [r8, #4]
  4027cc:	f300 8127 	bgt.w	402a1e <_svfprintf_r+0xc86>
  4027d0:	f108 0808 	add.w	r8, r8, #8
  4027d4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4027d6:	f8c8 2004 	str.w	r2, [r8, #4]
  4027da:	3701      	adds	r7, #1
  4027dc:	4414      	add	r4, r2
  4027de:	ab21      	add	r3, sp, #132	; 0x84
  4027e0:	2f07      	cmp	r7, #7
  4027e2:	9427      	str	r4, [sp, #156]	; 0x9c
  4027e4:	9726      	str	r7, [sp, #152]	; 0x98
  4027e6:	f8c8 3000 	str.w	r3, [r8]
  4027ea:	f77f acb3 	ble.w	402154 <_svfprintf_r+0x3bc>
  4027ee:	aa25      	add	r2, sp, #148	; 0x94
  4027f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027f4:	f002 fc32 	bl	40505c <__ssprint_r>
  4027f8:	2800      	cmp	r0, #0
  4027fa:	f47f ab9f 	bne.w	401f3c <_svfprintf_r+0x1a4>
  4027fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402800:	46c8      	mov	r8, r9
  402802:	e4a9      	b.n	402158 <_svfprintf_r+0x3c0>
  402804:	aa25      	add	r2, sp, #148	; 0x94
  402806:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402808:	980c      	ldr	r0, [sp, #48]	; 0x30
  40280a:	f002 fc27 	bl	40505c <__ssprint_r>
  40280e:	2800      	cmp	r0, #0
  402810:	f43f aceb 	beq.w	4021ea <_svfprintf_r+0x452>
  402814:	f7ff bb92 	b.w	401f3c <_svfprintf_r+0x1a4>
  402818:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40281c:	2b01      	cmp	r3, #1
  40281e:	f000 8134 	beq.w	402a8a <_svfprintf_r+0xcf2>
  402822:	2b02      	cmp	r3, #2
  402824:	d125      	bne.n	402872 <_svfprintf_r+0xada>
  402826:	f8cd b01c 	str.w	fp, [sp, #28]
  40282a:	2400      	movs	r4, #0
  40282c:	2500      	movs	r5, #0
  40282e:	e61e      	b.n	40246e <_svfprintf_r+0x6d6>
  402830:	aa25      	add	r2, sp, #148	; 0x94
  402832:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402834:	980c      	ldr	r0, [sp, #48]	; 0x30
  402836:	f002 fc11 	bl	40505c <__ssprint_r>
  40283a:	2800      	cmp	r0, #0
  40283c:	f47f ab7e 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402840:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402842:	46c8      	mov	r8, r9
  402844:	e475      	b.n	402132 <_svfprintf_r+0x39a>
  402846:	aa25      	add	r2, sp, #148	; 0x94
  402848:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40284a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40284c:	f002 fc06 	bl	40505c <__ssprint_r>
  402850:	2800      	cmp	r0, #0
  402852:	f47f ab73 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402856:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402858:	46c8      	mov	r8, r9
  40285a:	e41b      	b.n	402094 <_svfprintf_r+0x2fc>
  40285c:	aa25      	add	r2, sp, #148	; 0x94
  40285e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402860:	980c      	ldr	r0, [sp, #48]	; 0x30
  402862:	f002 fbfb 	bl	40505c <__ssprint_r>
  402866:	2800      	cmp	r0, #0
  402868:	f47f ab68 	bne.w	401f3c <_svfprintf_r+0x1a4>
  40286c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40286e:	46c8      	mov	r8, r9
  402870:	e420      	b.n	4020b4 <_svfprintf_r+0x31c>
  402872:	f8cd b01c 	str.w	fp, [sp, #28]
  402876:	2400      	movs	r4, #0
  402878:	2500      	movs	r5, #0
  40287a:	4649      	mov	r1, r9
  40287c:	e000      	b.n	402880 <_svfprintf_r+0xae8>
  40287e:	4631      	mov	r1, r6
  402880:	08e2      	lsrs	r2, r4, #3
  402882:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402886:	08e8      	lsrs	r0, r5, #3
  402888:	f004 0307 	and.w	r3, r4, #7
  40288c:	4605      	mov	r5, r0
  40288e:	4614      	mov	r4, r2
  402890:	3330      	adds	r3, #48	; 0x30
  402892:	ea54 0205 	orrs.w	r2, r4, r5
  402896:	f801 3c01 	strb.w	r3, [r1, #-1]
  40289a:	f101 36ff 	add.w	r6, r1, #4294967295
  40289e:	d1ee      	bne.n	40287e <_svfprintf_r+0xae6>
  4028a0:	9a07      	ldr	r2, [sp, #28]
  4028a2:	07d2      	lsls	r2, r2, #31
  4028a4:	f57f adf3 	bpl.w	40248e <_svfprintf_r+0x6f6>
  4028a8:	2b30      	cmp	r3, #48	; 0x30
  4028aa:	f43f adf0 	beq.w	40248e <_svfprintf_r+0x6f6>
  4028ae:	3902      	subs	r1, #2
  4028b0:	2330      	movs	r3, #48	; 0x30
  4028b2:	f806 3c01 	strb.w	r3, [r6, #-1]
  4028b6:	eba9 0301 	sub.w	r3, r9, r1
  4028ba:	930e      	str	r3, [sp, #56]	; 0x38
  4028bc:	460e      	mov	r6, r1
  4028be:	f7ff bb7b 	b.w	401fb8 <_svfprintf_r+0x220>
  4028c2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4028c4:	2900      	cmp	r1, #0
  4028c6:	f340 822e 	ble.w	402d26 <_svfprintf_r+0xf8e>
  4028ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4028cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4028ce:	4293      	cmp	r3, r2
  4028d0:	bfa8      	it	ge
  4028d2:	4613      	movge	r3, r2
  4028d4:	2b00      	cmp	r3, #0
  4028d6:	461f      	mov	r7, r3
  4028d8:	dd0d      	ble.n	4028f6 <_svfprintf_r+0xb5e>
  4028da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028dc:	f8c8 6000 	str.w	r6, [r8]
  4028e0:	3301      	adds	r3, #1
  4028e2:	443c      	add	r4, r7
  4028e4:	2b07      	cmp	r3, #7
  4028e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4028e8:	f8c8 7004 	str.w	r7, [r8, #4]
  4028ec:	9326      	str	r3, [sp, #152]	; 0x98
  4028ee:	f300 831f 	bgt.w	402f30 <_svfprintf_r+0x1198>
  4028f2:	f108 0808 	add.w	r8, r8, #8
  4028f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4028f8:	2f00      	cmp	r7, #0
  4028fa:	bfa8      	it	ge
  4028fc:	1bdb      	subge	r3, r3, r7
  4028fe:	2b00      	cmp	r3, #0
  402900:	461f      	mov	r7, r3
  402902:	f340 80d6 	ble.w	402ab2 <_svfprintf_r+0xd1a>
  402906:	2f10      	cmp	r7, #16
  402908:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40290a:	4d31      	ldr	r5, [pc, #196]	; (4029d0 <_svfprintf_r+0xc38>)
  40290c:	f340 81ed 	ble.w	402cea <_svfprintf_r+0xf52>
  402910:	4642      	mov	r2, r8
  402912:	4621      	mov	r1, r4
  402914:	46b0      	mov	r8, r6
  402916:	f04f 0b10 	mov.w	fp, #16
  40291a:	462e      	mov	r6, r5
  40291c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40291e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402920:	e004      	b.n	40292c <_svfprintf_r+0xb94>
  402922:	3208      	adds	r2, #8
  402924:	3f10      	subs	r7, #16
  402926:	2f10      	cmp	r7, #16
  402928:	f340 81db 	ble.w	402ce2 <_svfprintf_r+0xf4a>
  40292c:	3301      	adds	r3, #1
  40292e:	3110      	adds	r1, #16
  402930:	2b07      	cmp	r3, #7
  402932:	9127      	str	r1, [sp, #156]	; 0x9c
  402934:	9326      	str	r3, [sp, #152]	; 0x98
  402936:	e882 0840 	stmia.w	r2, {r6, fp}
  40293a:	ddf2      	ble.n	402922 <_svfprintf_r+0xb8a>
  40293c:	aa25      	add	r2, sp, #148	; 0x94
  40293e:	4629      	mov	r1, r5
  402940:	4620      	mov	r0, r4
  402942:	f002 fb8b 	bl	40505c <__ssprint_r>
  402946:	2800      	cmp	r0, #0
  402948:	f47f aaf8 	bne.w	401f3c <_svfprintf_r+0x1a4>
  40294c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40294e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402950:	464a      	mov	r2, r9
  402952:	e7e7      	b.n	402924 <_svfprintf_r+0xb8c>
  402954:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402956:	930e      	str	r3, [sp, #56]	; 0x38
  402958:	464e      	mov	r6, r9
  40295a:	f7ff bb2d 	b.w	401fb8 <_svfprintf_r+0x220>
  40295e:	2d00      	cmp	r5, #0
  402960:	bf08      	it	eq
  402962:	2c0a      	cmpeq	r4, #10
  402964:	f0c0 808f 	bcc.w	402a86 <_svfprintf_r+0xcee>
  402968:	464e      	mov	r6, r9
  40296a:	4620      	mov	r0, r4
  40296c:	4629      	mov	r1, r5
  40296e:	220a      	movs	r2, #10
  402970:	2300      	movs	r3, #0
  402972:	f003 f8ad 	bl	405ad0 <__aeabi_uldivmod>
  402976:	3230      	adds	r2, #48	; 0x30
  402978:	f806 2d01 	strb.w	r2, [r6, #-1]!
  40297c:	4620      	mov	r0, r4
  40297e:	4629      	mov	r1, r5
  402980:	2300      	movs	r3, #0
  402982:	220a      	movs	r2, #10
  402984:	f003 f8a4 	bl	405ad0 <__aeabi_uldivmod>
  402988:	4604      	mov	r4, r0
  40298a:	460d      	mov	r5, r1
  40298c:	ea54 0305 	orrs.w	r3, r4, r5
  402990:	d1eb      	bne.n	40296a <_svfprintf_r+0xbd2>
  402992:	eba9 0306 	sub.w	r3, r9, r6
  402996:	930e      	str	r3, [sp, #56]	; 0x38
  402998:	f7ff bb0e 	b.w	401fb8 <_svfprintf_r+0x220>
  40299c:	aa25      	add	r2, sp, #148	; 0x94
  40299e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029a0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029a2:	f002 fb5b 	bl	40505c <__ssprint_r>
  4029a6:	2800      	cmp	r0, #0
  4029a8:	f47f aac8 	bne.w	401f3c <_svfprintf_r+0x1a4>
  4029ac:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4029b0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029b2:	46c8      	mov	r8, r9
  4029b4:	f7ff bb5e 	b.w	402074 <_svfprintf_r+0x2dc>
  4029b8:	1e5e      	subs	r6, r3, #1
  4029ba:	2e00      	cmp	r6, #0
  4029bc:	f77f af0a 	ble.w	4027d4 <_svfprintf_r+0xa3c>
  4029c0:	2e10      	cmp	r6, #16
  4029c2:	4d03      	ldr	r5, [pc, #12]	; (4029d0 <_svfprintf_r+0xc38>)
  4029c4:	dd22      	ble.n	402a0c <_svfprintf_r+0xc74>
  4029c6:	4622      	mov	r2, r4
  4029c8:	f04f 0b10 	mov.w	fp, #16
  4029cc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4029ce:	e006      	b.n	4029de <_svfprintf_r+0xc46>
  4029d0:	00406888 	.word	0x00406888
  4029d4:	3e10      	subs	r6, #16
  4029d6:	2e10      	cmp	r6, #16
  4029d8:	f108 0808 	add.w	r8, r8, #8
  4029dc:	dd15      	ble.n	402a0a <_svfprintf_r+0xc72>
  4029de:	3701      	adds	r7, #1
  4029e0:	3210      	adds	r2, #16
  4029e2:	2f07      	cmp	r7, #7
  4029e4:	9227      	str	r2, [sp, #156]	; 0x9c
  4029e6:	9726      	str	r7, [sp, #152]	; 0x98
  4029e8:	e888 0820 	stmia.w	r8, {r5, fp}
  4029ec:	ddf2      	ble.n	4029d4 <_svfprintf_r+0xc3c>
  4029ee:	aa25      	add	r2, sp, #148	; 0x94
  4029f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029f2:	4620      	mov	r0, r4
  4029f4:	f002 fb32 	bl	40505c <__ssprint_r>
  4029f8:	2800      	cmp	r0, #0
  4029fa:	f47f aa9f 	bne.w	401f3c <_svfprintf_r+0x1a4>
  4029fe:	3e10      	subs	r6, #16
  402a00:	2e10      	cmp	r6, #16
  402a02:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402a04:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a06:	46c8      	mov	r8, r9
  402a08:	dce9      	bgt.n	4029de <_svfprintf_r+0xc46>
  402a0a:	4614      	mov	r4, r2
  402a0c:	3701      	adds	r7, #1
  402a0e:	4434      	add	r4, r6
  402a10:	2f07      	cmp	r7, #7
  402a12:	9427      	str	r4, [sp, #156]	; 0x9c
  402a14:	9726      	str	r7, [sp, #152]	; 0x98
  402a16:	e888 0060 	stmia.w	r8, {r5, r6}
  402a1a:	f77f aed9 	ble.w	4027d0 <_svfprintf_r+0xa38>
  402a1e:	aa25      	add	r2, sp, #148	; 0x94
  402a20:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a22:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a24:	f002 fb1a 	bl	40505c <__ssprint_r>
  402a28:	2800      	cmp	r0, #0
  402a2a:	f47f aa87 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402a2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a30:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a32:	46c8      	mov	r8, r9
  402a34:	e6ce      	b.n	4027d4 <_svfprintf_r+0xa3c>
  402a36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a38:	6814      	ldr	r4, [r2, #0]
  402a3a:	4613      	mov	r3, r2
  402a3c:	3304      	adds	r3, #4
  402a3e:	17e5      	asrs	r5, r4, #31
  402a40:	930f      	str	r3, [sp, #60]	; 0x3c
  402a42:	4622      	mov	r2, r4
  402a44:	462b      	mov	r3, r5
  402a46:	e4fa      	b.n	40243e <_svfprintf_r+0x6a6>
  402a48:	3204      	adds	r2, #4
  402a4a:	681c      	ldr	r4, [r3, #0]
  402a4c:	920f      	str	r2, [sp, #60]	; 0x3c
  402a4e:	2301      	movs	r3, #1
  402a50:	2500      	movs	r5, #0
  402a52:	f7ff ba94 	b.w	401f7e <_svfprintf_r+0x1e6>
  402a56:	681c      	ldr	r4, [r3, #0]
  402a58:	3304      	adds	r3, #4
  402a5a:	930f      	str	r3, [sp, #60]	; 0x3c
  402a5c:	2500      	movs	r5, #0
  402a5e:	e421      	b.n	4022a4 <_svfprintf_r+0x50c>
  402a60:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a62:	460a      	mov	r2, r1
  402a64:	3204      	adds	r2, #4
  402a66:	680c      	ldr	r4, [r1, #0]
  402a68:	920f      	str	r2, [sp, #60]	; 0x3c
  402a6a:	2500      	movs	r5, #0
  402a6c:	f7ff ba87 	b.w	401f7e <_svfprintf_r+0x1e6>
  402a70:	4614      	mov	r4, r2
  402a72:	3301      	adds	r3, #1
  402a74:	4434      	add	r4, r6
  402a76:	2b07      	cmp	r3, #7
  402a78:	9427      	str	r4, [sp, #156]	; 0x9c
  402a7a:	9326      	str	r3, [sp, #152]	; 0x98
  402a7c:	e888 0060 	stmia.w	r8, {r5, r6}
  402a80:	f77f ab68 	ble.w	402154 <_svfprintf_r+0x3bc>
  402a84:	e6b3      	b.n	4027ee <_svfprintf_r+0xa56>
  402a86:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402a8a:	f8cd b01c 	str.w	fp, [sp, #28]
  402a8e:	ae42      	add	r6, sp, #264	; 0x108
  402a90:	3430      	adds	r4, #48	; 0x30
  402a92:	2301      	movs	r3, #1
  402a94:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402a98:	930e      	str	r3, [sp, #56]	; 0x38
  402a9a:	f7ff ba8d 	b.w	401fb8 <_svfprintf_r+0x220>
  402a9e:	aa25      	add	r2, sp, #148	; 0x94
  402aa0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402aa2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402aa4:	f002 fada 	bl	40505c <__ssprint_r>
  402aa8:	2800      	cmp	r0, #0
  402aaa:	f47f aa47 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402aae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ab0:	46c8      	mov	r8, r9
  402ab2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402ab4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ab6:	429a      	cmp	r2, r3
  402ab8:	db44      	blt.n	402b44 <_svfprintf_r+0xdac>
  402aba:	9b07      	ldr	r3, [sp, #28]
  402abc:	07d9      	lsls	r1, r3, #31
  402abe:	d441      	bmi.n	402b44 <_svfprintf_r+0xdac>
  402ac0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ac2:	9812      	ldr	r0, [sp, #72]	; 0x48
  402ac4:	1a9a      	subs	r2, r3, r2
  402ac6:	1a1d      	subs	r5, r3, r0
  402ac8:	4295      	cmp	r5, r2
  402aca:	bfa8      	it	ge
  402acc:	4615      	movge	r5, r2
  402ace:	2d00      	cmp	r5, #0
  402ad0:	dd0e      	ble.n	402af0 <_svfprintf_r+0xd58>
  402ad2:	9926      	ldr	r1, [sp, #152]	; 0x98
  402ad4:	f8c8 5004 	str.w	r5, [r8, #4]
  402ad8:	3101      	adds	r1, #1
  402ada:	4406      	add	r6, r0
  402adc:	442c      	add	r4, r5
  402ade:	2907      	cmp	r1, #7
  402ae0:	f8c8 6000 	str.w	r6, [r8]
  402ae4:	9427      	str	r4, [sp, #156]	; 0x9c
  402ae6:	9126      	str	r1, [sp, #152]	; 0x98
  402ae8:	f300 823b 	bgt.w	402f62 <_svfprintf_r+0x11ca>
  402aec:	f108 0808 	add.w	r8, r8, #8
  402af0:	2d00      	cmp	r5, #0
  402af2:	bfac      	ite	ge
  402af4:	1b56      	subge	r6, r2, r5
  402af6:	4616      	movlt	r6, r2
  402af8:	2e00      	cmp	r6, #0
  402afa:	f77f ab2d 	ble.w	402158 <_svfprintf_r+0x3c0>
  402afe:	2e10      	cmp	r6, #16
  402b00:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b02:	4db0      	ldr	r5, [pc, #704]	; (402dc4 <_svfprintf_r+0x102c>)
  402b04:	ddb5      	ble.n	402a72 <_svfprintf_r+0xcda>
  402b06:	4622      	mov	r2, r4
  402b08:	2710      	movs	r7, #16
  402b0a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402b0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402b10:	e004      	b.n	402b1c <_svfprintf_r+0xd84>
  402b12:	f108 0808 	add.w	r8, r8, #8
  402b16:	3e10      	subs	r6, #16
  402b18:	2e10      	cmp	r6, #16
  402b1a:	dda9      	ble.n	402a70 <_svfprintf_r+0xcd8>
  402b1c:	3301      	adds	r3, #1
  402b1e:	3210      	adds	r2, #16
  402b20:	2b07      	cmp	r3, #7
  402b22:	9227      	str	r2, [sp, #156]	; 0x9c
  402b24:	9326      	str	r3, [sp, #152]	; 0x98
  402b26:	e888 00a0 	stmia.w	r8, {r5, r7}
  402b2a:	ddf2      	ble.n	402b12 <_svfprintf_r+0xd7a>
  402b2c:	aa25      	add	r2, sp, #148	; 0x94
  402b2e:	4621      	mov	r1, r4
  402b30:	4658      	mov	r0, fp
  402b32:	f002 fa93 	bl	40505c <__ssprint_r>
  402b36:	2800      	cmp	r0, #0
  402b38:	f47f aa00 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402b3c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402b3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b40:	46c8      	mov	r8, r9
  402b42:	e7e8      	b.n	402b16 <_svfprintf_r+0xd7e>
  402b44:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b46:	9819      	ldr	r0, [sp, #100]	; 0x64
  402b48:	991a      	ldr	r1, [sp, #104]	; 0x68
  402b4a:	f8c8 1000 	str.w	r1, [r8]
  402b4e:	3301      	adds	r3, #1
  402b50:	4404      	add	r4, r0
  402b52:	2b07      	cmp	r3, #7
  402b54:	9427      	str	r4, [sp, #156]	; 0x9c
  402b56:	f8c8 0004 	str.w	r0, [r8, #4]
  402b5a:	9326      	str	r3, [sp, #152]	; 0x98
  402b5c:	f300 81f5 	bgt.w	402f4a <_svfprintf_r+0x11b2>
  402b60:	f108 0808 	add.w	r8, r8, #8
  402b64:	e7ac      	b.n	402ac0 <_svfprintf_r+0xd28>
  402b66:	9b07      	ldr	r3, [sp, #28]
  402b68:	07da      	lsls	r2, r3, #31
  402b6a:	f53f adfe 	bmi.w	40276a <_svfprintf_r+0x9d2>
  402b6e:	3701      	adds	r7, #1
  402b70:	3401      	adds	r4, #1
  402b72:	2301      	movs	r3, #1
  402b74:	2f07      	cmp	r7, #7
  402b76:	9427      	str	r4, [sp, #156]	; 0x9c
  402b78:	9726      	str	r7, [sp, #152]	; 0x98
  402b7a:	f8c8 6000 	str.w	r6, [r8]
  402b7e:	f8c8 3004 	str.w	r3, [r8, #4]
  402b82:	f77f ae25 	ble.w	4027d0 <_svfprintf_r+0xa38>
  402b86:	e74a      	b.n	402a1e <_svfprintf_r+0xc86>
  402b88:	aa25      	add	r2, sp, #148	; 0x94
  402b8a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b8c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b8e:	f002 fa65 	bl	40505c <__ssprint_r>
  402b92:	2800      	cmp	r0, #0
  402b94:	f47f a9d2 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402b98:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b9a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b9c:	46c8      	mov	r8, r9
  402b9e:	e5f2      	b.n	402786 <_svfprintf_r+0x9ee>
  402ba0:	aa25      	add	r2, sp, #148	; 0x94
  402ba2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ba4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ba6:	f002 fa59 	bl	40505c <__ssprint_r>
  402baa:	2800      	cmp	r0, #0
  402bac:	f47f a9c6 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402bb0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bb2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402bb4:	46c8      	mov	r8, r9
  402bb6:	e5f5      	b.n	4027a4 <_svfprintf_r+0xa0c>
  402bb8:	464e      	mov	r6, r9
  402bba:	f7ff b9fd 	b.w	401fb8 <_svfprintf_r+0x220>
  402bbe:	aa25      	add	r2, sp, #148	; 0x94
  402bc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bc2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bc4:	f002 fa4a 	bl	40505c <__ssprint_r>
  402bc8:	2800      	cmp	r0, #0
  402bca:	f47f a9b7 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402bce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bd0:	46c8      	mov	r8, r9
  402bd2:	f7ff ba72 	b.w	4020ba <_svfprintf_r+0x322>
  402bd6:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402bd8:	4622      	mov	r2, r4
  402bda:	4620      	mov	r0, r4
  402bdc:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402bde:	4623      	mov	r3, r4
  402be0:	4621      	mov	r1, r4
  402be2:	f002 ff37 	bl	405a54 <__aeabi_dcmpun>
  402be6:	2800      	cmp	r0, #0
  402be8:	f040 8286 	bne.w	4030f8 <_svfprintf_r+0x1360>
  402bec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402bee:	3301      	adds	r3, #1
  402bf0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bf2:	f023 0320 	bic.w	r3, r3, #32
  402bf6:	930e      	str	r3, [sp, #56]	; 0x38
  402bf8:	f000 81e2 	beq.w	402fc0 <_svfprintf_r+0x1228>
  402bfc:	2b47      	cmp	r3, #71	; 0x47
  402bfe:	f000 811e 	beq.w	402e3e <_svfprintf_r+0x10a6>
  402c02:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402c06:	9307      	str	r3, [sp, #28]
  402c08:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402c0a:	1e1f      	subs	r7, r3, #0
  402c0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402c0e:	9308      	str	r3, [sp, #32]
  402c10:	bfbb      	ittet	lt
  402c12:	463b      	movlt	r3, r7
  402c14:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402c18:	2300      	movge	r3, #0
  402c1a:	232d      	movlt	r3, #45	; 0x2d
  402c1c:	9310      	str	r3, [sp, #64]	; 0x40
  402c1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c20:	2b66      	cmp	r3, #102	; 0x66
  402c22:	f000 81bb 	beq.w	402f9c <_svfprintf_r+0x1204>
  402c26:	2b46      	cmp	r3, #70	; 0x46
  402c28:	f000 80df 	beq.w	402dea <_svfprintf_r+0x1052>
  402c2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c2e:	9a08      	ldr	r2, [sp, #32]
  402c30:	2b45      	cmp	r3, #69	; 0x45
  402c32:	bf0c      	ite	eq
  402c34:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402c36:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402c38:	a823      	add	r0, sp, #140	; 0x8c
  402c3a:	a920      	add	r1, sp, #128	; 0x80
  402c3c:	bf08      	it	eq
  402c3e:	1c5d      	addeq	r5, r3, #1
  402c40:	9004      	str	r0, [sp, #16]
  402c42:	9103      	str	r1, [sp, #12]
  402c44:	a81f      	add	r0, sp, #124	; 0x7c
  402c46:	2102      	movs	r1, #2
  402c48:	463b      	mov	r3, r7
  402c4a:	9002      	str	r0, [sp, #8]
  402c4c:	9501      	str	r5, [sp, #4]
  402c4e:	9100      	str	r1, [sp, #0]
  402c50:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c52:	f000 fb75 	bl	403340 <_dtoa_r>
  402c56:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c58:	2b67      	cmp	r3, #103	; 0x67
  402c5a:	4606      	mov	r6, r0
  402c5c:	f040 81e0 	bne.w	403020 <_svfprintf_r+0x1288>
  402c60:	f01b 0f01 	tst.w	fp, #1
  402c64:	f000 8246 	beq.w	4030f4 <_svfprintf_r+0x135c>
  402c68:	1974      	adds	r4, r6, r5
  402c6a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402c6c:	9808      	ldr	r0, [sp, #32]
  402c6e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402c70:	4639      	mov	r1, r7
  402c72:	f002 febd 	bl	4059f0 <__aeabi_dcmpeq>
  402c76:	2800      	cmp	r0, #0
  402c78:	f040 8165 	bne.w	402f46 <_svfprintf_r+0x11ae>
  402c7c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c7e:	42a3      	cmp	r3, r4
  402c80:	d206      	bcs.n	402c90 <_svfprintf_r+0xef8>
  402c82:	2130      	movs	r1, #48	; 0x30
  402c84:	1c5a      	adds	r2, r3, #1
  402c86:	9223      	str	r2, [sp, #140]	; 0x8c
  402c88:	7019      	strb	r1, [r3, #0]
  402c8a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c8c:	429c      	cmp	r4, r3
  402c8e:	d8f9      	bhi.n	402c84 <_svfprintf_r+0xeec>
  402c90:	1b9b      	subs	r3, r3, r6
  402c92:	9313      	str	r3, [sp, #76]	; 0x4c
  402c94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c96:	2b47      	cmp	r3, #71	; 0x47
  402c98:	f000 80e9 	beq.w	402e6e <_svfprintf_r+0x10d6>
  402c9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c9e:	2b65      	cmp	r3, #101	; 0x65
  402ca0:	f340 81cd 	ble.w	40303e <_svfprintf_r+0x12a6>
  402ca4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ca6:	2b66      	cmp	r3, #102	; 0x66
  402ca8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402caa:	9312      	str	r3, [sp, #72]	; 0x48
  402cac:	f000 819e 	beq.w	402fec <_svfprintf_r+0x1254>
  402cb0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402cb4:	4619      	mov	r1, r3
  402cb6:	4291      	cmp	r1, r2
  402cb8:	f300 818a 	bgt.w	402fd0 <_svfprintf_r+0x1238>
  402cbc:	f01b 0f01 	tst.w	fp, #1
  402cc0:	f040 8213 	bne.w	4030ea <_svfprintf_r+0x1352>
  402cc4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402cc8:	9308      	str	r3, [sp, #32]
  402cca:	2367      	movs	r3, #103	; 0x67
  402ccc:	920e      	str	r2, [sp, #56]	; 0x38
  402cce:	9311      	str	r3, [sp, #68]	; 0x44
  402cd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402cd2:	2b00      	cmp	r3, #0
  402cd4:	f040 80c4 	bne.w	402e60 <_svfprintf_r+0x10c8>
  402cd8:	930a      	str	r3, [sp, #40]	; 0x28
  402cda:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402cde:	f7ff b973 	b.w	401fc8 <_svfprintf_r+0x230>
  402ce2:	4635      	mov	r5, r6
  402ce4:	460c      	mov	r4, r1
  402ce6:	4646      	mov	r6, r8
  402ce8:	4690      	mov	r8, r2
  402cea:	3301      	adds	r3, #1
  402cec:	443c      	add	r4, r7
  402cee:	2b07      	cmp	r3, #7
  402cf0:	9427      	str	r4, [sp, #156]	; 0x9c
  402cf2:	9326      	str	r3, [sp, #152]	; 0x98
  402cf4:	e888 00a0 	stmia.w	r8, {r5, r7}
  402cf8:	f73f aed1 	bgt.w	402a9e <_svfprintf_r+0xd06>
  402cfc:	f108 0808 	add.w	r8, r8, #8
  402d00:	e6d7      	b.n	402ab2 <_svfprintf_r+0xd1a>
  402d02:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d04:	6813      	ldr	r3, [r2, #0]
  402d06:	3204      	adds	r2, #4
  402d08:	920f      	str	r2, [sp, #60]	; 0x3c
  402d0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402d0c:	601a      	str	r2, [r3, #0]
  402d0e:	f7ff b86a 	b.w	401de6 <_svfprintf_r+0x4e>
  402d12:	aa25      	add	r2, sp, #148	; 0x94
  402d14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d16:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d18:	f002 f9a0 	bl	40505c <__ssprint_r>
  402d1c:	2800      	cmp	r0, #0
  402d1e:	f47f a90d 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402d22:	46c8      	mov	r8, r9
  402d24:	e48d      	b.n	402642 <_svfprintf_r+0x8aa>
  402d26:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d28:	4a27      	ldr	r2, [pc, #156]	; (402dc8 <_svfprintf_r+0x1030>)
  402d2a:	f8c8 2000 	str.w	r2, [r8]
  402d2e:	3301      	adds	r3, #1
  402d30:	3401      	adds	r4, #1
  402d32:	2201      	movs	r2, #1
  402d34:	2b07      	cmp	r3, #7
  402d36:	9427      	str	r4, [sp, #156]	; 0x9c
  402d38:	9326      	str	r3, [sp, #152]	; 0x98
  402d3a:	f8c8 2004 	str.w	r2, [r8, #4]
  402d3e:	dc72      	bgt.n	402e26 <_svfprintf_r+0x108e>
  402d40:	f108 0808 	add.w	r8, r8, #8
  402d44:	b929      	cbnz	r1, 402d52 <_svfprintf_r+0xfba>
  402d46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d48:	b91b      	cbnz	r3, 402d52 <_svfprintf_r+0xfba>
  402d4a:	9b07      	ldr	r3, [sp, #28]
  402d4c:	07d8      	lsls	r0, r3, #31
  402d4e:	f57f aa03 	bpl.w	402158 <_svfprintf_r+0x3c0>
  402d52:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d54:	9819      	ldr	r0, [sp, #100]	; 0x64
  402d56:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402d58:	f8c8 2000 	str.w	r2, [r8]
  402d5c:	3301      	adds	r3, #1
  402d5e:	4602      	mov	r2, r0
  402d60:	4422      	add	r2, r4
  402d62:	2b07      	cmp	r3, #7
  402d64:	9227      	str	r2, [sp, #156]	; 0x9c
  402d66:	f8c8 0004 	str.w	r0, [r8, #4]
  402d6a:	9326      	str	r3, [sp, #152]	; 0x98
  402d6c:	f300 818d 	bgt.w	40308a <_svfprintf_r+0x12f2>
  402d70:	f108 0808 	add.w	r8, r8, #8
  402d74:	2900      	cmp	r1, #0
  402d76:	f2c0 8165 	blt.w	403044 <_svfprintf_r+0x12ac>
  402d7a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402d7c:	f8c8 6000 	str.w	r6, [r8]
  402d80:	3301      	adds	r3, #1
  402d82:	188c      	adds	r4, r1, r2
  402d84:	2b07      	cmp	r3, #7
  402d86:	9427      	str	r4, [sp, #156]	; 0x9c
  402d88:	9326      	str	r3, [sp, #152]	; 0x98
  402d8a:	f8c8 1004 	str.w	r1, [r8, #4]
  402d8e:	f77f a9e1 	ble.w	402154 <_svfprintf_r+0x3bc>
  402d92:	e52c      	b.n	4027ee <_svfprintf_r+0xa56>
  402d94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d96:	9909      	ldr	r1, [sp, #36]	; 0x24
  402d98:	6813      	ldr	r3, [r2, #0]
  402d9a:	17cd      	asrs	r5, r1, #31
  402d9c:	4608      	mov	r0, r1
  402d9e:	3204      	adds	r2, #4
  402da0:	4629      	mov	r1, r5
  402da2:	920f      	str	r2, [sp, #60]	; 0x3c
  402da4:	e9c3 0100 	strd	r0, r1, [r3]
  402da8:	f7ff b81d 	b.w	401de6 <_svfprintf_r+0x4e>
  402dac:	aa25      	add	r2, sp, #148	; 0x94
  402dae:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402db0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402db2:	f002 f953 	bl	40505c <__ssprint_r>
  402db6:	2800      	cmp	r0, #0
  402db8:	f47f a8c0 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402dbc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dbe:	46c8      	mov	r8, r9
  402dc0:	e458      	b.n	402674 <_svfprintf_r+0x8dc>
  402dc2:	bf00      	nop
  402dc4:	00406888 	.word	0x00406888
  402dc8:	00406874 	.word	0x00406874
  402dcc:	2140      	movs	r1, #64	; 0x40
  402dce:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dd0:	f001 fa0c 	bl	4041ec <_malloc_r>
  402dd4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402dd6:	6010      	str	r0, [r2, #0]
  402dd8:	6110      	str	r0, [r2, #16]
  402dda:	2800      	cmp	r0, #0
  402ddc:	f000 81f2 	beq.w	4031c4 <_svfprintf_r+0x142c>
  402de0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402de2:	2340      	movs	r3, #64	; 0x40
  402de4:	6153      	str	r3, [r2, #20]
  402de6:	f7fe bfee 	b.w	401dc6 <_svfprintf_r+0x2e>
  402dea:	a823      	add	r0, sp, #140	; 0x8c
  402dec:	a920      	add	r1, sp, #128	; 0x80
  402dee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402df0:	9004      	str	r0, [sp, #16]
  402df2:	9103      	str	r1, [sp, #12]
  402df4:	a81f      	add	r0, sp, #124	; 0x7c
  402df6:	2103      	movs	r1, #3
  402df8:	9002      	str	r0, [sp, #8]
  402dfa:	9a08      	ldr	r2, [sp, #32]
  402dfc:	9401      	str	r4, [sp, #4]
  402dfe:	463b      	mov	r3, r7
  402e00:	9100      	str	r1, [sp, #0]
  402e02:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e04:	f000 fa9c 	bl	403340 <_dtoa_r>
  402e08:	4625      	mov	r5, r4
  402e0a:	4606      	mov	r6, r0
  402e0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e0e:	2b46      	cmp	r3, #70	; 0x46
  402e10:	eb06 0405 	add.w	r4, r6, r5
  402e14:	f47f af29 	bne.w	402c6a <_svfprintf_r+0xed2>
  402e18:	7833      	ldrb	r3, [r6, #0]
  402e1a:	2b30      	cmp	r3, #48	; 0x30
  402e1c:	f000 8178 	beq.w	403110 <_svfprintf_r+0x1378>
  402e20:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402e22:	442c      	add	r4, r5
  402e24:	e721      	b.n	402c6a <_svfprintf_r+0xed2>
  402e26:	aa25      	add	r2, sp, #148	; 0x94
  402e28:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e2a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e2c:	f002 f916 	bl	40505c <__ssprint_r>
  402e30:	2800      	cmp	r0, #0
  402e32:	f47f a883 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402e36:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402e38:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e3a:	46c8      	mov	r8, r9
  402e3c:	e782      	b.n	402d44 <_svfprintf_r+0xfac>
  402e3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e40:	2b00      	cmp	r3, #0
  402e42:	bf08      	it	eq
  402e44:	2301      	moveq	r3, #1
  402e46:	930a      	str	r3, [sp, #40]	; 0x28
  402e48:	e6db      	b.n	402c02 <_svfprintf_r+0xe6a>
  402e4a:	4630      	mov	r0, r6
  402e4c:	940a      	str	r4, [sp, #40]	; 0x28
  402e4e:	f002 f897 	bl	404f80 <strlen>
  402e52:	950f      	str	r5, [sp, #60]	; 0x3c
  402e54:	900e      	str	r0, [sp, #56]	; 0x38
  402e56:	f8cd b01c 	str.w	fp, [sp, #28]
  402e5a:	4603      	mov	r3, r0
  402e5c:	f7ff b9f9 	b.w	402252 <_svfprintf_r+0x4ba>
  402e60:	272d      	movs	r7, #45	; 0x2d
  402e62:	2300      	movs	r3, #0
  402e64:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402e68:	930a      	str	r3, [sp, #40]	; 0x28
  402e6a:	f7ff b8ae 	b.w	401fca <_svfprintf_r+0x232>
  402e6e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402e70:	9312      	str	r3, [sp, #72]	; 0x48
  402e72:	461a      	mov	r2, r3
  402e74:	3303      	adds	r3, #3
  402e76:	db04      	blt.n	402e82 <_svfprintf_r+0x10ea>
  402e78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e7a:	4619      	mov	r1, r3
  402e7c:	4291      	cmp	r1, r2
  402e7e:	f6bf af17 	bge.w	402cb0 <_svfprintf_r+0xf18>
  402e82:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e84:	3b02      	subs	r3, #2
  402e86:	9311      	str	r3, [sp, #68]	; 0x44
  402e88:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402e8c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402e90:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e92:	3b01      	subs	r3, #1
  402e94:	2b00      	cmp	r3, #0
  402e96:	931f      	str	r3, [sp, #124]	; 0x7c
  402e98:	bfbd      	ittte	lt
  402e9a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402e9c:	f1c3 0301 	rsblt	r3, r3, #1
  402ea0:	222d      	movlt	r2, #45	; 0x2d
  402ea2:	222b      	movge	r2, #43	; 0x2b
  402ea4:	2b09      	cmp	r3, #9
  402ea6:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402eaa:	f340 8116 	ble.w	4030da <_svfprintf_r+0x1342>
  402eae:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402eb2:	4620      	mov	r0, r4
  402eb4:	4dab      	ldr	r5, [pc, #684]	; (403164 <_svfprintf_r+0x13cc>)
  402eb6:	e000      	b.n	402eba <_svfprintf_r+0x1122>
  402eb8:	4610      	mov	r0, r2
  402eba:	fb85 1203 	smull	r1, r2, r5, r3
  402ebe:	17d9      	asrs	r1, r3, #31
  402ec0:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402ec4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402ec8:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402ecc:	3230      	adds	r2, #48	; 0x30
  402ece:	2909      	cmp	r1, #9
  402ed0:	f800 2c01 	strb.w	r2, [r0, #-1]
  402ed4:	460b      	mov	r3, r1
  402ed6:	f100 32ff 	add.w	r2, r0, #4294967295
  402eda:	dced      	bgt.n	402eb8 <_svfprintf_r+0x1120>
  402edc:	3330      	adds	r3, #48	; 0x30
  402ede:	3802      	subs	r0, #2
  402ee0:	b2d9      	uxtb	r1, r3
  402ee2:	4284      	cmp	r4, r0
  402ee4:	f802 1c01 	strb.w	r1, [r2, #-1]
  402ee8:	f240 8165 	bls.w	4031b6 <_svfprintf_r+0x141e>
  402eec:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402ef0:	4613      	mov	r3, r2
  402ef2:	e001      	b.n	402ef8 <_svfprintf_r+0x1160>
  402ef4:	f813 1b01 	ldrb.w	r1, [r3], #1
  402ef8:	f800 1b01 	strb.w	r1, [r0], #1
  402efc:	42a3      	cmp	r3, r4
  402efe:	d1f9      	bne.n	402ef4 <_svfprintf_r+0x115c>
  402f00:	3301      	adds	r3, #1
  402f02:	1a9b      	subs	r3, r3, r2
  402f04:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402f08:	4413      	add	r3, r2
  402f0a:	aa21      	add	r2, sp, #132	; 0x84
  402f0c:	1a9b      	subs	r3, r3, r2
  402f0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402f10:	931b      	str	r3, [sp, #108]	; 0x6c
  402f12:	2a01      	cmp	r2, #1
  402f14:	4413      	add	r3, r2
  402f16:	930e      	str	r3, [sp, #56]	; 0x38
  402f18:	f340 8119 	ble.w	40314e <_svfprintf_r+0x13b6>
  402f1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402f1e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402f20:	4413      	add	r3, r2
  402f22:	930e      	str	r3, [sp, #56]	; 0x38
  402f24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402f28:	9308      	str	r3, [sp, #32]
  402f2a:	2300      	movs	r3, #0
  402f2c:	9312      	str	r3, [sp, #72]	; 0x48
  402f2e:	e6cf      	b.n	402cd0 <_svfprintf_r+0xf38>
  402f30:	aa25      	add	r2, sp, #148	; 0x94
  402f32:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f34:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f36:	f002 f891 	bl	40505c <__ssprint_r>
  402f3a:	2800      	cmp	r0, #0
  402f3c:	f47e affe 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402f40:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f42:	46c8      	mov	r8, r9
  402f44:	e4d7      	b.n	4028f6 <_svfprintf_r+0xb5e>
  402f46:	4623      	mov	r3, r4
  402f48:	e6a2      	b.n	402c90 <_svfprintf_r+0xef8>
  402f4a:	aa25      	add	r2, sp, #148	; 0x94
  402f4c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f4e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f50:	f002 f884 	bl	40505c <__ssprint_r>
  402f54:	2800      	cmp	r0, #0
  402f56:	f47e aff1 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402f5a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f5c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f5e:	46c8      	mov	r8, r9
  402f60:	e5ae      	b.n	402ac0 <_svfprintf_r+0xd28>
  402f62:	aa25      	add	r2, sp, #148	; 0x94
  402f64:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f66:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f68:	f002 f878 	bl	40505c <__ssprint_r>
  402f6c:	2800      	cmp	r0, #0
  402f6e:	f47e afe5 	bne.w	401f3c <_svfprintf_r+0x1a4>
  402f72:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f76:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f78:	1a9a      	subs	r2, r3, r2
  402f7a:	46c8      	mov	r8, r9
  402f7c:	e5b8      	b.n	402af0 <_svfprintf_r+0xd58>
  402f7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f80:	9612      	str	r6, [sp, #72]	; 0x48
  402f82:	2b06      	cmp	r3, #6
  402f84:	bf28      	it	cs
  402f86:	2306      	movcs	r3, #6
  402f88:	960a      	str	r6, [sp, #40]	; 0x28
  402f8a:	4637      	mov	r7, r6
  402f8c:	9308      	str	r3, [sp, #32]
  402f8e:	950f      	str	r5, [sp, #60]	; 0x3c
  402f90:	f8cd b01c 	str.w	fp, [sp, #28]
  402f94:	930e      	str	r3, [sp, #56]	; 0x38
  402f96:	4e74      	ldr	r6, [pc, #464]	; (403168 <_svfprintf_r+0x13d0>)
  402f98:	f7ff b816 	b.w	401fc8 <_svfprintf_r+0x230>
  402f9c:	a823      	add	r0, sp, #140	; 0x8c
  402f9e:	a920      	add	r1, sp, #128	; 0x80
  402fa0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402fa2:	9004      	str	r0, [sp, #16]
  402fa4:	9103      	str	r1, [sp, #12]
  402fa6:	a81f      	add	r0, sp, #124	; 0x7c
  402fa8:	2103      	movs	r1, #3
  402faa:	9002      	str	r0, [sp, #8]
  402fac:	9a08      	ldr	r2, [sp, #32]
  402fae:	9501      	str	r5, [sp, #4]
  402fb0:	463b      	mov	r3, r7
  402fb2:	9100      	str	r1, [sp, #0]
  402fb4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fb6:	f000 f9c3 	bl	403340 <_dtoa_r>
  402fba:	4606      	mov	r6, r0
  402fbc:	1944      	adds	r4, r0, r5
  402fbe:	e72b      	b.n	402e18 <_svfprintf_r+0x1080>
  402fc0:	2306      	movs	r3, #6
  402fc2:	930a      	str	r3, [sp, #40]	; 0x28
  402fc4:	e61d      	b.n	402c02 <_svfprintf_r+0xe6a>
  402fc6:	272d      	movs	r7, #45	; 0x2d
  402fc8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402fcc:	f7ff bacd 	b.w	40256a <_svfprintf_r+0x7d2>
  402fd0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402fd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402fd4:	4413      	add	r3, r2
  402fd6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402fd8:	930e      	str	r3, [sp, #56]	; 0x38
  402fda:	2a00      	cmp	r2, #0
  402fdc:	f340 80b0 	ble.w	403140 <_svfprintf_r+0x13a8>
  402fe0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402fe4:	9308      	str	r3, [sp, #32]
  402fe6:	2367      	movs	r3, #103	; 0x67
  402fe8:	9311      	str	r3, [sp, #68]	; 0x44
  402fea:	e671      	b.n	402cd0 <_svfprintf_r+0xf38>
  402fec:	2b00      	cmp	r3, #0
  402fee:	f340 80c3 	ble.w	403178 <_svfprintf_r+0x13e0>
  402ff2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402ff4:	2a00      	cmp	r2, #0
  402ff6:	f040 8099 	bne.w	40312c <_svfprintf_r+0x1394>
  402ffa:	f01b 0f01 	tst.w	fp, #1
  402ffe:	f040 8095 	bne.w	40312c <_svfprintf_r+0x1394>
  403002:	9308      	str	r3, [sp, #32]
  403004:	930e      	str	r3, [sp, #56]	; 0x38
  403006:	e663      	b.n	402cd0 <_svfprintf_r+0xf38>
  403008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40300a:	9308      	str	r3, [sp, #32]
  40300c:	930e      	str	r3, [sp, #56]	; 0x38
  40300e:	900a      	str	r0, [sp, #40]	; 0x28
  403010:	950f      	str	r5, [sp, #60]	; 0x3c
  403012:	f8cd b01c 	str.w	fp, [sp, #28]
  403016:	9012      	str	r0, [sp, #72]	; 0x48
  403018:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40301c:	f7fe bfd4 	b.w	401fc8 <_svfprintf_r+0x230>
  403020:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403022:	2b47      	cmp	r3, #71	; 0x47
  403024:	f47f ae20 	bne.w	402c68 <_svfprintf_r+0xed0>
  403028:	f01b 0f01 	tst.w	fp, #1
  40302c:	f47f aeee 	bne.w	402e0c <_svfprintf_r+0x1074>
  403030:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403032:	1b9b      	subs	r3, r3, r6
  403034:	9313      	str	r3, [sp, #76]	; 0x4c
  403036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403038:	2b47      	cmp	r3, #71	; 0x47
  40303a:	f43f af18 	beq.w	402e6e <_svfprintf_r+0x10d6>
  40303e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403040:	9312      	str	r3, [sp, #72]	; 0x48
  403042:	e721      	b.n	402e88 <_svfprintf_r+0x10f0>
  403044:	424f      	negs	r7, r1
  403046:	3110      	adds	r1, #16
  403048:	4d48      	ldr	r5, [pc, #288]	; (40316c <_svfprintf_r+0x13d4>)
  40304a:	da2f      	bge.n	4030ac <_svfprintf_r+0x1314>
  40304c:	2410      	movs	r4, #16
  40304e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403052:	e004      	b.n	40305e <_svfprintf_r+0x12c6>
  403054:	f108 0808 	add.w	r8, r8, #8
  403058:	3f10      	subs	r7, #16
  40305a:	2f10      	cmp	r7, #16
  40305c:	dd26      	ble.n	4030ac <_svfprintf_r+0x1314>
  40305e:	3301      	adds	r3, #1
  403060:	3210      	adds	r2, #16
  403062:	2b07      	cmp	r3, #7
  403064:	9227      	str	r2, [sp, #156]	; 0x9c
  403066:	9326      	str	r3, [sp, #152]	; 0x98
  403068:	f8c8 5000 	str.w	r5, [r8]
  40306c:	f8c8 4004 	str.w	r4, [r8, #4]
  403070:	ddf0      	ble.n	403054 <_svfprintf_r+0x12bc>
  403072:	aa25      	add	r2, sp, #148	; 0x94
  403074:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403076:	4658      	mov	r0, fp
  403078:	f001 fff0 	bl	40505c <__ssprint_r>
  40307c:	2800      	cmp	r0, #0
  40307e:	f47e af5d 	bne.w	401f3c <_svfprintf_r+0x1a4>
  403082:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403084:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403086:	46c8      	mov	r8, r9
  403088:	e7e6      	b.n	403058 <_svfprintf_r+0x12c0>
  40308a:	aa25      	add	r2, sp, #148	; 0x94
  40308c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40308e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403090:	f001 ffe4 	bl	40505c <__ssprint_r>
  403094:	2800      	cmp	r0, #0
  403096:	f47e af51 	bne.w	401f3c <_svfprintf_r+0x1a4>
  40309a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40309c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40309e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030a0:	46c8      	mov	r8, r9
  4030a2:	e667      	b.n	402d74 <_svfprintf_r+0xfdc>
  4030a4:	2000      	movs	r0, #0
  4030a6:	900a      	str	r0, [sp, #40]	; 0x28
  4030a8:	f7fe bed0 	b.w	401e4c <_svfprintf_r+0xb4>
  4030ac:	3301      	adds	r3, #1
  4030ae:	443a      	add	r2, r7
  4030b0:	2b07      	cmp	r3, #7
  4030b2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4030b6:	9227      	str	r2, [sp, #156]	; 0x9c
  4030b8:	9326      	str	r3, [sp, #152]	; 0x98
  4030ba:	f108 0808 	add.w	r8, r8, #8
  4030be:	f77f ae5c 	ble.w	402d7a <_svfprintf_r+0xfe2>
  4030c2:	aa25      	add	r2, sp, #148	; 0x94
  4030c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030c6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030c8:	f001 ffc8 	bl	40505c <__ssprint_r>
  4030cc:	2800      	cmp	r0, #0
  4030ce:	f47e af35 	bne.w	401f3c <_svfprintf_r+0x1a4>
  4030d2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4030d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030d6:	46c8      	mov	r8, r9
  4030d8:	e64f      	b.n	402d7a <_svfprintf_r+0xfe2>
  4030da:	3330      	adds	r3, #48	; 0x30
  4030dc:	2230      	movs	r2, #48	; 0x30
  4030de:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4030e2:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4030e6:	ab22      	add	r3, sp, #136	; 0x88
  4030e8:	e70f      	b.n	402f0a <_svfprintf_r+0x1172>
  4030ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4030ec:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4030ee:	4413      	add	r3, r2
  4030f0:	930e      	str	r3, [sp, #56]	; 0x38
  4030f2:	e775      	b.n	402fe0 <_svfprintf_r+0x1248>
  4030f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4030f6:	e5cb      	b.n	402c90 <_svfprintf_r+0xef8>
  4030f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4030fa:	4e1d      	ldr	r6, [pc, #116]	; (403170 <_svfprintf_r+0x13d8>)
  4030fc:	2b00      	cmp	r3, #0
  4030fe:	bfb6      	itet	lt
  403100:	272d      	movlt	r7, #45	; 0x2d
  403102:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  403106:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40310a:	4b1a      	ldr	r3, [pc, #104]	; (403174 <_svfprintf_r+0x13dc>)
  40310c:	f7ff ba2f 	b.w	40256e <_svfprintf_r+0x7d6>
  403110:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403112:	9808      	ldr	r0, [sp, #32]
  403114:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403116:	4639      	mov	r1, r7
  403118:	f002 fc6a 	bl	4059f0 <__aeabi_dcmpeq>
  40311c:	2800      	cmp	r0, #0
  40311e:	f47f ae7f 	bne.w	402e20 <_svfprintf_r+0x1088>
  403122:	f1c5 0501 	rsb	r5, r5, #1
  403126:	951f      	str	r5, [sp, #124]	; 0x7c
  403128:	442c      	add	r4, r5
  40312a:	e59e      	b.n	402c6a <_svfprintf_r+0xed2>
  40312c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40312e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403130:	4413      	add	r3, r2
  403132:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403134:	441a      	add	r2, r3
  403136:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40313a:	920e      	str	r2, [sp, #56]	; 0x38
  40313c:	9308      	str	r3, [sp, #32]
  40313e:	e5c7      	b.n	402cd0 <_svfprintf_r+0xf38>
  403140:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403142:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403144:	f1c3 0301 	rsb	r3, r3, #1
  403148:	441a      	add	r2, r3
  40314a:	4613      	mov	r3, r2
  40314c:	e7d0      	b.n	4030f0 <_svfprintf_r+0x1358>
  40314e:	f01b 0301 	ands.w	r3, fp, #1
  403152:	9312      	str	r3, [sp, #72]	; 0x48
  403154:	f47f aee2 	bne.w	402f1c <_svfprintf_r+0x1184>
  403158:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40315a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40315e:	9308      	str	r3, [sp, #32]
  403160:	e5b6      	b.n	402cd0 <_svfprintf_r+0xf38>
  403162:	bf00      	nop
  403164:	66666667 	.word	0x66666667
  403168:	0040686c 	.word	0x0040686c
  40316c:	00406888 	.word	0x00406888
  403170:	00406840 	.word	0x00406840
  403174:	0040683c 	.word	0x0040683c
  403178:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40317a:	b913      	cbnz	r3, 403182 <_svfprintf_r+0x13ea>
  40317c:	f01b 0f01 	tst.w	fp, #1
  403180:	d002      	beq.n	403188 <_svfprintf_r+0x13f0>
  403182:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403184:	3301      	adds	r3, #1
  403186:	e7d4      	b.n	403132 <_svfprintf_r+0x139a>
  403188:	2301      	movs	r3, #1
  40318a:	e73a      	b.n	403002 <_svfprintf_r+0x126a>
  40318c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40318e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403192:	6828      	ldr	r0, [r5, #0]
  403194:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403198:	900a      	str	r0, [sp, #40]	; 0x28
  40319a:	4628      	mov	r0, r5
  40319c:	3004      	adds	r0, #4
  40319e:	46a2      	mov	sl, r4
  4031a0:	900f      	str	r0, [sp, #60]	; 0x3c
  4031a2:	f7fe be51 	b.w	401e48 <_svfprintf_r+0xb0>
  4031a6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031aa:	f7ff b867 	b.w	40227c <_svfprintf_r+0x4e4>
  4031ae:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031b2:	f7ff ba15 	b.w	4025e0 <_svfprintf_r+0x848>
  4031b6:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4031ba:	e6a6      	b.n	402f0a <_svfprintf_r+0x1172>
  4031bc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031c0:	f7ff b8eb 	b.w	40239a <_svfprintf_r+0x602>
  4031c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4031c6:	230c      	movs	r3, #12
  4031c8:	6013      	str	r3, [r2, #0]
  4031ca:	f04f 33ff 	mov.w	r3, #4294967295
  4031ce:	9309      	str	r3, [sp, #36]	; 0x24
  4031d0:	f7fe bebd 	b.w	401f4e <_svfprintf_r+0x1b6>
  4031d4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031d8:	f7ff b99a 	b.w	402510 <_svfprintf_r+0x778>
  4031dc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031e0:	f7ff b976 	b.w	4024d0 <_svfprintf_r+0x738>
  4031e4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031e8:	f7ff b959 	b.w	40249e <_svfprintf_r+0x706>
  4031ec:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031f0:	f7ff b912 	b.w	402418 <_svfprintf_r+0x680>

004031f4 <register_fini>:
  4031f4:	4b02      	ldr	r3, [pc, #8]	; (403200 <register_fini+0xc>)
  4031f6:	b113      	cbz	r3, 4031fe <register_fini+0xa>
  4031f8:	4802      	ldr	r0, [pc, #8]	; (403204 <register_fini+0x10>)
  4031fa:	f000 b805 	b.w	403208 <atexit>
  4031fe:	4770      	bx	lr
  403200:	00000000 	.word	0x00000000
  403204:	00404195 	.word	0x00404195

00403208 <atexit>:
  403208:	2300      	movs	r3, #0
  40320a:	4601      	mov	r1, r0
  40320c:	461a      	mov	r2, r3
  40320e:	4618      	mov	r0, r3
  403210:	f001 bfa2 	b.w	405158 <__register_exitproc>

00403214 <quorem>:
  403214:	6902      	ldr	r2, [r0, #16]
  403216:	690b      	ldr	r3, [r1, #16]
  403218:	4293      	cmp	r3, r2
  40321a:	f300 808d 	bgt.w	403338 <quorem+0x124>
  40321e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403222:	f103 38ff 	add.w	r8, r3, #4294967295
  403226:	f101 0714 	add.w	r7, r1, #20
  40322a:	f100 0b14 	add.w	fp, r0, #20
  40322e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403232:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403236:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40323a:	b083      	sub	sp, #12
  40323c:	3201      	adds	r2, #1
  40323e:	fbb3 f9f2 	udiv	r9, r3, r2
  403242:	eb0b 0304 	add.w	r3, fp, r4
  403246:	9400      	str	r4, [sp, #0]
  403248:	eb07 0a04 	add.w	sl, r7, r4
  40324c:	9301      	str	r3, [sp, #4]
  40324e:	f1b9 0f00 	cmp.w	r9, #0
  403252:	d039      	beq.n	4032c8 <quorem+0xb4>
  403254:	2500      	movs	r5, #0
  403256:	462e      	mov	r6, r5
  403258:	46bc      	mov	ip, r7
  40325a:	46de      	mov	lr, fp
  40325c:	f85c 4b04 	ldr.w	r4, [ip], #4
  403260:	f8de 3000 	ldr.w	r3, [lr]
  403264:	b2a2      	uxth	r2, r4
  403266:	fb09 5502 	mla	r5, r9, r2, r5
  40326a:	0c22      	lsrs	r2, r4, #16
  40326c:	0c2c      	lsrs	r4, r5, #16
  40326e:	fb09 4202 	mla	r2, r9, r2, r4
  403272:	b2ad      	uxth	r5, r5
  403274:	1b75      	subs	r5, r6, r5
  403276:	b296      	uxth	r6, r2
  403278:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40327c:	fa15 f383 	uxtah	r3, r5, r3
  403280:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403284:	b29b      	uxth	r3, r3
  403286:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40328a:	45e2      	cmp	sl, ip
  40328c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403290:	f84e 3b04 	str.w	r3, [lr], #4
  403294:	ea4f 4626 	mov.w	r6, r6, asr #16
  403298:	d2e0      	bcs.n	40325c <quorem+0x48>
  40329a:	9b00      	ldr	r3, [sp, #0]
  40329c:	f85b 3003 	ldr.w	r3, [fp, r3]
  4032a0:	b993      	cbnz	r3, 4032c8 <quorem+0xb4>
  4032a2:	9c01      	ldr	r4, [sp, #4]
  4032a4:	1f23      	subs	r3, r4, #4
  4032a6:	459b      	cmp	fp, r3
  4032a8:	d20c      	bcs.n	4032c4 <quorem+0xb0>
  4032aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4032ae:	b94b      	cbnz	r3, 4032c4 <quorem+0xb0>
  4032b0:	f1a4 0308 	sub.w	r3, r4, #8
  4032b4:	e002      	b.n	4032bc <quorem+0xa8>
  4032b6:	681a      	ldr	r2, [r3, #0]
  4032b8:	3b04      	subs	r3, #4
  4032ba:	b91a      	cbnz	r2, 4032c4 <quorem+0xb0>
  4032bc:	459b      	cmp	fp, r3
  4032be:	f108 38ff 	add.w	r8, r8, #4294967295
  4032c2:	d3f8      	bcc.n	4032b6 <quorem+0xa2>
  4032c4:	f8c0 8010 	str.w	r8, [r0, #16]
  4032c8:	4604      	mov	r4, r0
  4032ca:	f001 fd35 	bl	404d38 <__mcmp>
  4032ce:	2800      	cmp	r0, #0
  4032d0:	db2e      	blt.n	403330 <quorem+0x11c>
  4032d2:	f109 0901 	add.w	r9, r9, #1
  4032d6:	465d      	mov	r5, fp
  4032d8:	2300      	movs	r3, #0
  4032da:	f857 1b04 	ldr.w	r1, [r7], #4
  4032de:	6828      	ldr	r0, [r5, #0]
  4032e0:	b28a      	uxth	r2, r1
  4032e2:	1a9a      	subs	r2, r3, r2
  4032e4:	0c0b      	lsrs	r3, r1, #16
  4032e6:	fa12 f280 	uxtah	r2, r2, r0
  4032ea:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4032ee:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4032f2:	b292      	uxth	r2, r2
  4032f4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4032f8:	45ba      	cmp	sl, r7
  4032fa:	f845 2b04 	str.w	r2, [r5], #4
  4032fe:	ea4f 4323 	mov.w	r3, r3, asr #16
  403302:	d2ea      	bcs.n	4032da <quorem+0xc6>
  403304:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403308:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  40330c:	b982      	cbnz	r2, 403330 <quorem+0x11c>
  40330e:	1f1a      	subs	r2, r3, #4
  403310:	4593      	cmp	fp, r2
  403312:	d20b      	bcs.n	40332c <quorem+0x118>
  403314:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403318:	b942      	cbnz	r2, 40332c <quorem+0x118>
  40331a:	3b08      	subs	r3, #8
  40331c:	e002      	b.n	403324 <quorem+0x110>
  40331e:	681a      	ldr	r2, [r3, #0]
  403320:	3b04      	subs	r3, #4
  403322:	b91a      	cbnz	r2, 40332c <quorem+0x118>
  403324:	459b      	cmp	fp, r3
  403326:	f108 38ff 	add.w	r8, r8, #4294967295
  40332a:	d3f8      	bcc.n	40331e <quorem+0x10a>
  40332c:	f8c4 8010 	str.w	r8, [r4, #16]
  403330:	4648      	mov	r0, r9
  403332:	b003      	add	sp, #12
  403334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403338:	2000      	movs	r0, #0
  40333a:	4770      	bx	lr
  40333c:	0000      	movs	r0, r0
	...

00403340 <_dtoa_r>:
  403340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403344:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403346:	b09b      	sub	sp, #108	; 0x6c
  403348:	4604      	mov	r4, r0
  40334a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40334c:	4692      	mov	sl, r2
  40334e:	469b      	mov	fp, r3
  403350:	b141      	cbz	r1, 403364 <_dtoa_r+0x24>
  403352:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403354:	604a      	str	r2, [r1, #4]
  403356:	2301      	movs	r3, #1
  403358:	4093      	lsls	r3, r2
  40335a:	608b      	str	r3, [r1, #8]
  40335c:	f001 fb14 	bl	404988 <_Bfree>
  403360:	2300      	movs	r3, #0
  403362:	6423      	str	r3, [r4, #64]	; 0x40
  403364:	f1bb 0f00 	cmp.w	fp, #0
  403368:	465d      	mov	r5, fp
  40336a:	db35      	blt.n	4033d8 <_dtoa_r+0x98>
  40336c:	2300      	movs	r3, #0
  40336e:	6033      	str	r3, [r6, #0]
  403370:	4b9d      	ldr	r3, [pc, #628]	; (4035e8 <_dtoa_r+0x2a8>)
  403372:	43ab      	bics	r3, r5
  403374:	d015      	beq.n	4033a2 <_dtoa_r+0x62>
  403376:	4650      	mov	r0, sl
  403378:	4659      	mov	r1, fp
  40337a:	2200      	movs	r2, #0
  40337c:	2300      	movs	r3, #0
  40337e:	f002 fb37 	bl	4059f0 <__aeabi_dcmpeq>
  403382:	4680      	mov	r8, r0
  403384:	2800      	cmp	r0, #0
  403386:	d02d      	beq.n	4033e4 <_dtoa_r+0xa4>
  403388:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40338a:	2301      	movs	r3, #1
  40338c:	6013      	str	r3, [r2, #0]
  40338e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403390:	2b00      	cmp	r3, #0
  403392:	f000 80bd 	beq.w	403510 <_dtoa_r+0x1d0>
  403396:	4895      	ldr	r0, [pc, #596]	; (4035ec <_dtoa_r+0x2ac>)
  403398:	6018      	str	r0, [r3, #0]
  40339a:	3801      	subs	r0, #1
  40339c:	b01b      	add	sp, #108	; 0x6c
  40339e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033a2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4033a4:	f242 730f 	movw	r3, #9999	; 0x270f
  4033a8:	6013      	str	r3, [r2, #0]
  4033aa:	f1ba 0f00 	cmp.w	sl, #0
  4033ae:	d10d      	bne.n	4033cc <_dtoa_r+0x8c>
  4033b0:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4033b4:	b955      	cbnz	r5, 4033cc <_dtoa_r+0x8c>
  4033b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4033b8:	488d      	ldr	r0, [pc, #564]	; (4035f0 <_dtoa_r+0x2b0>)
  4033ba:	2b00      	cmp	r3, #0
  4033bc:	d0ee      	beq.n	40339c <_dtoa_r+0x5c>
  4033be:	f100 0308 	add.w	r3, r0, #8
  4033c2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4033c4:	6013      	str	r3, [r2, #0]
  4033c6:	b01b      	add	sp, #108	; 0x6c
  4033c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4033ce:	4889      	ldr	r0, [pc, #548]	; (4035f4 <_dtoa_r+0x2b4>)
  4033d0:	2b00      	cmp	r3, #0
  4033d2:	d0e3      	beq.n	40339c <_dtoa_r+0x5c>
  4033d4:	1cc3      	adds	r3, r0, #3
  4033d6:	e7f4      	b.n	4033c2 <_dtoa_r+0x82>
  4033d8:	2301      	movs	r3, #1
  4033da:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4033de:	6033      	str	r3, [r6, #0]
  4033e0:	46ab      	mov	fp, r5
  4033e2:	e7c5      	b.n	403370 <_dtoa_r+0x30>
  4033e4:	aa18      	add	r2, sp, #96	; 0x60
  4033e6:	ab19      	add	r3, sp, #100	; 0x64
  4033e8:	9201      	str	r2, [sp, #4]
  4033ea:	9300      	str	r3, [sp, #0]
  4033ec:	4652      	mov	r2, sl
  4033ee:	465b      	mov	r3, fp
  4033f0:	4620      	mov	r0, r4
  4033f2:	f001 fd41 	bl	404e78 <__d2b>
  4033f6:	0d2b      	lsrs	r3, r5, #20
  4033f8:	4681      	mov	r9, r0
  4033fa:	d071      	beq.n	4034e0 <_dtoa_r+0x1a0>
  4033fc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403400:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403404:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403406:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40340a:	4650      	mov	r0, sl
  40340c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403410:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403414:	2200      	movs	r2, #0
  403416:	4b78      	ldr	r3, [pc, #480]	; (4035f8 <_dtoa_r+0x2b8>)
  403418:	f7fe f85c 	bl	4014d4 <__aeabi_dsub>
  40341c:	a36c      	add	r3, pc, #432	; (adr r3, 4035d0 <_dtoa_r+0x290>)
  40341e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403422:	f7fe fa0b 	bl	40183c <__aeabi_dmul>
  403426:	a36c      	add	r3, pc, #432	; (adr r3, 4035d8 <_dtoa_r+0x298>)
  403428:	e9d3 2300 	ldrd	r2, r3, [r3]
  40342c:	f7fe f854 	bl	4014d8 <__adddf3>
  403430:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403434:	4630      	mov	r0, r6
  403436:	f7fe f99b 	bl	401770 <__aeabi_i2d>
  40343a:	a369      	add	r3, pc, #420	; (adr r3, 4035e0 <_dtoa_r+0x2a0>)
  40343c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403440:	f7fe f9fc 	bl	40183c <__aeabi_dmul>
  403444:	4602      	mov	r2, r0
  403446:	460b      	mov	r3, r1
  403448:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40344c:	f7fe f844 	bl	4014d8 <__adddf3>
  403450:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403454:	f002 fb14 	bl	405a80 <__aeabi_d2iz>
  403458:	2200      	movs	r2, #0
  40345a:	9002      	str	r0, [sp, #8]
  40345c:	2300      	movs	r3, #0
  40345e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403462:	f002 facf 	bl	405a04 <__aeabi_dcmplt>
  403466:	2800      	cmp	r0, #0
  403468:	f040 8173 	bne.w	403752 <_dtoa_r+0x412>
  40346c:	9d02      	ldr	r5, [sp, #8]
  40346e:	2d16      	cmp	r5, #22
  403470:	f200 815d 	bhi.w	40372e <_dtoa_r+0x3ee>
  403474:	4b61      	ldr	r3, [pc, #388]	; (4035fc <_dtoa_r+0x2bc>)
  403476:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40347a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40347e:	4652      	mov	r2, sl
  403480:	465b      	mov	r3, fp
  403482:	f002 fadd 	bl	405a40 <__aeabi_dcmpgt>
  403486:	2800      	cmp	r0, #0
  403488:	f000 81c5 	beq.w	403816 <_dtoa_r+0x4d6>
  40348c:	1e6b      	subs	r3, r5, #1
  40348e:	9302      	str	r3, [sp, #8]
  403490:	2300      	movs	r3, #0
  403492:	930e      	str	r3, [sp, #56]	; 0x38
  403494:	1bbf      	subs	r7, r7, r6
  403496:	1e7b      	subs	r3, r7, #1
  403498:	9306      	str	r3, [sp, #24]
  40349a:	f100 8154 	bmi.w	403746 <_dtoa_r+0x406>
  40349e:	2300      	movs	r3, #0
  4034a0:	9308      	str	r3, [sp, #32]
  4034a2:	9b02      	ldr	r3, [sp, #8]
  4034a4:	2b00      	cmp	r3, #0
  4034a6:	f2c0 8145 	blt.w	403734 <_dtoa_r+0x3f4>
  4034aa:	9a06      	ldr	r2, [sp, #24]
  4034ac:	930d      	str	r3, [sp, #52]	; 0x34
  4034ae:	4611      	mov	r1, r2
  4034b0:	4419      	add	r1, r3
  4034b2:	2300      	movs	r3, #0
  4034b4:	9106      	str	r1, [sp, #24]
  4034b6:	930c      	str	r3, [sp, #48]	; 0x30
  4034b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034ba:	2b09      	cmp	r3, #9
  4034bc:	d82a      	bhi.n	403514 <_dtoa_r+0x1d4>
  4034be:	2b05      	cmp	r3, #5
  4034c0:	f340 865b 	ble.w	40417a <_dtoa_r+0xe3a>
  4034c4:	3b04      	subs	r3, #4
  4034c6:	9324      	str	r3, [sp, #144]	; 0x90
  4034c8:	2500      	movs	r5, #0
  4034ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034cc:	3b02      	subs	r3, #2
  4034ce:	2b03      	cmp	r3, #3
  4034d0:	f200 8642 	bhi.w	404158 <_dtoa_r+0xe18>
  4034d4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4034d8:	02c903d4 	.word	0x02c903d4
  4034dc:	046103df 	.word	0x046103df
  4034e0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4034e2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4034e4:	443e      	add	r6, r7
  4034e6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4034ea:	2b20      	cmp	r3, #32
  4034ec:	f340 818e 	ble.w	40380c <_dtoa_r+0x4cc>
  4034f0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4034f4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4034f8:	409d      	lsls	r5, r3
  4034fa:	fa2a f000 	lsr.w	r0, sl, r0
  4034fe:	4328      	orrs	r0, r5
  403500:	f7fe f926 	bl	401750 <__aeabi_ui2d>
  403504:	2301      	movs	r3, #1
  403506:	3e01      	subs	r6, #1
  403508:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40350c:	9314      	str	r3, [sp, #80]	; 0x50
  40350e:	e781      	b.n	403414 <_dtoa_r+0xd4>
  403510:	483b      	ldr	r0, [pc, #236]	; (403600 <_dtoa_r+0x2c0>)
  403512:	e743      	b.n	40339c <_dtoa_r+0x5c>
  403514:	2100      	movs	r1, #0
  403516:	6461      	str	r1, [r4, #68]	; 0x44
  403518:	4620      	mov	r0, r4
  40351a:	9125      	str	r1, [sp, #148]	; 0x94
  40351c:	f001 fa0e 	bl	40493c <_Balloc>
  403520:	f04f 33ff 	mov.w	r3, #4294967295
  403524:	930a      	str	r3, [sp, #40]	; 0x28
  403526:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403528:	930f      	str	r3, [sp, #60]	; 0x3c
  40352a:	2301      	movs	r3, #1
  40352c:	9004      	str	r0, [sp, #16]
  40352e:	6420      	str	r0, [r4, #64]	; 0x40
  403530:	9224      	str	r2, [sp, #144]	; 0x90
  403532:	930b      	str	r3, [sp, #44]	; 0x2c
  403534:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403536:	2b00      	cmp	r3, #0
  403538:	f2c0 80d9 	blt.w	4036ee <_dtoa_r+0x3ae>
  40353c:	9a02      	ldr	r2, [sp, #8]
  40353e:	2a0e      	cmp	r2, #14
  403540:	f300 80d5 	bgt.w	4036ee <_dtoa_r+0x3ae>
  403544:	4b2d      	ldr	r3, [pc, #180]	; (4035fc <_dtoa_r+0x2bc>)
  403546:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40354a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40354e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403552:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403554:	2b00      	cmp	r3, #0
  403556:	f2c0 83ba 	blt.w	403cce <_dtoa_r+0x98e>
  40355a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40355e:	4650      	mov	r0, sl
  403560:	462a      	mov	r2, r5
  403562:	4633      	mov	r3, r6
  403564:	4659      	mov	r1, fp
  403566:	f7fe fa93 	bl	401a90 <__aeabi_ddiv>
  40356a:	f002 fa89 	bl	405a80 <__aeabi_d2iz>
  40356e:	4680      	mov	r8, r0
  403570:	f7fe f8fe 	bl	401770 <__aeabi_i2d>
  403574:	462a      	mov	r2, r5
  403576:	4633      	mov	r3, r6
  403578:	f7fe f960 	bl	40183c <__aeabi_dmul>
  40357c:	460b      	mov	r3, r1
  40357e:	4602      	mov	r2, r0
  403580:	4659      	mov	r1, fp
  403582:	4650      	mov	r0, sl
  403584:	f7fd ffa6 	bl	4014d4 <__aeabi_dsub>
  403588:	9d04      	ldr	r5, [sp, #16]
  40358a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40358e:	702b      	strb	r3, [r5, #0]
  403590:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403592:	2b01      	cmp	r3, #1
  403594:	4606      	mov	r6, r0
  403596:	460f      	mov	r7, r1
  403598:	f105 0501 	add.w	r5, r5, #1
  40359c:	d068      	beq.n	403670 <_dtoa_r+0x330>
  40359e:	2200      	movs	r2, #0
  4035a0:	4b18      	ldr	r3, [pc, #96]	; (403604 <_dtoa_r+0x2c4>)
  4035a2:	f7fe f94b 	bl	40183c <__aeabi_dmul>
  4035a6:	2200      	movs	r2, #0
  4035a8:	2300      	movs	r3, #0
  4035aa:	4606      	mov	r6, r0
  4035ac:	460f      	mov	r7, r1
  4035ae:	f002 fa1f 	bl	4059f0 <__aeabi_dcmpeq>
  4035b2:	2800      	cmp	r0, #0
  4035b4:	f040 8088 	bne.w	4036c8 <_dtoa_r+0x388>
  4035b8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4035bc:	f04f 0a00 	mov.w	sl, #0
  4035c0:	f8df b040 	ldr.w	fp, [pc, #64]	; 403604 <_dtoa_r+0x2c4>
  4035c4:	940c      	str	r4, [sp, #48]	; 0x30
  4035c6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4035ca:	e028      	b.n	40361e <_dtoa_r+0x2de>
  4035cc:	f3af 8000 	nop.w
  4035d0:	636f4361 	.word	0x636f4361
  4035d4:	3fd287a7 	.word	0x3fd287a7
  4035d8:	8b60c8b3 	.word	0x8b60c8b3
  4035dc:	3fc68a28 	.word	0x3fc68a28
  4035e0:	509f79fb 	.word	0x509f79fb
  4035e4:	3fd34413 	.word	0x3fd34413
  4035e8:	7ff00000 	.word	0x7ff00000
  4035ec:	00406875 	.word	0x00406875
  4035f0:	00406898 	.word	0x00406898
  4035f4:	004068a4 	.word	0x004068a4
  4035f8:	3ff80000 	.word	0x3ff80000
  4035fc:	004068d0 	.word	0x004068d0
  403600:	00406874 	.word	0x00406874
  403604:	40240000 	.word	0x40240000
  403608:	f7fe f918 	bl	40183c <__aeabi_dmul>
  40360c:	2200      	movs	r2, #0
  40360e:	2300      	movs	r3, #0
  403610:	4606      	mov	r6, r0
  403612:	460f      	mov	r7, r1
  403614:	f002 f9ec 	bl	4059f0 <__aeabi_dcmpeq>
  403618:	2800      	cmp	r0, #0
  40361a:	f040 83c1 	bne.w	403da0 <_dtoa_r+0xa60>
  40361e:	4642      	mov	r2, r8
  403620:	464b      	mov	r3, r9
  403622:	4630      	mov	r0, r6
  403624:	4639      	mov	r1, r7
  403626:	f7fe fa33 	bl	401a90 <__aeabi_ddiv>
  40362a:	f002 fa29 	bl	405a80 <__aeabi_d2iz>
  40362e:	4604      	mov	r4, r0
  403630:	f7fe f89e 	bl	401770 <__aeabi_i2d>
  403634:	4642      	mov	r2, r8
  403636:	464b      	mov	r3, r9
  403638:	f7fe f900 	bl	40183c <__aeabi_dmul>
  40363c:	4602      	mov	r2, r0
  40363e:	460b      	mov	r3, r1
  403640:	4630      	mov	r0, r6
  403642:	4639      	mov	r1, r7
  403644:	f7fd ff46 	bl	4014d4 <__aeabi_dsub>
  403648:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40364c:	9e04      	ldr	r6, [sp, #16]
  40364e:	f805 eb01 	strb.w	lr, [r5], #1
  403652:	eba5 0e06 	sub.w	lr, r5, r6
  403656:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403658:	45b6      	cmp	lr, r6
  40365a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40365e:	4652      	mov	r2, sl
  403660:	465b      	mov	r3, fp
  403662:	d1d1      	bne.n	403608 <_dtoa_r+0x2c8>
  403664:	46a0      	mov	r8, r4
  403666:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40366a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40366c:	4606      	mov	r6, r0
  40366e:	460f      	mov	r7, r1
  403670:	4632      	mov	r2, r6
  403672:	463b      	mov	r3, r7
  403674:	4630      	mov	r0, r6
  403676:	4639      	mov	r1, r7
  403678:	f7fd ff2e 	bl	4014d8 <__adddf3>
  40367c:	4606      	mov	r6, r0
  40367e:	460f      	mov	r7, r1
  403680:	4602      	mov	r2, r0
  403682:	460b      	mov	r3, r1
  403684:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403688:	f002 f9bc 	bl	405a04 <__aeabi_dcmplt>
  40368c:	b948      	cbnz	r0, 4036a2 <_dtoa_r+0x362>
  40368e:	4632      	mov	r2, r6
  403690:	463b      	mov	r3, r7
  403692:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403696:	f002 f9ab 	bl	4059f0 <__aeabi_dcmpeq>
  40369a:	b1a8      	cbz	r0, 4036c8 <_dtoa_r+0x388>
  40369c:	f018 0f01 	tst.w	r8, #1
  4036a0:	d012      	beq.n	4036c8 <_dtoa_r+0x388>
  4036a2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4036a6:	9a04      	ldr	r2, [sp, #16]
  4036a8:	1e6b      	subs	r3, r5, #1
  4036aa:	e004      	b.n	4036b6 <_dtoa_r+0x376>
  4036ac:	429a      	cmp	r2, r3
  4036ae:	f000 8401 	beq.w	403eb4 <_dtoa_r+0xb74>
  4036b2:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4036b6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4036ba:	f103 0501 	add.w	r5, r3, #1
  4036be:	d0f5      	beq.n	4036ac <_dtoa_r+0x36c>
  4036c0:	f108 0801 	add.w	r8, r8, #1
  4036c4:	f883 8000 	strb.w	r8, [r3]
  4036c8:	4649      	mov	r1, r9
  4036ca:	4620      	mov	r0, r4
  4036cc:	f001 f95c 	bl	404988 <_Bfree>
  4036d0:	2200      	movs	r2, #0
  4036d2:	9b02      	ldr	r3, [sp, #8]
  4036d4:	702a      	strb	r2, [r5, #0]
  4036d6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4036d8:	3301      	adds	r3, #1
  4036da:	6013      	str	r3, [r2, #0]
  4036dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4036de:	2b00      	cmp	r3, #0
  4036e0:	f000 839e 	beq.w	403e20 <_dtoa_r+0xae0>
  4036e4:	9804      	ldr	r0, [sp, #16]
  4036e6:	601d      	str	r5, [r3, #0]
  4036e8:	b01b      	add	sp, #108	; 0x6c
  4036ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4036ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4036f0:	2a00      	cmp	r2, #0
  4036f2:	d03e      	beq.n	403772 <_dtoa_r+0x432>
  4036f4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4036f6:	2a01      	cmp	r2, #1
  4036f8:	f340 8311 	ble.w	403d1e <_dtoa_r+0x9de>
  4036fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403700:	1e5f      	subs	r7, r3, #1
  403702:	42ba      	cmp	r2, r7
  403704:	f2c0 838f 	blt.w	403e26 <_dtoa_r+0xae6>
  403708:	1bd7      	subs	r7, r2, r7
  40370a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40370c:	2b00      	cmp	r3, #0
  40370e:	f2c0 848b 	blt.w	404028 <_dtoa_r+0xce8>
  403712:	9d08      	ldr	r5, [sp, #32]
  403714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403716:	9a08      	ldr	r2, [sp, #32]
  403718:	441a      	add	r2, r3
  40371a:	9208      	str	r2, [sp, #32]
  40371c:	9a06      	ldr	r2, [sp, #24]
  40371e:	2101      	movs	r1, #1
  403720:	441a      	add	r2, r3
  403722:	4620      	mov	r0, r4
  403724:	9206      	str	r2, [sp, #24]
  403726:	f001 f9c9 	bl	404abc <__i2b>
  40372a:	4606      	mov	r6, r0
  40372c:	e024      	b.n	403778 <_dtoa_r+0x438>
  40372e:	2301      	movs	r3, #1
  403730:	930e      	str	r3, [sp, #56]	; 0x38
  403732:	e6af      	b.n	403494 <_dtoa_r+0x154>
  403734:	9a08      	ldr	r2, [sp, #32]
  403736:	9b02      	ldr	r3, [sp, #8]
  403738:	1ad2      	subs	r2, r2, r3
  40373a:	425b      	negs	r3, r3
  40373c:	930c      	str	r3, [sp, #48]	; 0x30
  40373e:	2300      	movs	r3, #0
  403740:	9208      	str	r2, [sp, #32]
  403742:	930d      	str	r3, [sp, #52]	; 0x34
  403744:	e6b8      	b.n	4034b8 <_dtoa_r+0x178>
  403746:	f1c7 0301 	rsb	r3, r7, #1
  40374a:	9308      	str	r3, [sp, #32]
  40374c:	2300      	movs	r3, #0
  40374e:	9306      	str	r3, [sp, #24]
  403750:	e6a7      	b.n	4034a2 <_dtoa_r+0x162>
  403752:	9d02      	ldr	r5, [sp, #8]
  403754:	4628      	mov	r0, r5
  403756:	f7fe f80b 	bl	401770 <__aeabi_i2d>
  40375a:	4602      	mov	r2, r0
  40375c:	460b      	mov	r3, r1
  40375e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403762:	f002 f945 	bl	4059f0 <__aeabi_dcmpeq>
  403766:	2800      	cmp	r0, #0
  403768:	f47f ae80 	bne.w	40346c <_dtoa_r+0x12c>
  40376c:	1e6b      	subs	r3, r5, #1
  40376e:	9302      	str	r3, [sp, #8]
  403770:	e67c      	b.n	40346c <_dtoa_r+0x12c>
  403772:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403774:	9d08      	ldr	r5, [sp, #32]
  403776:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403778:	2d00      	cmp	r5, #0
  40377a:	dd0c      	ble.n	403796 <_dtoa_r+0x456>
  40377c:	9906      	ldr	r1, [sp, #24]
  40377e:	2900      	cmp	r1, #0
  403780:	460b      	mov	r3, r1
  403782:	dd08      	ble.n	403796 <_dtoa_r+0x456>
  403784:	42a9      	cmp	r1, r5
  403786:	9a08      	ldr	r2, [sp, #32]
  403788:	bfa8      	it	ge
  40378a:	462b      	movge	r3, r5
  40378c:	1ad2      	subs	r2, r2, r3
  40378e:	1aed      	subs	r5, r5, r3
  403790:	1acb      	subs	r3, r1, r3
  403792:	9208      	str	r2, [sp, #32]
  403794:	9306      	str	r3, [sp, #24]
  403796:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403798:	b1d3      	cbz	r3, 4037d0 <_dtoa_r+0x490>
  40379a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40379c:	2b00      	cmp	r3, #0
  40379e:	f000 82b7 	beq.w	403d10 <_dtoa_r+0x9d0>
  4037a2:	2f00      	cmp	r7, #0
  4037a4:	dd10      	ble.n	4037c8 <_dtoa_r+0x488>
  4037a6:	4631      	mov	r1, r6
  4037a8:	463a      	mov	r2, r7
  4037aa:	4620      	mov	r0, r4
  4037ac:	f001 fa22 	bl	404bf4 <__pow5mult>
  4037b0:	464a      	mov	r2, r9
  4037b2:	4601      	mov	r1, r0
  4037b4:	4606      	mov	r6, r0
  4037b6:	4620      	mov	r0, r4
  4037b8:	f001 f98a 	bl	404ad0 <__multiply>
  4037bc:	4649      	mov	r1, r9
  4037be:	4680      	mov	r8, r0
  4037c0:	4620      	mov	r0, r4
  4037c2:	f001 f8e1 	bl	404988 <_Bfree>
  4037c6:	46c1      	mov	r9, r8
  4037c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4037ca:	1bda      	subs	r2, r3, r7
  4037cc:	f040 82a1 	bne.w	403d12 <_dtoa_r+0x9d2>
  4037d0:	2101      	movs	r1, #1
  4037d2:	4620      	mov	r0, r4
  4037d4:	f001 f972 	bl	404abc <__i2b>
  4037d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037da:	2b00      	cmp	r3, #0
  4037dc:	4680      	mov	r8, r0
  4037de:	dd1c      	ble.n	40381a <_dtoa_r+0x4da>
  4037e0:	4601      	mov	r1, r0
  4037e2:	461a      	mov	r2, r3
  4037e4:	4620      	mov	r0, r4
  4037e6:	f001 fa05 	bl	404bf4 <__pow5mult>
  4037ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037ec:	2b01      	cmp	r3, #1
  4037ee:	4680      	mov	r8, r0
  4037f0:	f340 8254 	ble.w	403c9c <_dtoa_r+0x95c>
  4037f4:	2300      	movs	r3, #0
  4037f6:	930c      	str	r3, [sp, #48]	; 0x30
  4037f8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4037fc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403800:	6918      	ldr	r0, [r3, #16]
  403802:	f001 f90b 	bl	404a1c <__hi0bits>
  403806:	f1c0 0020 	rsb	r0, r0, #32
  40380a:	e010      	b.n	40382e <_dtoa_r+0x4ee>
  40380c:	f1c3 0520 	rsb	r5, r3, #32
  403810:	fa0a f005 	lsl.w	r0, sl, r5
  403814:	e674      	b.n	403500 <_dtoa_r+0x1c0>
  403816:	900e      	str	r0, [sp, #56]	; 0x38
  403818:	e63c      	b.n	403494 <_dtoa_r+0x154>
  40381a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40381c:	2b01      	cmp	r3, #1
  40381e:	f340 8287 	ble.w	403d30 <_dtoa_r+0x9f0>
  403822:	2300      	movs	r3, #0
  403824:	930c      	str	r3, [sp, #48]	; 0x30
  403826:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403828:	2001      	movs	r0, #1
  40382a:	2b00      	cmp	r3, #0
  40382c:	d1e4      	bne.n	4037f8 <_dtoa_r+0x4b8>
  40382e:	9a06      	ldr	r2, [sp, #24]
  403830:	4410      	add	r0, r2
  403832:	f010 001f 	ands.w	r0, r0, #31
  403836:	f000 80a1 	beq.w	40397c <_dtoa_r+0x63c>
  40383a:	f1c0 0320 	rsb	r3, r0, #32
  40383e:	2b04      	cmp	r3, #4
  403840:	f340 849e 	ble.w	404180 <_dtoa_r+0xe40>
  403844:	9b08      	ldr	r3, [sp, #32]
  403846:	f1c0 001c 	rsb	r0, r0, #28
  40384a:	4403      	add	r3, r0
  40384c:	9308      	str	r3, [sp, #32]
  40384e:	4613      	mov	r3, r2
  403850:	4403      	add	r3, r0
  403852:	4405      	add	r5, r0
  403854:	9306      	str	r3, [sp, #24]
  403856:	9b08      	ldr	r3, [sp, #32]
  403858:	2b00      	cmp	r3, #0
  40385a:	dd05      	ble.n	403868 <_dtoa_r+0x528>
  40385c:	4649      	mov	r1, r9
  40385e:	461a      	mov	r2, r3
  403860:	4620      	mov	r0, r4
  403862:	f001 fa17 	bl	404c94 <__lshift>
  403866:	4681      	mov	r9, r0
  403868:	9b06      	ldr	r3, [sp, #24]
  40386a:	2b00      	cmp	r3, #0
  40386c:	dd05      	ble.n	40387a <_dtoa_r+0x53a>
  40386e:	4641      	mov	r1, r8
  403870:	461a      	mov	r2, r3
  403872:	4620      	mov	r0, r4
  403874:	f001 fa0e 	bl	404c94 <__lshift>
  403878:	4680      	mov	r8, r0
  40387a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40387c:	2b00      	cmp	r3, #0
  40387e:	f040 8086 	bne.w	40398e <_dtoa_r+0x64e>
  403882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403884:	2b00      	cmp	r3, #0
  403886:	f340 8266 	ble.w	403d56 <_dtoa_r+0xa16>
  40388a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40388c:	2b00      	cmp	r3, #0
  40388e:	f000 8098 	beq.w	4039c2 <_dtoa_r+0x682>
  403892:	2d00      	cmp	r5, #0
  403894:	dd05      	ble.n	4038a2 <_dtoa_r+0x562>
  403896:	4631      	mov	r1, r6
  403898:	462a      	mov	r2, r5
  40389a:	4620      	mov	r0, r4
  40389c:	f001 f9fa 	bl	404c94 <__lshift>
  4038a0:	4606      	mov	r6, r0
  4038a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4038a4:	2b00      	cmp	r3, #0
  4038a6:	f040 8337 	bne.w	403f18 <_dtoa_r+0xbd8>
  4038aa:	9606      	str	r6, [sp, #24]
  4038ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038ae:	9a04      	ldr	r2, [sp, #16]
  4038b0:	f8dd b018 	ldr.w	fp, [sp, #24]
  4038b4:	3b01      	subs	r3, #1
  4038b6:	18d3      	adds	r3, r2, r3
  4038b8:	930b      	str	r3, [sp, #44]	; 0x2c
  4038ba:	f00a 0301 	and.w	r3, sl, #1
  4038be:	930c      	str	r3, [sp, #48]	; 0x30
  4038c0:	4617      	mov	r7, r2
  4038c2:	46c2      	mov	sl, r8
  4038c4:	4651      	mov	r1, sl
  4038c6:	4648      	mov	r0, r9
  4038c8:	f7ff fca4 	bl	403214 <quorem>
  4038cc:	4631      	mov	r1, r6
  4038ce:	4605      	mov	r5, r0
  4038d0:	4648      	mov	r0, r9
  4038d2:	f001 fa31 	bl	404d38 <__mcmp>
  4038d6:	465a      	mov	r2, fp
  4038d8:	900a      	str	r0, [sp, #40]	; 0x28
  4038da:	4651      	mov	r1, sl
  4038dc:	4620      	mov	r0, r4
  4038de:	f001 fa47 	bl	404d70 <__mdiff>
  4038e2:	68c2      	ldr	r2, [r0, #12]
  4038e4:	4680      	mov	r8, r0
  4038e6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4038ea:	2a00      	cmp	r2, #0
  4038ec:	f040 822b 	bne.w	403d46 <_dtoa_r+0xa06>
  4038f0:	4601      	mov	r1, r0
  4038f2:	4648      	mov	r0, r9
  4038f4:	9308      	str	r3, [sp, #32]
  4038f6:	f001 fa1f 	bl	404d38 <__mcmp>
  4038fa:	4641      	mov	r1, r8
  4038fc:	9006      	str	r0, [sp, #24]
  4038fe:	4620      	mov	r0, r4
  403900:	f001 f842 	bl	404988 <_Bfree>
  403904:	9a06      	ldr	r2, [sp, #24]
  403906:	9b08      	ldr	r3, [sp, #32]
  403908:	b932      	cbnz	r2, 403918 <_dtoa_r+0x5d8>
  40390a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40390c:	b921      	cbnz	r1, 403918 <_dtoa_r+0x5d8>
  40390e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403910:	2a00      	cmp	r2, #0
  403912:	f000 83ef 	beq.w	4040f4 <_dtoa_r+0xdb4>
  403916:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403918:	990a      	ldr	r1, [sp, #40]	; 0x28
  40391a:	2900      	cmp	r1, #0
  40391c:	f2c0 829f 	blt.w	403e5e <_dtoa_r+0xb1e>
  403920:	d105      	bne.n	40392e <_dtoa_r+0x5ee>
  403922:	9924      	ldr	r1, [sp, #144]	; 0x90
  403924:	b919      	cbnz	r1, 40392e <_dtoa_r+0x5ee>
  403926:	990c      	ldr	r1, [sp, #48]	; 0x30
  403928:	2900      	cmp	r1, #0
  40392a:	f000 8298 	beq.w	403e5e <_dtoa_r+0xb1e>
  40392e:	2a00      	cmp	r2, #0
  403930:	f300 8306 	bgt.w	403f40 <_dtoa_r+0xc00>
  403934:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403936:	703b      	strb	r3, [r7, #0]
  403938:	f107 0801 	add.w	r8, r7, #1
  40393c:	4297      	cmp	r7, r2
  40393e:	4645      	mov	r5, r8
  403940:	f000 830c 	beq.w	403f5c <_dtoa_r+0xc1c>
  403944:	4649      	mov	r1, r9
  403946:	2300      	movs	r3, #0
  403948:	220a      	movs	r2, #10
  40394a:	4620      	mov	r0, r4
  40394c:	f001 f826 	bl	40499c <__multadd>
  403950:	455e      	cmp	r6, fp
  403952:	4681      	mov	r9, r0
  403954:	4631      	mov	r1, r6
  403956:	f04f 0300 	mov.w	r3, #0
  40395a:	f04f 020a 	mov.w	r2, #10
  40395e:	4620      	mov	r0, r4
  403960:	f000 81eb 	beq.w	403d3a <_dtoa_r+0x9fa>
  403964:	f001 f81a 	bl	40499c <__multadd>
  403968:	4659      	mov	r1, fp
  40396a:	4606      	mov	r6, r0
  40396c:	2300      	movs	r3, #0
  40396e:	220a      	movs	r2, #10
  403970:	4620      	mov	r0, r4
  403972:	f001 f813 	bl	40499c <__multadd>
  403976:	4647      	mov	r7, r8
  403978:	4683      	mov	fp, r0
  40397a:	e7a3      	b.n	4038c4 <_dtoa_r+0x584>
  40397c:	201c      	movs	r0, #28
  40397e:	9b08      	ldr	r3, [sp, #32]
  403980:	4403      	add	r3, r0
  403982:	9308      	str	r3, [sp, #32]
  403984:	9b06      	ldr	r3, [sp, #24]
  403986:	4403      	add	r3, r0
  403988:	4405      	add	r5, r0
  40398a:	9306      	str	r3, [sp, #24]
  40398c:	e763      	b.n	403856 <_dtoa_r+0x516>
  40398e:	4641      	mov	r1, r8
  403990:	4648      	mov	r0, r9
  403992:	f001 f9d1 	bl	404d38 <__mcmp>
  403996:	2800      	cmp	r0, #0
  403998:	f6bf af73 	bge.w	403882 <_dtoa_r+0x542>
  40399c:	9f02      	ldr	r7, [sp, #8]
  40399e:	4649      	mov	r1, r9
  4039a0:	2300      	movs	r3, #0
  4039a2:	220a      	movs	r2, #10
  4039a4:	4620      	mov	r0, r4
  4039a6:	3f01      	subs	r7, #1
  4039a8:	9702      	str	r7, [sp, #8]
  4039aa:	f000 fff7 	bl	40499c <__multadd>
  4039ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4039b0:	4681      	mov	r9, r0
  4039b2:	2b00      	cmp	r3, #0
  4039b4:	f040 83b6 	bne.w	404124 <_dtoa_r+0xde4>
  4039b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4039ba:	2b00      	cmp	r3, #0
  4039bc:	f340 83bf 	ble.w	40413e <_dtoa_r+0xdfe>
  4039c0:	930a      	str	r3, [sp, #40]	; 0x28
  4039c2:	f8dd b010 	ldr.w	fp, [sp, #16]
  4039c6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4039c8:	465d      	mov	r5, fp
  4039ca:	e002      	b.n	4039d2 <_dtoa_r+0x692>
  4039cc:	f000 ffe6 	bl	40499c <__multadd>
  4039d0:	4681      	mov	r9, r0
  4039d2:	4641      	mov	r1, r8
  4039d4:	4648      	mov	r0, r9
  4039d6:	f7ff fc1d 	bl	403214 <quorem>
  4039da:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4039de:	f805 ab01 	strb.w	sl, [r5], #1
  4039e2:	eba5 030b 	sub.w	r3, r5, fp
  4039e6:	42bb      	cmp	r3, r7
  4039e8:	f04f 020a 	mov.w	r2, #10
  4039ec:	f04f 0300 	mov.w	r3, #0
  4039f0:	4649      	mov	r1, r9
  4039f2:	4620      	mov	r0, r4
  4039f4:	dbea      	blt.n	4039cc <_dtoa_r+0x68c>
  4039f6:	9b04      	ldr	r3, [sp, #16]
  4039f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4039fa:	2a01      	cmp	r2, #1
  4039fc:	bfac      	ite	ge
  4039fe:	189b      	addge	r3, r3, r2
  403a00:	3301      	addlt	r3, #1
  403a02:	461d      	mov	r5, r3
  403a04:	f04f 0b00 	mov.w	fp, #0
  403a08:	4649      	mov	r1, r9
  403a0a:	2201      	movs	r2, #1
  403a0c:	4620      	mov	r0, r4
  403a0e:	f001 f941 	bl	404c94 <__lshift>
  403a12:	4641      	mov	r1, r8
  403a14:	4681      	mov	r9, r0
  403a16:	f001 f98f 	bl	404d38 <__mcmp>
  403a1a:	2800      	cmp	r0, #0
  403a1c:	f340 823d 	ble.w	403e9a <_dtoa_r+0xb5a>
  403a20:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403a24:	9904      	ldr	r1, [sp, #16]
  403a26:	1e6b      	subs	r3, r5, #1
  403a28:	e004      	b.n	403a34 <_dtoa_r+0x6f4>
  403a2a:	428b      	cmp	r3, r1
  403a2c:	f000 81ae 	beq.w	403d8c <_dtoa_r+0xa4c>
  403a30:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403a34:	2a39      	cmp	r2, #57	; 0x39
  403a36:	f103 0501 	add.w	r5, r3, #1
  403a3a:	d0f6      	beq.n	403a2a <_dtoa_r+0x6ea>
  403a3c:	3201      	adds	r2, #1
  403a3e:	701a      	strb	r2, [r3, #0]
  403a40:	4641      	mov	r1, r8
  403a42:	4620      	mov	r0, r4
  403a44:	f000 ffa0 	bl	404988 <_Bfree>
  403a48:	2e00      	cmp	r6, #0
  403a4a:	f43f ae3d 	beq.w	4036c8 <_dtoa_r+0x388>
  403a4e:	f1bb 0f00 	cmp.w	fp, #0
  403a52:	d005      	beq.n	403a60 <_dtoa_r+0x720>
  403a54:	45b3      	cmp	fp, r6
  403a56:	d003      	beq.n	403a60 <_dtoa_r+0x720>
  403a58:	4659      	mov	r1, fp
  403a5a:	4620      	mov	r0, r4
  403a5c:	f000 ff94 	bl	404988 <_Bfree>
  403a60:	4631      	mov	r1, r6
  403a62:	4620      	mov	r0, r4
  403a64:	f000 ff90 	bl	404988 <_Bfree>
  403a68:	e62e      	b.n	4036c8 <_dtoa_r+0x388>
  403a6a:	2300      	movs	r3, #0
  403a6c:	930b      	str	r3, [sp, #44]	; 0x2c
  403a6e:	9b02      	ldr	r3, [sp, #8]
  403a70:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403a72:	4413      	add	r3, r2
  403a74:	930f      	str	r3, [sp, #60]	; 0x3c
  403a76:	3301      	adds	r3, #1
  403a78:	2b01      	cmp	r3, #1
  403a7a:	461f      	mov	r7, r3
  403a7c:	461e      	mov	r6, r3
  403a7e:	930a      	str	r3, [sp, #40]	; 0x28
  403a80:	bfb8      	it	lt
  403a82:	2701      	movlt	r7, #1
  403a84:	2100      	movs	r1, #0
  403a86:	2f17      	cmp	r7, #23
  403a88:	6461      	str	r1, [r4, #68]	; 0x44
  403a8a:	d90a      	bls.n	403aa2 <_dtoa_r+0x762>
  403a8c:	2201      	movs	r2, #1
  403a8e:	2304      	movs	r3, #4
  403a90:	005b      	lsls	r3, r3, #1
  403a92:	f103 0014 	add.w	r0, r3, #20
  403a96:	4287      	cmp	r7, r0
  403a98:	4611      	mov	r1, r2
  403a9a:	f102 0201 	add.w	r2, r2, #1
  403a9e:	d2f7      	bcs.n	403a90 <_dtoa_r+0x750>
  403aa0:	6461      	str	r1, [r4, #68]	; 0x44
  403aa2:	4620      	mov	r0, r4
  403aa4:	f000 ff4a 	bl	40493c <_Balloc>
  403aa8:	2e0e      	cmp	r6, #14
  403aaa:	9004      	str	r0, [sp, #16]
  403aac:	6420      	str	r0, [r4, #64]	; 0x40
  403aae:	f63f ad41 	bhi.w	403534 <_dtoa_r+0x1f4>
  403ab2:	2d00      	cmp	r5, #0
  403ab4:	f43f ad3e 	beq.w	403534 <_dtoa_r+0x1f4>
  403ab8:	9902      	ldr	r1, [sp, #8]
  403aba:	2900      	cmp	r1, #0
  403abc:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403ac0:	f340 8202 	ble.w	403ec8 <_dtoa_r+0xb88>
  403ac4:	4bb8      	ldr	r3, [pc, #736]	; (403da8 <_dtoa_r+0xa68>)
  403ac6:	f001 020f 	and.w	r2, r1, #15
  403aca:	110d      	asrs	r5, r1, #4
  403acc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403ad0:	06e9      	lsls	r1, r5, #27
  403ad2:	e9d3 6700 	ldrd	r6, r7, [r3]
  403ad6:	f140 81ae 	bpl.w	403e36 <_dtoa_r+0xaf6>
  403ada:	4bb4      	ldr	r3, [pc, #720]	; (403dac <_dtoa_r+0xa6c>)
  403adc:	4650      	mov	r0, sl
  403ade:	4659      	mov	r1, fp
  403ae0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403ae4:	f7fd ffd4 	bl	401a90 <__aeabi_ddiv>
  403ae8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403aec:	f005 050f 	and.w	r5, r5, #15
  403af0:	f04f 0a03 	mov.w	sl, #3
  403af4:	b18d      	cbz	r5, 403b1a <_dtoa_r+0x7da>
  403af6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403dac <_dtoa_r+0xa6c>
  403afa:	07ea      	lsls	r2, r5, #31
  403afc:	d509      	bpl.n	403b12 <_dtoa_r+0x7d2>
  403afe:	4630      	mov	r0, r6
  403b00:	4639      	mov	r1, r7
  403b02:	e9d8 2300 	ldrd	r2, r3, [r8]
  403b06:	f7fd fe99 	bl	40183c <__aeabi_dmul>
  403b0a:	f10a 0a01 	add.w	sl, sl, #1
  403b0e:	4606      	mov	r6, r0
  403b10:	460f      	mov	r7, r1
  403b12:	106d      	asrs	r5, r5, #1
  403b14:	f108 0808 	add.w	r8, r8, #8
  403b18:	d1ef      	bne.n	403afa <_dtoa_r+0x7ba>
  403b1a:	463b      	mov	r3, r7
  403b1c:	4632      	mov	r2, r6
  403b1e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403b22:	f7fd ffb5 	bl	401a90 <__aeabi_ddiv>
  403b26:	4607      	mov	r7, r0
  403b28:	4688      	mov	r8, r1
  403b2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b2c:	b143      	cbz	r3, 403b40 <_dtoa_r+0x800>
  403b2e:	2200      	movs	r2, #0
  403b30:	4b9f      	ldr	r3, [pc, #636]	; (403db0 <_dtoa_r+0xa70>)
  403b32:	4638      	mov	r0, r7
  403b34:	4641      	mov	r1, r8
  403b36:	f001 ff65 	bl	405a04 <__aeabi_dcmplt>
  403b3a:	2800      	cmp	r0, #0
  403b3c:	f040 8286 	bne.w	40404c <_dtoa_r+0xd0c>
  403b40:	4650      	mov	r0, sl
  403b42:	f7fd fe15 	bl	401770 <__aeabi_i2d>
  403b46:	463a      	mov	r2, r7
  403b48:	4643      	mov	r3, r8
  403b4a:	f7fd fe77 	bl	40183c <__aeabi_dmul>
  403b4e:	4b99      	ldr	r3, [pc, #612]	; (403db4 <_dtoa_r+0xa74>)
  403b50:	2200      	movs	r2, #0
  403b52:	f7fd fcc1 	bl	4014d8 <__adddf3>
  403b56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b58:	4605      	mov	r5, r0
  403b5a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403b5e:	2b00      	cmp	r3, #0
  403b60:	f000 813e 	beq.w	403de0 <_dtoa_r+0xaa0>
  403b64:	9b02      	ldr	r3, [sp, #8]
  403b66:	9315      	str	r3, [sp, #84]	; 0x54
  403b68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b6a:	9312      	str	r3, [sp, #72]	; 0x48
  403b6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b6e:	2b00      	cmp	r3, #0
  403b70:	f000 81fa 	beq.w	403f68 <_dtoa_r+0xc28>
  403b74:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403b76:	4b8c      	ldr	r3, [pc, #560]	; (403da8 <_dtoa_r+0xa68>)
  403b78:	498f      	ldr	r1, [pc, #572]	; (403db8 <_dtoa_r+0xa78>)
  403b7a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b7e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403b82:	2000      	movs	r0, #0
  403b84:	f7fd ff84 	bl	401a90 <__aeabi_ddiv>
  403b88:	462a      	mov	r2, r5
  403b8a:	4633      	mov	r3, r6
  403b8c:	f7fd fca2 	bl	4014d4 <__aeabi_dsub>
  403b90:	4682      	mov	sl, r0
  403b92:	468b      	mov	fp, r1
  403b94:	4638      	mov	r0, r7
  403b96:	4641      	mov	r1, r8
  403b98:	f001 ff72 	bl	405a80 <__aeabi_d2iz>
  403b9c:	4605      	mov	r5, r0
  403b9e:	f7fd fde7 	bl	401770 <__aeabi_i2d>
  403ba2:	4602      	mov	r2, r0
  403ba4:	460b      	mov	r3, r1
  403ba6:	4638      	mov	r0, r7
  403ba8:	4641      	mov	r1, r8
  403baa:	f7fd fc93 	bl	4014d4 <__aeabi_dsub>
  403bae:	3530      	adds	r5, #48	; 0x30
  403bb0:	fa5f f885 	uxtb.w	r8, r5
  403bb4:	9d04      	ldr	r5, [sp, #16]
  403bb6:	4606      	mov	r6, r0
  403bb8:	460f      	mov	r7, r1
  403bba:	f885 8000 	strb.w	r8, [r5]
  403bbe:	4602      	mov	r2, r0
  403bc0:	460b      	mov	r3, r1
  403bc2:	4650      	mov	r0, sl
  403bc4:	4659      	mov	r1, fp
  403bc6:	3501      	adds	r5, #1
  403bc8:	f001 ff3a 	bl	405a40 <__aeabi_dcmpgt>
  403bcc:	2800      	cmp	r0, #0
  403bce:	d154      	bne.n	403c7a <_dtoa_r+0x93a>
  403bd0:	4632      	mov	r2, r6
  403bd2:	463b      	mov	r3, r7
  403bd4:	2000      	movs	r0, #0
  403bd6:	4976      	ldr	r1, [pc, #472]	; (403db0 <_dtoa_r+0xa70>)
  403bd8:	f7fd fc7c 	bl	4014d4 <__aeabi_dsub>
  403bdc:	4602      	mov	r2, r0
  403bde:	460b      	mov	r3, r1
  403be0:	4650      	mov	r0, sl
  403be2:	4659      	mov	r1, fp
  403be4:	f001 ff2c 	bl	405a40 <__aeabi_dcmpgt>
  403be8:	2800      	cmp	r0, #0
  403bea:	f040 8270 	bne.w	4040ce <_dtoa_r+0xd8e>
  403bee:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403bf0:	2a01      	cmp	r2, #1
  403bf2:	f000 8111 	beq.w	403e18 <_dtoa_r+0xad8>
  403bf6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403bf8:	9a04      	ldr	r2, [sp, #16]
  403bfa:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403bfe:	4413      	add	r3, r2
  403c00:	4699      	mov	r9, r3
  403c02:	e00d      	b.n	403c20 <_dtoa_r+0x8e0>
  403c04:	2000      	movs	r0, #0
  403c06:	496a      	ldr	r1, [pc, #424]	; (403db0 <_dtoa_r+0xa70>)
  403c08:	f7fd fc64 	bl	4014d4 <__aeabi_dsub>
  403c0c:	4652      	mov	r2, sl
  403c0e:	465b      	mov	r3, fp
  403c10:	f001 fef8 	bl	405a04 <__aeabi_dcmplt>
  403c14:	2800      	cmp	r0, #0
  403c16:	f040 8258 	bne.w	4040ca <_dtoa_r+0xd8a>
  403c1a:	454d      	cmp	r5, r9
  403c1c:	f000 80fa 	beq.w	403e14 <_dtoa_r+0xad4>
  403c20:	4650      	mov	r0, sl
  403c22:	4659      	mov	r1, fp
  403c24:	2200      	movs	r2, #0
  403c26:	4b65      	ldr	r3, [pc, #404]	; (403dbc <_dtoa_r+0xa7c>)
  403c28:	f7fd fe08 	bl	40183c <__aeabi_dmul>
  403c2c:	2200      	movs	r2, #0
  403c2e:	4b63      	ldr	r3, [pc, #396]	; (403dbc <_dtoa_r+0xa7c>)
  403c30:	4682      	mov	sl, r0
  403c32:	468b      	mov	fp, r1
  403c34:	4630      	mov	r0, r6
  403c36:	4639      	mov	r1, r7
  403c38:	f7fd fe00 	bl	40183c <__aeabi_dmul>
  403c3c:	460f      	mov	r7, r1
  403c3e:	4606      	mov	r6, r0
  403c40:	f001 ff1e 	bl	405a80 <__aeabi_d2iz>
  403c44:	4680      	mov	r8, r0
  403c46:	f7fd fd93 	bl	401770 <__aeabi_i2d>
  403c4a:	4602      	mov	r2, r0
  403c4c:	460b      	mov	r3, r1
  403c4e:	4630      	mov	r0, r6
  403c50:	4639      	mov	r1, r7
  403c52:	f7fd fc3f 	bl	4014d4 <__aeabi_dsub>
  403c56:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403c5a:	fa5f f888 	uxtb.w	r8, r8
  403c5e:	4652      	mov	r2, sl
  403c60:	465b      	mov	r3, fp
  403c62:	f805 8b01 	strb.w	r8, [r5], #1
  403c66:	4606      	mov	r6, r0
  403c68:	460f      	mov	r7, r1
  403c6a:	f001 fecb 	bl	405a04 <__aeabi_dcmplt>
  403c6e:	4632      	mov	r2, r6
  403c70:	463b      	mov	r3, r7
  403c72:	2800      	cmp	r0, #0
  403c74:	d0c6      	beq.n	403c04 <_dtoa_r+0x8c4>
  403c76:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403c7a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403c7c:	9302      	str	r3, [sp, #8]
  403c7e:	e523      	b.n	4036c8 <_dtoa_r+0x388>
  403c80:	2300      	movs	r3, #0
  403c82:	930b      	str	r3, [sp, #44]	; 0x2c
  403c84:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c86:	2b00      	cmp	r3, #0
  403c88:	f340 80dc 	ble.w	403e44 <_dtoa_r+0xb04>
  403c8c:	461f      	mov	r7, r3
  403c8e:	461e      	mov	r6, r3
  403c90:	930f      	str	r3, [sp, #60]	; 0x3c
  403c92:	930a      	str	r3, [sp, #40]	; 0x28
  403c94:	e6f6      	b.n	403a84 <_dtoa_r+0x744>
  403c96:	2301      	movs	r3, #1
  403c98:	930b      	str	r3, [sp, #44]	; 0x2c
  403c9a:	e7f3      	b.n	403c84 <_dtoa_r+0x944>
  403c9c:	f1ba 0f00 	cmp.w	sl, #0
  403ca0:	f47f ada8 	bne.w	4037f4 <_dtoa_r+0x4b4>
  403ca4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403ca8:	2b00      	cmp	r3, #0
  403caa:	f47f adba 	bne.w	403822 <_dtoa_r+0x4e2>
  403cae:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403cb2:	0d3f      	lsrs	r7, r7, #20
  403cb4:	053f      	lsls	r7, r7, #20
  403cb6:	2f00      	cmp	r7, #0
  403cb8:	f000 820d 	beq.w	4040d6 <_dtoa_r+0xd96>
  403cbc:	9b08      	ldr	r3, [sp, #32]
  403cbe:	3301      	adds	r3, #1
  403cc0:	9308      	str	r3, [sp, #32]
  403cc2:	9b06      	ldr	r3, [sp, #24]
  403cc4:	3301      	adds	r3, #1
  403cc6:	9306      	str	r3, [sp, #24]
  403cc8:	2301      	movs	r3, #1
  403cca:	930c      	str	r3, [sp, #48]	; 0x30
  403ccc:	e5ab      	b.n	403826 <_dtoa_r+0x4e6>
  403cce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cd0:	2b00      	cmp	r3, #0
  403cd2:	f73f ac42 	bgt.w	40355a <_dtoa_r+0x21a>
  403cd6:	f040 8221 	bne.w	40411c <_dtoa_r+0xddc>
  403cda:	2200      	movs	r2, #0
  403cdc:	4b38      	ldr	r3, [pc, #224]	; (403dc0 <_dtoa_r+0xa80>)
  403cde:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403ce2:	f7fd fdab 	bl	40183c <__aeabi_dmul>
  403ce6:	4652      	mov	r2, sl
  403ce8:	465b      	mov	r3, fp
  403cea:	f001 fe9f 	bl	405a2c <__aeabi_dcmpge>
  403cee:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403cf2:	4646      	mov	r6, r8
  403cf4:	2800      	cmp	r0, #0
  403cf6:	d041      	beq.n	403d7c <_dtoa_r+0xa3c>
  403cf8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403cfa:	9d04      	ldr	r5, [sp, #16]
  403cfc:	43db      	mvns	r3, r3
  403cfe:	9302      	str	r3, [sp, #8]
  403d00:	4641      	mov	r1, r8
  403d02:	4620      	mov	r0, r4
  403d04:	f000 fe40 	bl	404988 <_Bfree>
  403d08:	2e00      	cmp	r6, #0
  403d0a:	f43f acdd 	beq.w	4036c8 <_dtoa_r+0x388>
  403d0e:	e6a7      	b.n	403a60 <_dtoa_r+0x720>
  403d10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403d12:	4649      	mov	r1, r9
  403d14:	4620      	mov	r0, r4
  403d16:	f000 ff6d 	bl	404bf4 <__pow5mult>
  403d1a:	4681      	mov	r9, r0
  403d1c:	e558      	b.n	4037d0 <_dtoa_r+0x490>
  403d1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403d20:	2a00      	cmp	r2, #0
  403d22:	f000 8187 	beq.w	404034 <_dtoa_r+0xcf4>
  403d26:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403d2a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403d2c:	9d08      	ldr	r5, [sp, #32]
  403d2e:	e4f2      	b.n	403716 <_dtoa_r+0x3d6>
  403d30:	f1ba 0f00 	cmp.w	sl, #0
  403d34:	f47f ad75 	bne.w	403822 <_dtoa_r+0x4e2>
  403d38:	e7b4      	b.n	403ca4 <_dtoa_r+0x964>
  403d3a:	f000 fe2f 	bl	40499c <__multadd>
  403d3e:	4647      	mov	r7, r8
  403d40:	4606      	mov	r6, r0
  403d42:	4683      	mov	fp, r0
  403d44:	e5be      	b.n	4038c4 <_dtoa_r+0x584>
  403d46:	4601      	mov	r1, r0
  403d48:	4620      	mov	r0, r4
  403d4a:	9306      	str	r3, [sp, #24]
  403d4c:	f000 fe1c 	bl	404988 <_Bfree>
  403d50:	2201      	movs	r2, #1
  403d52:	9b06      	ldr	r3, [sp, #24]
  403d54:	e5e0      	b.n	403918 <_dtoa_r+0x5d8>
  403d56:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403d58:	2b02      	cmp	r3, #2
  403d5a:	f77f ad96 	ble.w	40388a <_dtoa_r+0x54a>
  403d5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d60:	2b00      	cmp	r3, #0
  403d62:	d1c9      	bne.n	403cf8 <_dtoa_r+0x9b8>
  403d64:	4641      	mov	r1, r8
  403d66:	2205      	movs	r2, #5
  403d68:	4620      	mov	r0, r4
  403d6a:	f000 fe17 	bl	40499c <__multadd>
  403d6e:	4601      	mov	r1, r0
  403d70:	4680      	mov	r8, r0
  403d72:	4648      	mov	r0, r9
  403d74:	f000 ffe0 	bl	404d38 <__mcmp>
  403d78:	2800      	cmp	r0, #0
  403d7a:	ddbd      	ble.n	403cf8 <_dtoa_r+0x9b8>
  403d7c:	9a02      	ldr	r2, [sp, #8]
  403d7e:	9904      	ldr	r1, [sp, #16]
  403d80:	2331      	movs	r3, #49	; 0x31
  403d82:	3201      	adds	r2, #1
  403d84:	9202      	str	r2, [sp, #8]
  403d86:	700b      	strb	r3, [r1, #0]
  403d88:	1c4d      	adds	r5, r1, #1
  403d8a:	e7b9      	b.n	403d00 <_dtoa_r+0x9c0>
  403d8c:	9a02      	ldr	r2, [sp, #8]
  403d8e:	3201      	adds	r2, #1
  403d90:	9202      	str	r2, [sp, #8]
  403d92:	9a04      	ldr	r2, [sp, #16]
  403d94:	2331      	movs	r3, #49	; 0x31
  403d96:	7013      	strb	r3, [r2, #0]
  403d98:	e652      	b.n	403a40 <_dtoa_r+0x700>
  403d9a:	2301      	movs	r3, #1
  403d9c:	930b      	str	r3, [sp, #44]	; 0x2c
  403d9e:	e666      	b.n	403a6e <_dtoa_r+0x72e>
  403da0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403da4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403da6:	e48f      	b.n	4036c8 <_dtoa_r+0x388>
  403da8:	004068d0 	.word	0x004068d0
  403dac:	004068a8 	.word	0x004068a8
  403db0:	3ff00000 	.word	0x3ff00000
  403db4:	401c0000 	.word	0x401c0000
  403db8:	3fe00000 	.word	0x3fe00000
  403dbc:	40240000 	.word	0x40240000
  403dc0:	40140000 	.word	0x40140000
  403dc4:	4650      	mov	r0, sl
  403dc6:	f7fd fcd3 	bl	401770 <__aeabi_i2d>
  403dca:	463a      	mov	r2, r7
  403dcc:	4643      	mov	r3, r8
  403dce:	f7fd fd35 	bl	40183c <__aeabi_dmul>
  403dd2:	2200      	movs	r2, #0
  403dd4:	4bc1      	ldr	r3, [pc, #772]	; (4040dc <_dtoa_r+0xd9c>)
  403dd6:	f7fd fb7f 	bl	4014d8 <__adddf3>
  403dda:	4605      	mov	r5, r0
  403ddc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403de0:	4641      	mov	r1, r8
  403de2:	2200      	movs	r2, #0
  403de4:	4bbe      	ldr	r3, [pc, #760]	; (4040e0 <_dtoa_r+0xda0>)
  403de6:	4638      	mov	r0, r7
  403de8:	f7fd fb74 	bl	4014d4 <__aeabi_dsub>
  403dec:	462a      	mov	r2, r5
  403dee:	4633      	mov	r3, r6
  403df0:	4682      	mov	sl, r0
  403df2:	468b      	mov	fp, r1
  403df4:	f001 fe24 	bl	405a40 <__aeabi_dcmpgt>
  403df8:	4680      	mov	r8, r0
  403dfa:	2800      	cmp	r0, #0
  403dfc:	f040 8110 	bne.w	404020 <_dtoa_r+0xce0>
  403e00:	462a      	mov	r2, r5
  403e02:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403e06:	4650      	mov	r0, sl
  403e08:	4659      	mov	r1, fp
  403e0a:	f001 fdfb 	bl	405a04 <__aeabi_dcmplt>
  403e0e:	b118      	cbz	r0, 403e18 <_dtoa_r+0xad8>
  403e10:	4646      	mov	r6, r8
  403e12:	e771      	b.n	403cf8 <_dtoa_r+0x9b8>
  403e14:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403e18:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403e1c:	f7ff bb8a 	b.w	403534 <_dtoa_r+0x1f4>
  403e20:	9804      	ldr	r0, [sp, #16]
  403e22:	f7ff babb 	b.w	40339c <_dtoa_r+0x5c>
  403e26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e28:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403e2a:	970c      	str	r7, [sp, #48]	; 0x30
  403e2c:	1afb      	subs	r3, r7, r3
  403e2e:	441a      	add	r2, r3
  403e30:	920d      	str	r2, [sp, #52]	; 0x34
  403e32:	2700      	movs	r7, #0
  403e34:	e469      	b.n	40370a <_dtoa_r+0x3ca>
  403e36:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403e3a:	f04f 0a02 	mov.w	sl, #2
  403e3e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403e42:	e657      	b.n	403af4 <_dtoa_r+0x7b4>
  403e44:	2100      	movs	r1, #0
  403e46:	2301      	movs	r3, #1
  403e48:	6461      	str	r1, [r4, #68]	; 0x44
  403e4a:	4620      	mov	r0, r4
  403e4c:	9325      	str	r3, [sp, #148]	; 0x94
  403e4e:	f000 fd75 	bl	40493c <_Balloc>
  403e52:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403e54:	9004      	str	r0, [sp, #16]
  403e56:	6420      	str	r0, [r4, #64]	; 0x40
  403e58:	930a      	str	r3, [sp, #40]	; 0x28
  403e5a:	930f      	str	r3, [sp, #60]	; 0x3c
  403e5c:	e629      	b.n	403ab2 <_dtoa_r+0x772>
  403e5e:	2a00      	cmp	r2, #0
  403e60:	46d0      	mov	r8, sl
  403e62:	f8cd b018 	str.w	fp, [sp, #24]
  403e66:	469a      	mov	sl, r3
  403e68:	dd11      	ble.n	403e8e <_dtoa_r+0xb4e>
  403e6a:	4649      	mov	r1, r9
  403e6c:	2201      	movs	r2, #1
  403e6e:	4620      	mov	r0, r4
  403e70:	f000 ff10 	bl	404c94 <__lshift>
  403e74:	4641      	mov	r1, r8
  403e76:	4681      	mov	r9, r0
  403e78:	f000 ff5e 	bl	404d38 <__mcmp>
  403e7c:	2800      	cmp	r0, #0
  403e7e:	f340 8146 	ble.w	40410e <_dtoa_r+0xdce>
  403e82:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403e86:	f000 8106 	beq.w	404096 <_dtoa_r+0xd56>
  403e8a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403e8e:	46b3      	mov	fp, r6
  403e90:	f887 a000 	strb.w	sl, [r7]
  403e94:	1c7d      	adds	r5, r7, #1
  403e96:	9e06      	ldr	r6, [sp, #24]
  403e98:	e5d2      	b.n	403a40 <_dtoa_r+0x700>
  403e9a:	d104      	bne.n	403ea6 <_dtoa_r+0xb66>
  403e9c:	f01a 0f01 	tst.w	sl, #1
  403ea0:	d001      	beq.n	403ea6 <_dtoa_r+0xb66>
  403ea2:	e5bd      	b.n	403a20 <_dtoa_r+0x6e0>
  403ea4:	4615      	mov	r5, r2
  403ea6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403eaa:	2b30      	cmp	r3, #48	; 0x30
  403eac:	f105 32ff 	add.w	r2, r5, #4294967295
  403eb0:	d0f8      	beq.n	403ea4 <_dtoa_r+0xb64>
  403eb2:	e5c5      	b.n	403a40 <_dtoa_r+0x700>
  403eb4:	9904      	ldr	r1, [sp, #16]
  403eb6:	2230      	movs	r2, #48	; 0x30
  403eb8:	700a      	strb	r2, [r1, #0]
  403eba:	9a02      	ldr	r2, [sp, #8]
  403ebc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403ec0:	3201      	adds	r2, #1
  403ec2:	9202      	str	r2, [sp, #8]
  403ec4:	f7ff bbfc 	b.w	4036c0 <_dtoa_r+0x380>
  403ec8:	f000 80bb 	beq.w	404042 <_dtoa_r+0xd02>
  403ecc:	9b02      	ldr	r3, [sp, #8]
  403ece:	425d      	negs	r5, r3
  403ed0:	4b84      	ldr	r3, [pc, #528]	; (4040e4 <_dtoa_r+0xda4>)
  403ed2:	f005 020f 	and.w	r2, r5, #15
  403ed6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403eda:	e9d3 2300 	ldrd	r2, r3, [r3]
  403ede:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403ee2:	f7fd fcab 	bl	40183c <__aeabi_dmul>
  403ee6:	112d      	asrs	r5, r5, #4
  403ee8:	4607      	mov	r7, r0
  403eea:	4688      	mov	r8, r1
  403eec:	f000 812c 	beq.w	404148 <_dtoa_r+0xe08>
  403ef0:	4e7d      	ldr	r6, [pc, #500]	; (4040e8 <_dtoa_r+0xda8>)
  403ef2:	f04f 0a02 	mov.w	sl, #2
  403ef6:	07eb      	lsls	r3, r5, #31
  403ef8:	d509      	bpl.n	403f0e <_dtoa_r+0xbce>
  403efa:	4638      	mov	r0, r7
  403efc:	4641      	mov	r1, r8
  403efe:	e9d6 2300 	ldrd	r2, r3, [r6]
  403f02:	f7fd fc9b 	bl	40183c <__aeabi_dmul>
  403f06:	f10a 0a01 	add.w	sl, sl, #1
  403f0a:	4607      	mov	r7, r0
  403f0c:	4688      	mov	r8, r1
  403f0e:	106d      	asrs	r5, r5, #1
  403f10:	f106 0608 	add.w	r6, r6, #8
  403f14:	d1ef      	bne.n	403ef6 <_dtoa_r+0xbb6>
  403f16:	e608      	b.n	403b2a <_dtoa_r+0x7ea>
  403f18:	6871      	ldr	r1, [r6, #4]
  403f1a:	4620      	mov	r0, r4
  403f1c:	f000 fd0e 	bl	40493c <_Balloc>
  403f20:	6933      	ldr	r3, [r6, #16]
  403f22:	3302      	adds	r3, #2
  403f24:	009a      	lsls	r2, r3, #2
  403f26:	4605      	mov	r5, r0
  403f28:	f106 010c 	add.w	r1, r6, #12
  403f2c:	300c      	adds	r0, #12
  403f2e:	f000 fc5f 	bl	4047f0 <memcpy>
  403f32:	4629      	mov	r1, r5
  403f34:	2201      	movs	r2, #1
  403f36:	4620      	mov	r0, r4
  403f38:	f000 feac 	bl	404c94 <__lshift>
  403f3c:	9006      	str	r0, [sp, #24]
  403f3e:	e4b5      	b.n	4038ac <_dtoa_r+0x56c>
  403f40:	2b39      	cmp	r3, #57	; 0x39
  403f42:	f8cd b018 	str.w	fp, [sp, #24]
  403f46:	46d0      	mov	r8, sl
  403f48:	f000 80a5 	beq.w	404096 <_dtoa_r+0xd56>
  403f4c:	f103 0a01 	add.w	sl, r3, #1
  403f50:	46b3      	mov	fp, r6
  403f52:	f887 a000 	strb.w	sl, [r7]
  403f56:	1c7d      	adds	r5, r7, #1
  403f58:	9e06      	ldr	r6, [sp, #24]
  403f5a:	e571      	b.n	403a40 <_dtoa_r+0x700>
  403f5c:	465a      	mov	r2, fp
  403f5e:	46d0      	mov	r8, sl
  403f60:	46b3      	mov	fp, r6
  403f62:	469a      	mov	sl, r3
  403f64:	4616      	mov	r6, r2
  403f66:	e54f      	b.n	403a08 <_dtoa_r+0x6c8>
  403f68:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f6a:	495e      	ldr	r1, [pc, #376]	; (4040e4 <_dtoa_r+0xda4>)
  403f6c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403f70:	462a      	mov	r2, r5
  403f72:	4633      	mov	r3, r6
  403f74:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403f78:	f7fd fc60 	bl	40183c <__aeabi_dmul>
  403f7c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403f80:	4638      	mov	r0, r7
  403f82:	4641      	mov	r1, r8
  403f84:	f001 fd7c 	bl	405a80 <__aeabi_d2iz>
  403f88:	4605      	mov	r5, r0
  403f8a:	f7fd fbf1 	bl	401770 <__aeabi_i2d>
  403f8e:	460b      	mov	r3, r1
  403f90:	4602      	mov	r2, r0
  403f92:	4641      	mov	r1, r8
  403f94:	4638      	mov	r0, r7
  403f96:	f7fd fa9d 	bl	4014d4 <__aeabi_dsub>
  403f9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f9c:	460f      	mov	r7, r1
  403f9e:	9904      	ldr	r1, [sp, #16]
  403fa0:	3530      	adds	r5, #48	; 0x30
  403fa2:	2b01      	cmp	r3, #1
  403fa4:	700d      	strb	r5, [r1, #0]
  403fa6:	4606      	mov	r6, r0
  403fa8:	f101 0501 	add.w	r5, r1, #1
  403fac:	d026      	beq.n	403ffc <_dtoa_r+0xcbc>
  403fae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403fb0:	9a04      	ldr	r2, [sp, #16]
  403fb2:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4040f0 <_dtoa_r+0xdb0>
  403fb6:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403fba:	4413      	add	r3, r2
  403fbc:	f04f 0a00 	mov.w	sl, #0
  403fc0:	4699      	mov	r9, r3
  403fc2:	4652      	mov	r2, sl
  403fc4:	465b      	mov	r3, fp
  403fc6:	4630      	mov	r0, r6
  403fc8:	4639      	mov	r1, r7
  403fca:	f7fd fc37 	bl	40183c <__aeabi_dmul>
  403fce:	460f      	mov	r7, r1
  403fd0:	4606      	mov	r6, r0
  403fd2:	f001 fd55 	bl	405a80 <__aeabi_d2iz>
  403fd6:	4680      	mov	r8, r0
  403fd8:	f7fd fbca 	bl	401770 <__aeabi_i2d>
  403fdc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403fe0:	4602      	mov	r2, r0
  403fe2:	460b      	mov	r3, r1
  403fe4:	4630      	mov	r0, r6
  403fe6:	4639      	mov	r1, r7
  403fe8:	f7fd fa74 	bl	4014d4 <__aeabi_dsub>
  403fec:	f805 8b01 	strb.w	r8, [r5], #1
  403ff0:	454d      	cmp	r5, r9
  403ff2:	4606      	mov	r6, r0
  403ff4:	460f      	mov	r7, r1
  403ff6:	d1e4      	bne.n	403fc2 <_dtoa_r+0xc82>
  403ff8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ffc:	4b3b      	ldr	r3, [pc, #236]	; (4040ec <_dtoa_r+0xdac>)
  403ffe:	2200      	movs	r2, #0
  404000:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404004:	f7fd fa68 	bl	4014d8 <__adddf3>
  404008:	4632      	mov	r2, r6
  40400a:	463b      	mov	r3, r7
  40400c:	f001 fcfa 	bl	405a04 <__aeabi_dcmplt>
  404010:	2800      	cmp	r0, #0
  404012:	d046      	beq.n	4040a2 <_dtoa_r+0xd62>
  404014:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404016:	9302      	str	r3, [sp, #8]
  404018:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40401c:	f7ff bb43 	b.w	4036a6 <_dtoa_r+0x366>
  404020:	f04f 0800 	mov.w	r8, #0
  404024:	4646      	mov	r6, r8
  404026:	e6a9      	b.n	403d7c <_dtoa_r+0xa3c>
  404028:	9b08      	ldr	r3, [sp, #32]
  40402a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40402c:	1a9d      	subs	r5, r3, r2
  40402e:	2300      	movs	r3, #0
  404030:	f7ff bb71 	b.w	403716 <_dtoa_r+0x3d6>
  404034:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404036:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404038:	9d08      	ldr	r5, [sp, #32]
  40403a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40403e:	f7ff bb6a 	b.w	403716 <_dtoa_r+0x3d6>
  404042:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404046:	f04f 0a02 	mov.w	sl, #2
  40404a:	e56e      	b.n	403b2a <_dtoa_r+0x7ea>
  40404c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40404e:	2b00      	cmp	r3, #0
  404050:	f43f aeb8 	beq.w	403dc4 <_dtoa_r+0xa84>
  404054:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404056:	2b00      	cmp	r3, #0
  404058:	f77f aede 	ble.w	403e18 <_dtoa_r+0xad8>
  40405c:	2200      	movs	r2, #0
  40405e:	4b24      	ldr	r3, [pc, #144]	; (4040f0 <_dtoa_r+0xdb0>)
  404060:	4638      	mov	r0, r7
  404062:	4641      	mov	r1, r8
  404064:	f7fd fbea 	bl	40183c <__aeabi_dmul>
  404068:	4607      	mov	r7, r0
  40406a:	4688      	mov	r8, r1
  40406c:	f10a 0001 	add.w	r0, sl, #1
  404070:	f7fd fb7e 	bl	401770 <__aeabi_i2d>
  404074:	463a      	mov	r2, r7
  404076:	4643      	mov	r3, r8
  404078:	f7fd fbe0 	bl	40183c <__aeabi_dmul>
  40407c:	2200      	movs	r2, #0
  40407e:	4b17      	ldr	r3, [pc, #92]	; (4040dc <_dtoa_r+0xd9c>)
  404080:	f7fd fa2a 	bl	4014d8 <__adddf3>
  404084:	9a02      	ldr	r2, [sp, #8]
  404086:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404088:	9312      	str	r3, [sp, #72]	; 0x48
  40408a:	3a01      	subs	r2, #1
  40408c:	4605      	mov	r5, r0
  40408e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404092:	9215      	str	r2, [sp, #84]	; 0x54
  404094:	e56a      	b.n	403b6c <_dtoa_r+0x82c>
  404096:	2239      	movs	r2, #57	; 0x39
  404098:	46b3      	mov	fp, r6
  40409a:	703a      	strb	r2, [r7, #0]
  40409c:	9e06      	ldr	r6, [sp, #24]
  40409e:	1c7d      	adds	r5, r7, #1
  4040a0:	e4c0      	b.n	403a24 <_dtoa_r+0x6e4>
  4040a2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4040a6:	2000      	movs	r0, #0
  4040a8:	4910      	ldr	r1, [pc, #64]	; (4040ec <_dtoa_r+0xdac>)
  4040aa:	f7fd fa13 	bl	4014d4 <__aeabi_dsub>
  4040ae:	4632      	mov	r2, r6
  4040b0:	463b      	mov	r3, r7
  4040b2:	f001 fcc5 	bl	405a40 <__aeabi_dcmpgt>
  4040b6:	b908      	cbnz	r0, 4040bc <_dtoa_r+0xd7c>
  4040b8:	e6ae      	b.n	403e18 <_dtoa_r+0xad8>
  4040ba:	4615      	mov	r5, r2
  4040bc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4040c0:	2b30      	cmp	r3, #48	; 0x30
  4040c2:	f105 32ff 	add.w	r2, r5, #4294967295
  4040c6:	d0f8      	beq.n	4040ba <_dtoa_r+0xd7a>
  4040c8:	e5d7      	b.n	403c7a <_dtoa_r+0x93a>
  4040ca:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4040ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4040d0:	9302      	str	r3, [sp, #8]
  4040d2:	f7ff bae8 	b.w	4036a6 <_dtoa_r+0x366>
  4040d6:	970c      	str	r7, [sp, #48]	; 0x30
  4040d8:	f7ff bba5 	b.w	403826 <_dtoa_r+0x4e6>
  4040dc:	401c0000 	.word	0x401c0000
  4040e0:	40140000 	.word	0x40140000
  4040e4:	004068d0 	.word	0x004068d0
  4040e8:	004068a8 	.word	0x004068a8
  4040ec:	3fe00000 	.word	0x3fe00000
  4040f0:	40240000 	.word	0x40240000
  4040f4:	2b39      	cmp	r3, #57	; 0x39
  4040f6:	f8cd b018 	str.w	fp, [sp, #24]
  4040fa:	46d0      	mov	r8, sl
  4040fc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404100:	469a      	mov	sl, r3
  404102:	d0c8      	beq.n	404096 <_dtoa_r+0xd56>
  404104:	f1bb 0f00 	cmp.w	fp, #0
  404108:	f73f aebf 	bgt.w	403e8a <_dtoa_r+0xb4a>
  40410c:	e6bf      	b.n	403e8e <_dtoa_r+0xb4e>
  40410e:	f47f aebe 	bne.w	403e8e <_dtoa_r+0xb4e>
  404112:	f01a 0f01 	tst.w	sl, #1
  404116:	f43f aeba 	beq.w	403e8e <_dtoa_r+0xb4e>
  40411a:	e6b2      	b.n	403e82 <_dtoa_r+0xb42>
  40411c:	f04f 0800 	mov.w	r8, #0
  404120:	4646      	mov	r6, r8
  404122:	e5e9      	b.n	403cf8 <_dtoa_r+0x9b8>
  404124:	4631      	mov	r1, r6
  404126:	2300      	movs	r3, #0
  404128:	220a      	movs	r2, #10
  40412a:	4620      	mov	r0, r4
  40412c:	f000 fc36 	bl	40499c <__multadd>
  404130:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404132:	2b00      	cmp	r3, #0
  404134:	4606      	mov	r6, r0
  404136:	dd0a      	ble.n	40414e <_dtoa_r+0xe0e>
  404138:	930a      	str	r3, [sp, #40]	; 0x28
  40413a:	f7ff bbaa 	b.w	403892 <_dtoa_r+0x552>
  40413e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404140:	2b02      	cmp	r3, #2
  404142:	dc23      	bgt.n	40418c <_dtoa_r+0xe4c>
  404144:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404146:	e43b      	b.n	4039c0 <_dtoa_r+0x680>
  404148:	f04f 0a02 	mov.w	sl, #2
  40414c:	e4ed      	b.n	403b2a <_dtoa_r+0x7ea>
  40414e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404150:	2b02      	cmp	r3, #2
  404152:	dc1b      	bgt.n	40418c <_dtoa_r+0xe4c>
  404154:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404156:	e7ef      	b.n	404138 <_dtoa_r+0xdf8>
  404158:	2500      	movs	r5, #0
  40415a:	6465      	str	r5, [r4, #68]	; 0x44
  40415c:	4629      	mov	r1, r5
  40415e:	4620      	mov	r0, r4
  404160:	f000 fbec 	bl	40493c <_Balloc>
  404164:	f04f 33ff 	mov.w	r3, #4294967295
  404168:	930a      	str	r3, [sp, #40]	; 0x28
  40416a:	930f      	str	r3, [sp, #60]	; 0x3c
  40416c:	2301      	movs	r3, #1
  40416e:	9004      	str	r0, [sp, #16]
  404170:	9525      	str	r5, [sp, #148]	; 0x94
  404172:	6420      	str	r0, [r4, #64]	; 0x40
  404174:	930b      	str	r3, [sp, #44]	; 0x2c
  404176:	f7ff b9dd 	b.w	403534 <_dtoa_r+0x1f4>
  40417a:	2501      	movs	r5, #1
  40417c:	f7ff b9a5 	b.w	4034ca <_dtoa_r+0x18a>
  404180:	f43f ab69 	beq.w	403856 <_dtoa_r+0x516>
  404184:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404188:	f7ff bbf9 	b.w	40397e <_dtoa_r+0x63e>
  40418c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40418e:	930a      	str	r3, [sp, #40]	; 0x28
  404190:	e5e5      	b.n	403d5e <_dtoa_r+0xa1e>
  404192:	bf00      	nop

00404194 <__libc_fini_array>:
  404194:	b538      	push	{r3, r4, r5, lr}
  404196:	4c0a      	ldr	r4, [pc, #40]	; (4041c0 <__libc_fini_array+0x2c>)
  404198:	4d0a      	ldr	r5, [pc, #40]	; (4041c4 <__libc_fini_array+0x30>)
  40419a:	1b64      	subs	r4, r4, r5
  40419c:	10a4      	asrs	r4, r4, #2
  40419e:	d00a      	beq.n	4041b6 <__libc_fini_array+0x22>
  4041a0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4041a4:	3b01      	subs	r3, #1
  4041a6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4041aa:	3c01      	subs	r4, #1
  4041ac:	f855 3904 	ldr.w	r3, [r5], #-4
  4041b0:	4798      	blx	r3
  4041b2:	2c00      	cmp	r4, #0
  4041b4:	d1f9      	bne.n	4041aa <__libc_fini_array+0x16>
  4041b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4041ba:	f002 bc87 	b.w	406acc <_fini>
  4041be:	bf00      	nop
  4041c0:	00406adc 	.word	0x00406adc
  4041c4:	00406ad8 	.word	0x00406ad8

004041c8 <_localeconv_r>:
  4041c8:	4a04      	ldr	r2, [pc, #16]	; (4041dc <_localeconv_r+0x14>)
  4041ca:	4b05      	ldr	r3, [pc, #20]	; (4041e0 <_localeconv_r+0x18>)
  4041cc:	6812      	ldr	r2, [r2, #0]
  4041ce:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4041d0:	2800      	cmp	r0, #0
  4041d2:	bf08      	it	eq
  4041d4:	4618      	moveq	r0, r3
  4041d6:	30f0      	adds	r0, #240	; 0xf0
  4041d8:	4770      	bx	lr
  4041da:	bf00      	nop
  4041dc:	20400020 	.word	0x20400020
  4041e0:	20400864 	.word	0x20400864

004041e4 <__retarget_lock_acquire_recursive>:
  4041e4:	4770      	bx	lr
  4041e6:	bf00      	nop

004041e8 <__retarget_lock_release_recursive>:
  4041e8:	4770      	bx	lr
  4041ea:	bf00      	nop

004041ec <_malloc_r>:
  4041ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4041f0:	f101 060b 	add.w	r6, r1, #11
  4041f4:	2e16      	cmp	r6, #22
  4041f6:	b083      	sub	sp, #12
  4041f8:	4605      	mov	r5, r0
  4041fa:	f240 809e 	bls.w	40433a <_malloc_r+0x14e>
  4041fe:	f036 0607 	bics.w	r6, r6, #7
  404202:	f100 80bd 	bmi.w	404380 <_malloc_r+0x194>
  404206:	42b1      	cmp	r1, r6
  404208:	f200 80ba 	bhi.w	404380 <_malloc_r+0x194>
  40420c:	f000 fb8a 	bl	404924 <__malloc_lock>
  404210:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404214:	f0c0 8293 	bcc.w	40473e <_malloc_r+0x552>
  404218:	0a73      	lsrs	r3, r6, #9
  40421a:	f000 80b8 	beq.w	40438e <_malloc_r+0x1a2>
  40421e:	2b04      	cmp	r3, #4
  404220:	f200 8179 	bhi.w	404516 <_malloc_r+0x32a>
  404224:	09b3      	lsrs	r3, r6, #6
  404226:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40422a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40422e:	00c3      	lsls	r3, r0, #3
  404230:	4fbf      	ldr	r7, [pc, #764]	; (404530 <_malloc_r+0x344>)
  404232:	443b      	add	r3, r7
  404234:	f1a3 0108 	sub.w	r1, r3, #8
  404238:	685c      	ldr	r4, [r3, #4]
  40423a:	42a1      	cmp	r1, r4
  40423c:	d106      	bne.n	40424c <_malloc_r+0x60>
  40423e:	e00c      	b.n	40425a <_malloc_r+0x6e>
  404240:	2a00      	cmp	r2, #0
  404242:	f280 80aa 	bge.w	40439a <_malloc_r+0x1ae>
  404246:	68e4      	ldr	r4, [r4, #12]
  404248:	42a1      	cmp	r1, r4
  40424a:	d006      	beq.n	40425a <_malloc_r+0x6e>
  40424c:	6863      	ldr	r3, [r4, #4]
  40424e:	f023 0303 	bic.w	r3, r3, #3
  404252:	1b9a      	subs	r2, r3, r6
  404254:	2a0f      	cmp	r2, #15
  404256:	ddf3      	ble.n	404240 <_malloc_r+0x54>
  404258:	4670      	mov	r0, lr
  40425a:	693c      	ldr	r4, [r7, #16]
  40425c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404544 <_malloc_r+0x358>
  404260:	4574      	cmp	r4, lr
  404262:	f000 81ab 	beq.w	4045bc <_malloc_r+0x3d0>
  404266:	6863      	ldr	r3, [r4, #4]
  404268:	f023 0303 	bic.w	r3, r3, #3
  40426c:	1b9a      	subs	r2, r3, r6
  40426e:	2a0f      	cmp	r2, #15
  404270:	f300 8190 	bgt.w	404594 <_malloc_r+0x3a8>
  404274:	2a00      	cmp	r2, #0
  404276:	f8c7 e014 	str.w	lr, [r7, #20]
  40427a:	f8c7 e010 	str.w	lr, [r7, #16]
  40427e:	f280 809d 	bge.w	4043bc <_malloc_r+0x1d0>
  404282:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404286:	f080 8161 	bcs.w	40454c <_malloc_r+0x360>
  40428a:	08db      	lsrs	r3, r3, #3
  40428c:	f103 0c01 	add.w	ip, r3, #1
  404290:	1099      	asrs	r1, r3, #2
  404292:	687a      	ldr	r2, [r7, #4]
  404294:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404298:	f8c4 8008 	str.w	r8, [r4, #8]
  40429c:	2301      	movs	r3, #1
  40429e:	408b      	lsls	r3, r1
  4042a0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4042a4:	4313      	orrs	r3, r2
  4042a6:	3908      	subs	r1, #8
  4042a8:	60e1      	str	r1, [r4, #12]
  4042aa:	607b      	str	r3, [r7, #4]
  4042ac:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4042b0:	f8c8 400c 	str.w	r4, [r8, #12]
  4042b4:	1082      	asrs	r2, r0, #2
  4042b6:	2401      	movs	r4, #1
  4042b8:	4094      	lsls	r4, r2
  4042ba:	429c      	cmp	r4, r3
  4042bc:	f200 808b 	bhi.w	4043d6 <_malloc_r+0x1ea>
  4042c0:	421c      	tst	r4, r3
  4042c2:	d106      	bne.n	4042d2 <_malloc_r+0xe6>
  4042c4:	f020 0003 	bic.w	r0, r0, #3
  4042c8:	0064      	lsls	r4, r4, #1
  4042ca:	421c      	tst	r4, r3
  4042cc:	f100 0004 	add.w	r0, r0, #4
  4042d0:	d0fa      	beq.n	4042c8 <_malloc_r+0xdc>
  4042d2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4042d6:	46cc      	mov	ip, r9
  4042d8:	4680      	mov	r8, r0
  4042da:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4042de:	459c      	cmp	ip, r3
  4042e0:	d107      	bne.n	4042f2 <_malloc_r+0x106>
  4042e2:	e16d      	b.n	4045c0 <_malloc_r+0x3d4>
  4042e4:	2a00      	cmp	r2, #0
  4042e6:	f280 817b 	bge.w	4045e0 <_malloc_r+0x3f4>
  4042ea:	68db      	ldr	r3, [r3, #12]
  4042ec:	459c      	cmp	ip, r3
  4042ee:	f000 8167 	beq.w	4045c0 <_malloc_r+0x3d4>
  4042f2:	6859      	ldr	r1, [r3, #4]
  4042f4:	f021 0103 	bic.w	r1, r1, #3
  4042f8:	1b8a      	subs	r2, r1, r6
  4042fa:	2a0f      	cmp	r2, #15
  4042fc:	ddf2      	ble.n	4042e4 <_malloc_r+0xf8>
  4042fe:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404302:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404306:	9300      	str	r3, [sp, #0]
  404308:	199c      	adds	r4, r3, r6
  40430a:	4628      	mov	r0, r5
  40430c:	f046 0601 	orr.w	r6, r6, #1
  404310:	f042 0501 	orr.w	r5, r2, #1
  404314:	605e      	str	r6, [r3, #4]
  404316:	f8c8 c00c 	str.w	ip, [r8, #12]
  40431a:	f8cc 8008 	str.w	r8, [ip, #8]
  40431e:	617c      	str	r4, [r7, #20]
  404320:	613c      	str	r4, [r7, #16]
  404322:	f8c4 e00c 	str.w	lr, [r4, #12]
  404326:	f8c4 e008 	str.w	lr, [r4, #8]
  40432a:	6065      	str	r5, [r4, #4]
  40432c:	505a      	str	r2, [r3, r1]
  40432e:	f000 faff 	bl	404930 <__malloc_unlock>
  404332:	9b00      	ldr	r3, [sp, #0]
  404334:	f103 0408 	add.w	r4, r3, #8
  404338:	e01e      	b.n	404378 <_malloc_r+0x18c>
  40433a:	2910      	cmp	r1, #16
  40433c:	d820      	bhi.n	404380 <_malloc_r+0x194>
  40433e:	f000 faf1 	bl	404924 <__malloc_lock>
  404342:	2610      	movs	r6, #16
  404344:	2318      	movs	r3, #24
  404346:	2002      	movs	r0, #2
  404348:	4f79      	ldr	r7, [pc, #484]	; (404530 <_malloc_r+0x344>)
  40434a:	443b      	add	r3, r7
  40434c:	f1a3 0208 	sub.w	r2, r3, #8
  404350:	685c      	ldr	r4, [r3, #4]
  404352:	4294      	cmp	r4, r2
  404354:	f000 813d 	beq.w	4045d2 <_malloc_r+0x3e6>
  404358:	6863      	ldr	r3, [r4, #4]
  40435a:	68e1      	ldr	r1, [r4, #12]
  40435c:	68a6      	ldr	r6, [r4, #8]
  40435e:	f023 0303 	bic.w	r3, r3, #3
  404362:	4423      	add	r3, r4
  404364:	4628      	mov	r0, r5
  404366:	685a      	ldr	r2, [r3, #4]
  404368:	60f1      	str	r1, [r6, #12]
  40436a:	f042 0201 	orr.w	r2, r2, #1
  40436e:	608e      	str	r6, [r1, #8]
  404370:	605a      	str	r2, [r3, #4]
  404372:	f000 fadd 	bl	404930 <__malloc_unlock>
  404376:	3408      	adds	r4, #8
  404378:	4620      	mov	r0, r4
  40437a:	b003      	add	sp, #12
  40437c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404380:	2400      	movs	r4, #0
  404382:	230c      	movs	r3, #12
  404384:	4620      	mov	r0, r4
  404386:	602b      	str	r3, [r5, #0]
  404388:	b003      	add	sp, #12
  40438a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40438e:	2040      	movs	r0, #64	; 0x40
  404390:	f44f 7300 	mov.w	r3, #512	; 0x200
  404394:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404398:	e74a      	b.n	404230 <_malloc_r+0x44>
  40439a:	4423      	add	r3, r4
  40439c:	68e1      	ldr	r1, [r4, #12]
  40439e:	685a      	ldr	r2, [r3, #4]
  4043a0:	68a6      	ldr	r6, [r4, #8]
  4043a2:	f042 0201 	orr.w	r2, r2, #1
  4043a6:	60f1      	str	r1, [r6, #12]
  4043a8:	4628      	mov	r0, r5
  4043aa:	608e      	str	r6, [r1, #8]
  4043ac:	605a      	str	r2, [r3, #4]
  4043ae:	f000 fabf 	bl	404930 <__malloc_unlock>
  4043b2:	3408      	adds	r4, #8
  4043b4:	4620      	mov	r0, r4
  4043b6:	b003      	add	sp, #12
  4043b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043bc:	4423      	add	r3, r4
  4043be:	4628      	mov	r0, r5
  4043c0:	685a      	ldr	r2, [r3, #4]
  4043c2:	f042 0201 	orr.w	r2, r2, #1
  4043c6:	605a      	str	r2, [r3, #4]
  4043c8:	f000 fab2 	bl	404930 <__malloc_unlock>
  4043cc:	3408      	adds	r4, #8
  4043ce:	4620      	mov	r0, r4
  4043d0:	b003      	add	sp, #12
  4043d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043d6:	68bc      	ldr	r4, [r7, #8]
  4043d8:	6863      	ldr	r3, [r4, #4]
  4043da:	f023 0803 	bic.w	r8, r3, #3
  4043de:	45b0      	cmp	r8, r6
  4043e0:	d304      	bcc.n	4043ec <_malloc_r+0x200>
  4043e2:	eba8 0306 	sub.w	r3, r8, r6
  4043e6:	2b0f      	cmp	r3, #15
  4043e8:	f300 8085 	bgt.w	4044f6 <_malloc_r+0x30a>
  4043ec:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404548 <_malloc_r+0x35c>
  4043f0:	4b50      	ldr	r3, [pc, #320]	; (404534 <_malloc_r+0x348>)
  4043f2:	f8d9 2000 	ldr.w	r2, [r9]
  4043f6:	681b      	ldr	r3, [r3, #0]
  4043f8:	3201      	adds	r2, #1
  4043fa:	4433      	add	r3, r6
  4043fc:	eb04 0a08 	add.w	sl, r4, r8
  404400:	f000 8155 	beq.w	4046ae <_malloc_r+0x4c2>
  404404:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404408:	330f      	adds	r3, #15
  40440a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40440e:	f02b 0b0f 	bic.w	fp, fp, #15
  404412:	4659      	mov	r1, fp
  404414:	4628      	mov	r0, r5
  404416:	f000 fd8b 	bl	404f30 <_sbrk_r>
  40441a:	1c41      	adds	r1, r0, #1
  40441c:	4602      	mov	r2, r0
  40441e:	f000 80fc 	beq.w	40461a <_malloc_r+0x42e>
  404422:	4582      	cmp	sl, r0
  404424:	f200 80f7 	bhi.w	404616 <_malloc_r+0x42a>
  404428:	4b43      	ldr	r3, [pc, #268]	; (404538 <_malloc_r+0x34c>)
  40442a:	6819      	ldr	r1, [r3, #0]
  40442c:	4459      	add	r1, fp
  40442e:	6019      	str	r1, [r3, #0]
  404430:	f000 814d 	beq.w	4046ce <_malloc_r+0x4e2>
  404434:	f8d9 0000 	ldr.w	r0, [r9]
  404438:	3001      	adds	r0, #1
  40443a:	bf1b      	ittet	ne
  40443c:	eba2 0a0a 	subne.w	sl, r2, sl
  404440:	4451      	addne	r1, sl
  404442:	f8c9 2000 	streq.w	r2, [r9]
  404446:	6019      	strne	r1, [r3, #0]
  404448:	f012 0107 	ands.w	r1, r2, #7
  40444c:	f000 8115 	beq.w	40467a <_malloc_r+0x48e>
  404450:	f1c1 0008 	rsb	r0, r1, #8
  404454:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404458:	4402      	add	r2, r0
  40445a:	3108      	adds	r1, #8
  40445c:	eb02 090b 	add.w	r9, r2, fp
  404460:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404464:	eba1 0909 	sub.w	r9, r1, r9
  404468:	4649      	mov	r1, r9
  40446a:	4628      	mov	r0, r5
  40446c:	9301      	str	r3, [sp, #4]
  40446e:	9200      	str	r2, [sp, #0]
  404470:	f000 fd5e 	bl	404f30 <_sbrk_r>
  404474:	1c43      	adds	r3, r0, #1
  404476:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40447a:	f000 8143 	beq.w	404704 <_malloc_r+0x518>
  40447e:	1a80      	subs	r0, r0, r2
  404480:	4448      	add	r0, r9
  404482:	f040 0001 	orr.w	r0, r0, #1
  404486:	6819      	ldr	r1, [r3, #0]
  404488:	60ba      	str	r2, [r7, #8]
  40448a:	4449      	add	r1, r9
  40448c:	42bc      	cmp	r4, r7
  40448e:	6050      	str	r0, [r2, #4]
  404490:	6019      	str	r1, [r3, #0]
  404492:	d017      	beq.n	4044c4 <_malloc_r+0x2d8>
  404494:	f1b8 0f0f 	cmp.w	r8, #15
  404498:	f240 80fb 	bls.w	404692 <_malloc_r+0x4a6>
  40449c:	6860      	ldr	r0, [r4, #4]
  40449e:	f1a8 020c 	sub.w	r2, r8, #12
  4044a2:	f022 0207 	bic.w	r2, r2, #7
  4044a6:	eb04 0e02 	add.w	lr, r4, r2
  4044aa:	f000 0001 	and.w	r0, r0, #1
  4044ae:	f04f 0c05 	mov.w	ip, #5
  4044b2:	4310      	orrs	r0, r2
  4044b4:	2a0f      	cmp	r2, #15
  4044b6:	6060      	str	r0, [r4, #4]
  4044b8:	f8ce c004 	str.w	ip, [lr, #4]
  4044bc:	f8ce c008 	str.w	ip, [lr, #8]
  4044c0:	f200 8117 	bhi.w	4046f2 <_malloc_r+0x506>
  4044c4:	4b1d      	ldr	r3, [pc, #116]	; (40453c <_malloc_r+0x350>)
  4044c6:	68bc      	ldr	r4, [r7, #8]
  4044c8:	681a      	ldr	r2, [r3, #0]
  4044ca:	4291      	cmp	r1, r2
  4044cc:	bf88      	it	hi
  4044ce:	6019      	strhi	r1, [r3, #0]
  4044d0:	4b1b      	ldr	r3, [pc, #108]	; (404540 <_malloc_r+0x354>)
  4044d2:	681a      	ldr	r2, [r3, #0]
  4044d4:	4291      	cmp	r1, r2
  4044d6:	6862      	ldr	r2, [r4, #4]
  4044d8:	bf88      	it	hi
  4044da:	6019      	strhi	r1, [r3, #0]
  4044dc:	f022 0203 	bic.w	r2, r2, #3
  4044e0:	4296      	cmp	r6, r2
  4044e2:	eba2 0306 	sub.w	r3, r2, r6
  4044e6:	d801      	bhi.n	4044ec <_malloc_r+0x300>
  4044e8:	2b0f      	cmp	r3, #15
  4044ea:	dc04      	bgt.n	4044f6 <_malloc_r+0x30a>
  4044ec:	4628      	mov	r0, r5
  4044ee:	f000 fa1f 	bl	404930 <__malloc_unlock>
  4044f2:	2400      	movs	r4, #0
  4044f4:	e740      	b.n	404378 <_malloc_r+0x18c>
  4044f6:	19a2      	adds	r2, r4, r6
  4044f8:	f043 0301 	orr.w	r3, r3, #1
  4044fc:	f046 0601 	orr.w	r6, r6, #1
  404500:	6066      	str	r6, [r4, #4]
  404502:	4628      	mov	r0, r5
  404504:	60ba      	str	r2, [r7, #8]
  404506:	6053      	str	r3, [r2, #4]
  404508:	f000 fa12 	bl	404930 <__malloc_unlock>
  40450c:	3408      	adds	r4, #8
  40450e:	4620      	mov	r0, r4
  404510:	b003      	add	sp, #12
  404512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404516:	2b14      	cmp	r3, #20
  404518:	d971      	bls.n	4045fe <_malloc_r+0x412>
  40451a:	2b54      	cmp	r3, #84	; 0x54
  40451c:	f200 80a3 	bhi.w	404666 <_malloc_r+0x47a>
  404520:	0b33      	lsrs	r3, r6, #12
  404522:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404526:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40452a:	00c3      	lsls	r3, r0, #3
  40452c:	e680      	b.n	404230 <_malloc_r+0x44>
  40452e:	bf00      	nop
  404530:	20400454 	.word	0x20400454
  404534:	20400c9c 	.word	0x20400c9c
  404538:	20400c6c 	.word	0x20400c6c
  40453c:	20400c94 	.word	0x20400c94
  404540:	20400c98 	.word	0x20400c98
  404544:	2040045c 	.word	0x2040045c
  404548:	2040085c 	.word	0x2040085c
  40454c:	0a5a      	lsrs	r2, r3, #9
  40454e:	2a04      	cmp	r2, #4
  404550:	d95b      	bls.n	40460a <_malloc_r+0x41e>
  404552:	2a14      	cmp	r2, #20
  404554:	f200 80ae 	bhi.w	4046b4 <_malloc_r+0x4c8>
  404558:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40455c:	00c9      	lsls	r1, r1, #3
  40455e:	325b      	adds	r2, #91	; 0x5b
  404560:	eb07 0c01 	add.w	ip, r7, r1
  404564:	5879      	ldr	r1, [r7, r1]
  404566:	f1ac 0c08 	sub.w	ip, ip, #8
  40456a:	458c      	cmp	ip, r1
  40456c:	f000 8088 	beq.w	404680 <_malloc_r+0x494>
  404570:	684a      	ldr	r2, [r1, #4]
  404572:	f022 0203 	bic.w	r2, r2, #3
  404576:	4293      	cmp	r3, r2
  404578:	d273      	bcs.n	404662 <_malloc_r+0x476>
  40457a:	6889      	ldr	r1, [r1, #8]
  40457c:	458c      	cmp	ip, r1
  40457e:	d1f7      	bne.n	404570 <_malloc_r+0x384>
  404580:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404584:	687b      	ldr	r3, [r7, #4]
  404586:	60e2      	str	r2, [r4, #12]
  404588:	f8c4 c008 	str.w	ip, [r4, #8]
  40458c:	6094      	str	r4, [r2, #8]
  40458e:	f8cc 400c 	str.w	r4, [ip, #12]
  404592:	e68f      	b.n	4042b4 <_malloc_r+0xc8>
  404594:	19a1      	adds	r1, r4, r6
  404596:	f046 0c01 	orr.w	ip, r6, #1
  40459a:	f042 0601 	orr.w	r6, r2, #1
  40459e:	f8c4 c004 	str.w	ip, [r4, #4]
  4045a2:	4628      	mov	r0, r5
  4045a4:	6179      	str	r1, [r7, #20]
  4045a6:	6139      	str	r1, [r7, #16]
  4045a8:	f8c1 e00c 	str.w	lr, [r1, #12]
  4045ac:	f8c1 e008 	str.w	lr, [r1, #8]
  4045b0:	604e      	str	r6, [r1, #4]
  4045b2:	50e2      	str	r2, [r4, r3]
  4045b4:	f000 f9bc 	bl	404930 <__malloc_unlock>
  4045b8:	3408      	adds	r4, #8
  4045ba:	e6dd      	b.n	404378 <_malloc_r+0x18c>
  4045bc:	687b      	ldr	r3, [r7, #4]
  4045be:	e679      	b.n	4042b4 <_malloc_r+0xc8>
  4045c0:	f108 0801 	add.w	r8, r8, #1
  4045c4:	f018 0f03 	tst.w	r8, #3
  4045c8:	f10c 0c08 	add.w	ip, ip, #8
  4045cc:	f47f ae85 	bne.w	4042da <_malloc_r+0xee>
  4045d0:	e02d      	b.n	40462e <_malloc_r+0x442>
  4045d2:	68dc      	ldr	r4, [r3, #12]
  4045d4:	42a3      	cmp	r3, r4
  4045d6:	bf08      	it	eq
  4045d8:	3002      	addeq	r0, #2
  4045da:	f43f ae3e 	beq.w	40425a <_malloc_r+0x6e>
  4045de:	e6bb      	b.n	404358 <_malloc_r+0x16c>
  4045e0:	4419      	add	r1, r3
  4045e2:	461c      	mov	r4, r3
  4045e4:	684a      	ldr	r2, [r1, #4]
  4045e6:	68db      	ldr	r3, [r3, #12]
  4045e8:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4045ec:	f042 0201 	orr.w	r2, r2, #1
  4045f0:	604a      	str	r2, [r1, #4]
  4045f2:	4628      	mov	r0, r5
  4045f4:	60f3      	str	r3, [r6, #12]
  4045f6:	609e      	str	r6, [r3, #8]
  4045f8:	f000 f99a 	bl	404930 <__malloc_unlock>
  4045fc:	e6bc      	b.n	404378 <_malloc_r+0x18c>
  4045fe:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404602:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404606:	00c3      	lsls	r3, r0, #3
  404608:	e612      	b.n	404230 <_malloc_r+0x44>
  40460a:	099a      	lsrs	r2, r3, #6
  40460c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404610:	00c9      	lsls	r1, r1, #3
  404612:	3238      	adds	r2, #56	; 0x38
  404614:	e7a4      	b.n	404560 <_malloc_r+0x374>
  404616:	42bc      	cmp	r4, r7
  404618:	d054      	beq.n	4046c4 <_malloc_r+0x4d8>
  40461a:	68bc      	ldr	r4, [r7, #8]
  40461c:	6862      	ldr	r2, [r4, #4]
  40461e:	f022 0203 	bic.w	r2, r2, #3
  404622:	e75d      	b.n	4044e0 <_malloc_r+0x2f4>
  404624:	f859 3908 	ldr.w	r3, [r9], #-8
  404628:	4599      	cmp	r9, r3
  40462a:	f040 8086 	bne.w	40473a <_malloc_r+0x54e>
  40462e:	f010 0f03 	tst.w	r0, #3
  404632:	f100 30ff 	add.w	r0, r0, #4294967295
  404636:	d1f5      	bne.n	404624 <_malloc_r+0x438>
  404638:	687b      	ldr	r3, [r7, #4]
  40463a:	ea23 0304 	bic.w	r3, r3, r4
  40463e:	607b      	str	r3, [r7, #4]
  404640:	0064      	lsls	r4, r4, #1
  404642:	429c      	cmp	r4, r3
  404644:	f63f aec7 	bhi.w	4043d6 <_malloc_r+0x1ea>
  404648:	2c00      	cmp	r4, #0
  40464a:	f43f aec4 	beq.w	4043d6 <_malloc_r+0x1ea>
  40464e:	421c      	tst	r4, r3
  404650:	4640      	mov	r0, r8
  404652:	f47f ae3e 	bne.w	4042d2 <_malloc_r+0xe6>
  404656:	0064      	lsls	r4, r4, #1
  404658:	421c      	tst	r4, r3
  40465a:	f100 0004 	add.w	r0, r0, #4
  40465e:	d0fa      	beq.n	404656 <_malloc_r+0x46a>
  404660:	e637      	b.n	4042d2 <_malloc_r+0xe6>
  404662:	468c      	mov	ip, r1
  404664:	e78c      	b.n	404580 <_malloc_r+0x394>
  404666:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40466a:	d815      	bhi.n	404698 <_malloc_r+0x4ac>
  40466c:	0bf3      	lsrs	r3, r6, #15
  40466e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404672:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404676:	00c3      	lsls	r3, r0, #3
  404678:	e5da      	b.n	404230 <_malloc_r+0x44>
  40467a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40467e:	e6ed      	b.n	40445c <_malloc_r+0x270>
  404680:	687b      	ldr	r3, [r7, #4]
  404682:	1092      	asrs	r2, r2, #2
  404684:	2101      	movs	r1, #1
  404686:	fa01 f202 	lsl.w	r2, r1, r2
  40468a:	4313      	orrs	r3, r2
  40468c:	607b      	str	r3, [r7, #4]
  40468e:	4662      	mov	r2, ip
  404690:	e779      	b.n	404586 <_malloc_r+0x39a>
  404692:	2301      	movs	r3, #1
  404694:	6053      	str	r3, [r2, #4]
  404696:	e729      	b.n	4044ec <_malloc_r+0x300>
  404698:	f240 5254 	movw	r2, #1364	; 0x554
  40469c:	4293      	cmp	r3, r2
  40469e:	d822      	bhi.n	4046e6 <_malloc_r+0x4fa>
  4046a0:	0cb3      	lsrs	r3, r6, #18
  4046a2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4046a6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4046aa:	00c3      	lsls	r3, r0, #3
  4046ac:	e5c0      	b.n	404230 <_malloc_r+0x44>
  4046ae:	f103 0b10 	add.w	fp, r3, #16
  4046b2:	e6ae      	b.n	404412 <_malloc_r+0x226>
  4046b4:	2a54      	cmp	r2, #84	; 0x54
  4046b6:	d829      	bhi.n	40470c <_malloc_r+0x520>
  4046b8:	0b1a      	lsrs	r2, r3, #12
  4046ba:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4046be:	00c9      	lsls	r1, r1, #3
  4046c0:	326e      	adds	r2, #110	; 0x6e
  4046c2:	e74d      	b.n	404560 <_malloc_r+0x374>
  4046c4:	4b20      	ldr	r3, [pc, #128]	; (404748 <_malloc_r+0x55c>)
  4046c6:	6819      	ldr	r1, [r3, #0]
  4046c8:	4459      	add	r1, fp
  4046ca:	6019      	str	r1, [r3, #0]
  4046cc:	e6b2      	b.n	404434 <_malloc_r+0x248>
  4046ce:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4046d2:	2800      	cmp	r0, #0
  4046d4:	f47f aeae 	bne.w	404434 <_malloc_r+0x248>
  4046d8:	eb08 030b 	add.w	r3, r8, fp
  4046dc:	68ba      	ldr	r2, [r7, #8]
  4046de:	f043 0301 	orr.w	r3, r3, #1
  4046e2:	6053      	str	r3, [r2, #4]
  4046e4:	e6ee      	b.n	4044c4 <_malloc_r+0x2d8>
  4046e6:	207f      	movs	r0, #127	; 0x7f
  4046e8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4046ec:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4046f0:	e59e      	b.n	404230 <_malloc_r+0x44>
  4046f2:	f104 0108 	add.w	r1, r4, #8
  4046f6:	4628      	mov	r0, r5
  4046f8:	9300      	str	r3, [sp, #0]
  4046fa:	f000 fe0f 	bl	40531c <_free_r>
  4046fe:	9b00      	ldr	r3, [sp, #0]
  404700:	6819      	ldr	r1, [r3, #0]
  404702:	e6df      	b.n	4044c4 <_malloc_r+0x2d8>
  404704:	2001      	movs	r0, #1
  404706:	f04f 0900 	mov.w	r9, #0
  40470a:	e6bc      	b.n	404486 <_malloc_r+0x29a>
  40470c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404710:	d805      	bhi.n	40471e <_malloc_r+0x532>
  404712:	0bda      	lsrs	r2, r3, #15
  404714:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404718:	00c9      	lsls	r1, r1, #3
  40471a:	3277      	adds	r2, #119	; 0x77
  40471c:	e720      	b.n	404560 <_malloc_r+0x374>
  40471e:	f240 5154 	movw	r1, #1364	; 0x554
  404722:	428a      	cmp	r2, r1
  404724:	d805      	bhi.n	404732 <_malloc_r+0x546>
  404726:	0c9a      	lsrs	r2, r3, #18
  404728:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40472c:	00c9      	lsls	r1, r1, #3
  40472e:	327c      	adds	r2, #124	; 0x7c
  404730:	e716      	b.n	404560 <_malloc_r+0x374>
  404732:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404736:	227e      	movs	r2, #126	; 0x7e
  404738:	e712      	b.n	404560 <_malloc_r+0x374>
  40473a:	687b      	ldr	r3, [r7, #4]
  40473c:	e780      	b.n	404640 <_malloc_r+0x454>
  40473e:	08f0      	lsrs	r0, r6, #3
  404740:	f106 0308 	add.w	r3, r6, #8
  404744:	e600      	b.n	404348 <_malloc_r+0x15c>
  404746:	bf00      	nop
  404748:	20400c6c 	.word	0x20400c6c
  40474c:	00000000 	.word	0x00000000

00404750 <memchr>:
  404750:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404754:	2a10      	cmp	r2, #16
  404756:	db2b      	blt.n	4047b0 <memchr+0x60>
  404758:	f010 0f07 	tst.w	r0, #7
  40475c:	d008      	beq.n	404770 <memchr+0x20>
  40475e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404762:	3a01      	subs	r2, #1
  404764:	428b      	cmp	r3, r1
  404766:	d02d      	beq.n	4047c4 <memchr+0x74>
  404768:	f010 0f07 	tst.w	r0, #7
  40476c:	b342      	cbz	r2, 4047c0 <memchr+0x70>
  40476e:	d1f6      	bne.n	40475e <memchr+0xe>
  404770:	b4f0      	push	{r4, r5, r6, r7}
  404772:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404776:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40477a:	f022 0407 	bic.w	r4, r2, #7
  40477e:	f07f 0700 	mvns.w	r7, #0
  404782:	2300      	movs	r3, #0
  404784:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404788:	3c08      	subs	r4, #8
  40478a:	ea85 0501 	eor.w	r5, r5, r1
  40478e:	ea86 0601 	eor.w	r6, r6, r1
  404792:	fa85 f547 	uadd8	r5, r5, r7
  404796:	faa3 f587 	sel	r5, r3, r7
  40479a:	fa86 f647 	uadd8	r6, r6, r7
  40479e:	faa5 f687 	sel	r6, r5, r7
  4047a2:	b98e      	cbnz	r6, 4047c8 <memchr+0x78>
  4047a4:	d1ee      	bne.n	404784 <memchr+0x34>
  4047a6:	bcf0      	pop	{r4, r5, r6, r7}
  4047a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4047ac:	f002 0207 	and.w	r2, r2, #7
  4047b0:	b132      	cbz	r2, 4047c0 <memchr+0x70>
  4047b2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4047b6:	3a01      	subs	r2, #1
  4047b8:	ea83 0301 	eor.w	r3, r3, r1
  4047bc:	b113      	cbz	r3, 4047c4 <memchr+0x74>
  4047be:	d1f8      	bne.n	4047b2 <memchr+0x62>
  4047c0:	2000      	movs	r0, #0
  4047c2:	4770      	bx	lr
  4047c4:	3801      	subs	r0, #1
  4047c6:	4770      	bx	lr
  4047c8:	2d00      	cmp	r5, #0
  4047ca:	bf06      	itte	eq
  4047cc:	4635      	moveq	r5, r6
  4047ce:	3803      	subeq	r0, #3
  4047d0:	3807      	subne	r0, #7
  4047d2:	f015 0f01 	tst.w	r5, #1
  4047d6:	d107      	bne.n	4047e8 <memchr+0x98>
  4047d8:	3001      	adds	r0, #1
  4047da:	f415 7f80 	tst.w	r5, #256	; 0x100
  4047de:	bf02      	ittt	eq
  4047e0:	3001      	addeq	r0, #1
  4047e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4047e6:	3001      	addeq	r0, #1
  4047e8:	bcf0      	pop	{r4, r5, r6, r7}
  4047ea:	3801      	subs	r0, #1
  4047ec:	4770      	bx	lr
  4047ee:	bf00      	nop

004047f0 <memcpy>:
  4047f0:	4684      	mov	ip, r0
  4047f2:	ea41 0300 	orr.w	r3, r1, r0
  4047f6:	f013 0303 	ands.w	r3, r3, #3
  4047fa:	d16d      	bne.n	4048d8 <memcpy+0xe8>
  4047fc:	3a40      	subs	r2, #64	; 0x40
  4047fe:	d341      	bcc.n	404884 <memcpy+0x94>
  404800:	f851 3b04 	ldr.w	r3, [r1], #4
  404804:	f840 3b04 	str.w	r3, [r0], #4
  404808:	f851 3b04 	ldr.w	r3, [r1], #4
  40480c:	f840 3b04 	str.w	r3, [r0], #4
  404810:	f851 3b04 	ldr.w	r3, [r1], #4
  404814:	f840 3b04 	str.w	r3, [r0], #4
  404818:	f851 3b04 	ldr.w	r3, [r1], #4
  40481c:	f840 3b04 	str.w	r3, [r0], #4
  404820:	f851 3b04 	ldr.w	r3, [r1], #4
  404824:	f840 3b04 	str.w	r3, [r0], #4
  404828:	f851 3b04 	ldr.w	r3, [r1], #4
  40482c:	f840 3b04 	str.w	r3, [r0], #4
  404830:	f851 3b04 	ldr.w	r3, [r1], #4
  404834:	f840 3b04 	str.w	r3, [r0], #4
  404838:	f851 3b04 	ldr.w	r3, [r1], #4
  40483c:	f840 3b04 	str.w	r3, [r0], #4
  404840:	f851 3b04 	ldr.w	r3, [r1], #4
  404844:	f840 3b04 	str.w	r3, [r0], #4
  404848:	f851 3b04 	ldr.w	r3, [r1], #4
  40484c:	f840 3b04 	str.w	r3, [r0], #4
  404850:	f851 3b04 	ldr.w	r3, [r1], #4
  404854:	f840 3b04 	str.w	r3, [r0], #4
  404858:	f851 3b04 	ldr.w	r3, [r1], #4
  40485c:	f840 3b04 	str.w	r3, [r0], #4
  404860:	f851 3b04 	ldr.w	r3, [r1], #4
  404864:	f840 3b04 	str.w	r3, [r0], #4
  404868:	f851 3b04 	ldr.w	r3, [r1], #4
  40486c:	f840 3b04 	str.w	r3, [r0], #4
  404870:	f851 3b04 	ldr.w	r3, [r1], #4
  404874:	f840 3b04 	str.w	r3, [r0], #4
  404878:	f851 3b04 	ldr.w	r3, [r1], #4
  40487c:	f840 3b04 	str.w	r3, [r0], #4
  404880:	3a40      	subs	r2, #64	; 0x40
  404882:	d2bd      	bcs.n	404800 <memcpy+0x10>
  404884:	3230      	adds	r2, #48	; 0x30
  404886:	d311      	bcc.n	4048ac <memcpy+0xbc>
  404888:	f851 3b04 	ldr.w	r3, [r1], #4
  40488c:	f840 3b04 	str.w	r3, [r0], #4
  404890:	f851 3b04 	ldr.w	r3, [r1], #4
  404894:	f840 3b04 	str.w	r3, [r0], #4
  404898:	f851 3b04 	ldr.w	r3, [r1], #4
  40489c:	f840 3b04 	str.w	r3, [r0], #4
  4048a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048a4:	f840 3b04 	str.w	r3, [r0], #4
  4048a8:	3a10      	subs	r2, #16
  4048aa:	d2ed      	bcs.n	404888 <memcpy+0x98>
  4048ac:	320c      	adds	r2, #12
  4048ae:	d305      	bcc.n	4048bc <memcpy+0xcc>
  4048b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048b4:	f840 3b04 	str.w	r3, [r0], #4
  4048b8:	3a04      	subs	r2, #4
  4048ba:	d2f9      	bcs.n	4048b0 <memcpy+0xc0>
  4048bc:	3204      	adds	r2, #4
  4048be:	d008      	beq.n	4048d2 <memcpy+0xe2>
  4048c0:	07d2      	lsls	r2, r2, #31
  4048c2:	bf1c      	itt	ne
  4048c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4048c8:	f800 3b01 	strbne.w	r3, [r0], #1
  4048cc:	d301      	bcc.n	4048d2 <memcpy+0xe2>
  4048ce:	880b      	ldrh	r3, [r1, #0]
  4048d0:	8003      	strh	r3, [r0, #0]
  4048d2:	4660      	mov	r0, ip
  4048d4:	4770      	bx	lr
  4048d6:	bf00      	nop
  4048d8:	2a08      	cmp	r2, #8
  4048da:	d313      	bcc.n	404904 <memcpy+0x114>
  4048dc:	078b      	lsls	r3, r1, #30
  4048de:	d08d      	beq.n	4047fc <memcpy+0xc>
  4048e0:	f010 0303 	ands.w	r3, r0, #3
  4048e4:	d08a      	beq.n	4047fc <memcpy+0xc>
  4048e6:	f1c3 0304 	rsb	r3, r3, #4
  4048ea:	1ad2      	subs	r2, r2, r3
  4048ec:	07db      	lsls	r3, r3, #31
  4048ee:	bf1c      	itt	ne
  4048f0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4048f4:	f800 3b01 	strbne.w	r3, [r0], #1
  4048f8:	d380      	bcc.n	4047fc <memcpy+0xc>
  4048fa:	f831 3b02 	ldrh.w	r3, [r1], #2
  4048fe:	f820 3b02 	strh.w	r3, [r0], #2
  404902:	e77b      	b.n	4047fc <memcpy+0xc>
  404904:	3a04      	subs	r2, #4
  404906:	d3d9      	bcc.n	4048bc <memcpy+0xcc>
  404908:	3a01      	subs	r2, #1
  40490a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40490e:	f800 3b01 	strb.w	r3, [r0], #1
  404912:	d2f9      	bcs.n	404908 <memcpy+0x118>
  404914:	780b      	ldrb	r3, [r1, #0]
  404916:	7003      	strb	r3, [r0, #0]
  404918:	784b      	ldrb	r3, [r1, #1]
  40491a:	7043      	strb	r3, [r0, #1]
  40491c:	788b      	ldrb	r3, [r1, #2]
  40491e:	7083      	strb	r3, [r0, #2]
  404920:	4660      	mov	r0, ip
  404922:	4770      	bx	lr

00404924 <__malloc_lock>:
  404924:	4801      	ldr	r0, [pc, #4]	; (40492c <__malloc_lock+0x8>)
  404926:	f7ff bc5d 	b.w	4041e4 <__retarget_lock_acquire_recursive>
  40492a:	bf00      	nop
  40492c:	20400cb4 	.word	0x20400cb4

00404930 <__malloc_unlock>:
  404930:	4801      	ldr	r0, [pc, #4]	; (404938 <__malloc_unlock+0x8>)
  404932:	f7ff bc59 	b.w	4041e8 <__retarget_lock_release_recursive>
  404936:	bf00      	nop
  404938:	20400cb4 	.word	0x20400cb4

0040493c <_Balloc>:
  40493c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40493e:	b570      	push	{r4, r5, r6, lr}
  404940:	4605      	mov	r5, r0
  404942:	460c      	mov	r4, r1
  404944:	b14b      	cbz	r3, 40495a <_Balloc+0x1e>
  404946:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40494a:	b180      	cbz	r0, 40496e <_Balloc+0x32>
  40494c:	6802      	ldr	r2, [r0, #0]
  40494e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404952:	2300      	movs	r3, #0
  404954:	6103      	str	r3, [r0, #16]
  404956:	60c3      	str	r3, [r0, #12]
  404958:	bd70      	pop	{r4, r5, r6, pc}
  40495a:	2221      	movs	r2, #33	; 0x21
  40495c:	2104      	movs	r1, #4
  40495e:	f000 fc5d 	bl	40521c <_calloc_r>
  404962:	64e8      	str	r0, [r5, #76]	; 0x4c
  404964:	4603      	mov	r3, r0
  404966:	2800      	cmp	r0, #0
  404968:	d1ed      	bne.n	404946 <_Balloc+0xa>
  40496a:	2000      	movs	r0, #0
  40496c:	bd70      	pop	{r4, r5, r6, pc}
  40496e:	2101      	movs	r1, #1
  404970:	fa01 f604 	lsl.w	r6, r1, r4
  404974:	1d72      	adds	r2, r6, #5
  404976:	4628      	mov	r0, r5
  404978:	0092      	lsls	r2, r2, #2
  40497a:	f000 fc4f 	bl	40521c <_calloc_r>
  40497e:	2800      	cmp	r0, #0
  404980:	d0f3      	beq.n	40496a <_Balloc+0x2e>
  404982:	6044      	str	r4, [r0, #4]
  404984:	6086      	str	r6, [r0, #8]
  404986:	e7e4      	b.n	404952 <_Balloc+0x16>

00404988 <_Bfree>:
  404988:	b131      	cbz	r1, 404998 <_Bfree+0x10>
  40498a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40498c:	684a      	ldr	r2, [r1, #4]
  40498e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404992:	6008      	str	r0, [r1, #0]
  404994:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404998:	4770      	bx	lr
  40499a:	bf00      	nop

0040499c <__multadd>:
  40499c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40499e:	690c      	ldr	r4, [r1, #16]
  4049a0:	b083      	sub	sp, #12
  4049a2:	460d      	mov	r5, r1
  4049a4:	4606      	mov	r6, r0
  4049a6:	f101 0e14 	add.w	lr, r1, #20
  4049aa:	2700      	movs	r7, #0
  4049ac:	f8de 0000 	ldr.w	r0, [lr]
  4049b0:	b281      	uxth	r1, r0
  4049b2:	fb02 3301 	mla	r3, r2, r1, r3
  4049b6:	0c01      	lsrs	r1, r0, #16
  4049b8:	0c18      	lsrs	r0, r3, #16
  4049ba:	fb02 0101 	mla	r1, r2, r1, r0
  4049be:	b29b      	uxth	r3, r3
  4049c0:	3701      	adds	r7, #1
  4049c2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4049c6:	42bc      	cmp	r4, r7
  4049c8:	f84e 3b04 	str.w	r3, [lr], #4
  4049cc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4049d0:	dcec      	bgt.n	4049ac <__multadd+0x10>
  4049d2:	b13b      	cbz	r3, 4049e4 <__multadd+0x48>
  4049d4:	68aa      	ldr	r2, [r5, #8]
  4049d6:	4294      	cmp	r4, r2
  4049d8:	da07      	bge.n	4049ea <__multadd+0x4e>
  4049da:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4049de:	3401      	adds	r4, #1
  4049e0:	6153      	str	r3, [r2, #20]
  4049e2:	612c      	str	r4, [r5, #16]
  4049e4:	4628      	mov	r0, r5
  4049e6:	b003      	add	sp, #12
  4049e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4049ea:	6869      	ldr	r1, [r5, #4]
  4049ec:	9301      	str	r3, [sp, #4]
  4049ee:	3101      	adds	r1, #1
  4049f0:	4630      	mov	r0, r6
  4049f2:	f7ff ffa3 	bl	40493c <_Balloc>
  4049f6:	692a      	ldr	r2, [r5, #16]
  4049f8:	3202      	adds	r2, #2
  4049fa:	f105 010c 	add.w	r1, r5, #12
  4049fe:	4607      	mov	r7, r0
  404a00:	0092      	lsls	r2, r2, #2
  404a02:	300c      	adds	r0, #12
  404a04:	f7ff fef4 	bl	4047f0 <memcpy>
  404a08:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404a0a:	6869      	ldr	r1, [r5, #4]
  404a0c:	9b01      	ldr	r3, [sp, #4]
  404a0e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404a12:	6028      	str	r0, [r5, #0]
  404a14:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404a18:	463d      	mov	r5, r7
  404a1a:	e7de      	b.n	4049da <__multadd+0x3e>

00404a1c <__hi0bits>:
  404a1c:	0c02      	lsrs	r2, r0, #16
  404a1e:	0412      	lsls	r2, r2, #16
  404a20:	4603      	mov	r3, r0
  404a22:	b9b2      	cbnz	r2, 404a52 <__hi0bits+0x36>
  404a24:	0403      	lsls	r3, r0, #16
  404a26:	2010      	movs	r0, #16
  404a28:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404a2c:	bf04      	itt	eq
  404a2e:	021b      	lsleq	r3, r3, #8
  404a30:	3008      	addeq	r0, #8
  404a32:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404a36:	bf04      	itt	eq
  404a38:	011b      	lsleq	r3, r3, #4
  404a3a:	3004      	addeq	r0, #4
  404a3c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404a40:	bf04      	itt	eq
  404a42:	009b      	lsleq	r3, r3, #2
  404a44:	3002      	addeq	r0, #2
  404a46:	2b00      	cmp	r3, #0
  404a48:	db02      	blt.n	404a50 <__hi0bits+0x34>
  404a4a:	005b      	lsls	r3, r3, #1
  404a4c:	d403      	bmi.n	404a56 <__hi0bits+0x3a>
  404a4e:	2020      	movs	r0, #32
  404a50:	4770      	bx	lr
  404a52:	2000      	movs	r0, #0
  404a54:	e7e8      	b.n	404a28 <__hi0bits+0xc>
  404a56:	3001      	adds	r0, #1
  404a58:	4770      	bx	lr
  404a5a:	bf00      	nop

00404a5c <__lo0bits>:
  404a5c:	6803      	ldr	r3, [r0, #0]
  404a5e:	f013 0207 	ands.w	r2, r3, #7
  404a62:	4601      	mov	r1, r0
  404a64:	d007      	beq.n	404a76 <__lo0bits+0x1a>
  404a66:	07da      	lsls	r2, r3, #31
  404a68:	d421      	bmi.n	404aae <__lo0bits+0x52>
  404a6a:	0798      	lsls	r0, r3, #30
  404a6c:	d421      	bmi.n	404ab2 <__lo0bits+0x56>
  404a6e:	089b      	lsrs	r3, r3, #2
  404a70:	600b      	str	r3, [r1, #0]
  404a72:	2002      	movs	r0, #2
  404a74:	4770      	bx	lr
  404a76:	b298      	uxth	r0, r3
  404a78:	b198      	cbz	r0, 404aa2 <__lo0bits+0x46>
  404a7a:	4610      	mov	r0, r2
  404a7c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404a80:	bf04      	itt	eq
  404a82:	0a1b      	lsreq	r3, r3, #8
  404a84:	3008      	addeq	r0, #8
  404a86:	071a      	lsls	r2, r3, #28
  404a88:	bf04      	itt	eq
  404a8a:	091b      	lsreq	r3, r3, #4
  404a8c:	3004      	addeq	r0, #4
  404a8e:	079a      	lsls	r2, r3, #30
  404a90:	bf04      	itt	eq
  404a92:	089b      	lsreq	r3, r3, #2
  404a94:	3002      	addeq	r0, #2
  404a96:	07da      	lsls	r2, r3, #31
  404a98:	d407      	bmi.n	404aaa <__lo0bits+0x4e>
  404a9a:	085b      	lsrs	r3, r3, #1
  404a9c:	d104      	bne.n	404aa8 <__lo0bits+0x4c>
  404a9e:	2020      	movs	r0, #32
  404aa0:	4770      	bx	lr
  404aa2:	0c1b      	lsrs	r3, r3, #16
  404aa4:	2010      	movs	r0, #16
  404aa6:	e7e9      	b.n	404a7c <__lo0bits+0x20>
  404aa8:	3001      	adds	r0, #1
  404aaa:	600b      	str	r3, [r1, #0]
  404aac:	4770      	bx	lr
  404aae:	2000      	movs	r0, #0
  404ab0:	4770      	bx	lr
  404ab2:	085b      	lsrs	r3, r3, #1
  404ab4:	600b      	str	r3, [r1, #0]
  404ab6:	2001      	movs	r0, #1
  404ab8:	4770      	bx	lr
  404aba:	bf00      	nop

00404abc <__i2b>:
  404abc:	b510      	push	{r4, lr}
  404abe:	460c      	mov	r4, r1
  404ac0:	2101      	movs	r1, #1
  404ac2:	f7ff ff3b 	bl	40493c <_Balloc>
  404ac6:	2201      	movs	r2, #1
  404ac8:	6144      	str	r4, [r0, #20]
  404aca:	6102      	str	r2, [r0, #16]
  404acc:	bd10      	pop	{r4, pc}
  404ace:	bf00      	nop

00404ad0 <__multiply>:
  404ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404ad4:	690c      	ldr	r4, [r1, #16]
  404ad6:	6915      	ldr	r5, [r2, #16]
  404ad8:	42ac      	cmp	r4, r5
  404ada:	b083      	sub	sp, #12
  404adc:	468b      	mov	fp, r1
  404ade:	4616      	mov	r6, r2
  404ae0:	da04      	bge.n	404aec <__multiply+0x1c>
  404ae2:	4622      	mov	r2, r4
  404ae4:	46b3      	mov	fp, r6
  404ae6:	462c      	mov	r4, r5
  404ae8:	460e      	mov	r6, r1
  404aea:	4615      	mov	r5, r2
  404aec:	f8db 3008 	ldr.w	r3, [fp, #8]
  404af0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404af4:	eb04 0805 	add.w	r8, r4, r5
  404af8:	4598      	cmp	r8, r3
  404afa:	bfc8      	it	gt
  404afc:	3101      	addgt	r1, #1
  404afe:	f7ff ff1d 	bl	40493c <_Balloc>
  404b02:	f100 0914 	add.w	r9, r0, #20
  404b06:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404b0a:	45d1      	cmp	r9, sl
  404b0c:	9000      	str	r0, [sp, #0]
  404b0e:	d205      	bcs.n	404b1c <__multiply+0x4c>
  404b10:	464b      	mov	r3, r9
  404b12:	2100      	movs	r1, #0
  404b14:	f843 1b04 	str.w	r1, [r3], #4
  404b18:	459a      	cmp	sl, r3
  404b1a:	d8fb      	bhi.n	404b14 <__multiply+0x44>
  404b1c:	f106 0c14 	add.w	ip, r6, #20
  404b20:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404b24:	f10b 0b14 	add.w	fp, fp, #20
  404b28:	459c      	cmp	ip, r3
  404b2a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404b2e:	d24c      	bcs.n	404bca <__multiply+0xfa>
  404b30:	f8cd a004 	str.w	sl, [sp, #4]
  404b34:	469a      	mov	sl, r3
  404b36:	f8dc 5000 	ldr.w	r5, [ip]
  404b3a:	b2af      	uxth	r7, r5
  404b3c:	b1ef      	cbz	r7, 404b7a <__multiply+0xaa>
  404b3e:	2100      	movs	r1, #0
  404b40:	464d      	mov	r5, r9
  404b42:	465e      	mov	r6, fp
  404b44:	460c      	mov	r4, r1
  404b46:	f856 2b04 	ldr.w	r2, [r6], #4
  404b4a:	6828      	ldr	r0, [r5, #0]
  404b4c:	b293      	uxth	r3, r2
  404b4e:	b281      	uxth	r1, r0
  404b50:	fb07 1303 	mla	r3, r7, r3, r1
  404b54:	0c12      	lsrs	r2, r2, #16
  404b56:	0c01      	lsrs	r1, r0, #16
  404b58:	4423      	add	r3, r4
  404b5a:	fb07 1102 	mla	r1, r7, r2, r1
  404b5e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404b62:	b29b      	uxth	r3, r3
  404b64:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404b68:	45b6      	cmp	lr, r6
  404b6a:	f845 3b04 	str.w	r3, [r5], #4
  404b6e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404b72:	d8e8      	bhi.n	404b46 <__multiply+0x76>
  404b74:	602c      	str	r4, [r5, #0]
  404b76:	f8dc 5000 	ldr.w	r5, [ip]
  404b7a:	0c2d      	lsrs	r5, r5, #16
  404b7c:	d01d      	beq.n	404bba <__multiply+0xea>
  404b7e:	f8d9 3000 	ldr.w	r3, [r9]
  404b82:	4648      	mov	r0, r9
  404b84:	461c      	mov	r4, r3
  404b86:	4659      	mov	r1, fp
  404b88:	2200      	movs	r2, #0
  404b8a:	880e      	ldrh	r6, [r1, #0]
  404b8c:	0c24      	lsrs	r4, r4, #16
  404b8e:	fb05 4406 	mla	r4, r5, r6, r4
  404b92:	4422      	add	r2, r4
  404b94:	b29b      	uxth	r3, r3
  404b96:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404b9a:	f840 3b04 	str.w	r3, [r0], #4
  404b9e:	f851 3b04 	ldr.w	r3, [r1], #4
  404ba2:	6804      	ldr	r4, [r0, #0]
  404ba4:	0c1b      	lsrs	r3, r3, #16
  404ba6:	b2a6      	uxth	r6, r4
  404ba8:	fb05 6303 	mla	r3, r5, r3, r6
  404bac:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404bb0:	458e      	cmp	lr, r1
  404bb2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404bb6:	d8e8      	bhi.n	404b8a <__multiply+0xba>
  404bb8:	6003      	str	r3, [r0, #0]
  404bba:	f10c 0c04 	add.w	ip, ip, #4
  404bbe:	45e2      	cmp	sl, ip
  404bc0:	f109 0904 	add.w	r9, r9, #4
  404bc4:	d8b7      	bhi.n	404b36 <__multiply+0x66>
  404bc6:	f8dd a004 	ldr.w	sl, [sp, #4]
  404bca:	f1b8 0f00 	cmp.w	r8, #0
  404bce:	dd0b      	ble.n	404be8 <__multiply+0x118>
  404bd0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404bd4:	f1aa 0a04 	sub.w	sl, sl, #4
  404bd8:	b11b      	cbz	r3, 404be2 <__multiply+0x112>
  404bda:	e005      	b.n	404be8 <__multiply+0x118>
  404bdc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404be0:	b913      	cbnz	r3, 404be8 <__multiply+0x118>
  404be2:	f1b8 0801 	subs.w	r8, r8, #1
  404be6:	d1f9      	bne.n	404bdc <__multiply+0x10c>
  404be8:	9800      	ldr	r0, [sp, #0]
  404bea:	f8c0 8010 	str.w	r8, [r0, #16]
  404bee:	b003      	add	sp, #12
  404bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404bf4 <__pow5mult>:
  404bf4:	f012 0303 	ands.w	r3, r2, #3
  404bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404bfc:	4614      	mov	r4, r2
  404bfe:	4607      	mov	r7, r0
  404c00:	d12e      	bne.n	404c60 <__pow5mult+0x6c>
  404c02:	460d      	mov	r5, r1
  404c04:	10a4      	asrs	r4, r4, #2
  404c06:	d01c      	beq.n	404c42 <__pow5mult+0x4e>
  404c08:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404c0a:	b396      	cbz	r6, 404c72 <__pow5mult+0x7e>
  404c0c:	07e3      	lsls	r3, r4, #31
  404c0e:	f04f 0800 	mov.w	r8, #0
  404c12:	d406      	bmi.n	404c22 <__pow5mult+0x2e>
  404c14:	1064      	asrs	r4, r4, #1
  404c16:	d014      	beq.n	404c42 <__pow5mult+0x4e>
  404c18:	6830      	ldr	r0, [r6, #0]
  404c1a:	b1a8      	cbz	r0, 404c48 <__pow5mult+0x54>
  404c1c:	4606      	mov	r6, r0
  404c1e:	07e3      	lsls	r3, r4, #31
  404c20:	d5f8      	bpl.n	404c14 <__pow5mult+0x20>
  404c22:	4632      	mov	r2, r6
  404c24:	4629      	mov	r1, r5
  404c26:	4638      	mov	r0, r7
  404c28:	f7ff ff52 	bl	404ad0 <__multiply>
  404c2c:	b1b5      	cbz	r5, 404c5c <__pow5mult+0x68>
  404c2e:	686a      	ldr	r2, [r5, #4]
  404c30:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404c32:	1064      	asrs	r4, r4, #1
  404c34:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404c38:	6029      	str	r1, [r5, #0]
  404c3a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404c3e:	4605      	mov	r5, r0
  404c40:	d1ea      	bne.n	404c18 <__pow5mult+0x24>
  404c42:	4628      	mov	r0, r5
  404c44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c48:	4632      	mov	r2, r6
  404c4a:	4631      	mov	r1, r6
  404c4c:	4638      	mov	r0, r7
  404c4e:	f7ff ff3f 	bl	404ad0 <__multiply>
  404c52:	6030      	str	r0, [r6, #0]
  404c54:	f8c0 8000 	str.w	r8, [r0]
  404c58:	4606      	mov	r6, r0
  404c5a:	e7e0      	b.n	404c1e <__pow5mult+0x2a>
  404c5c:	4605      	mov	r5, r0
  404c5e:	e7d9      	b.n	404c14 <__pow5mult+0x20>
  404c60:	1e5a      	subs	r2, r3, #1
  404c62:	4d0b      	ldr	r5, [pc, #44]	; (404c90 <__pow5mult+0x9c>)
  404c64:	2300      	movs	r3, #0
  404c66:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404c6a:	f7ff fe97 	bl	40499c <__multadd>
  404c6e:	4605      	mov	r5, r0
  404c70:	e7c8      	b.n	404c04 <__pow5mult+0x10>
  404c72:	2101      	movs	r1, #1
  404c74:	4638      	mov	r0, r7
  404c76:	f7ff fe61 	bl	40493c <_Balloc>
  404c7a:	f240 2171 	movw	r1, #625	; 0x271
  404c7e:	2201      	movs	r2, #1
  404c80:	2300      	movs	r3, #0
  404c82:	6141      	str	r1, [r0, #20]
  404c84:	6102      	str	r2, [r0, #16]
  404c86:	4606      	mov	r6, r0
  404c88:	64b8      	str	r0, [r7, #72]	; 0x48
  404c8a:	6003      	str	r3, [r0, #0]
  404c8c:	e7be      	b.n	404c0c <__pow5mult+0x18>
  404c8e:	bf00      	nop
  404c90:	00406998 	.word	0x00406998

00404c94 <__lshift>:
  404c94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404c98:	4691      	mov	r9, r2
  404c9a:	690a      	ldr	r2, [r1, #16]
  404c9c:	688b      	ldr	r3, [r1, #8]
  404c9e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404ca2:	eb04 0802 	add.w	r8, r4, r2
  404ca6:	f108 0501 	add.w	r5, r8, #1
  404caa:	429d      	cmp	r5, r3
  404cac:	460e      	mov	r6, r1
  404cae:	4607      	mov	r7, r0
  404cb0:	6849      	ldr	r1, [r1, #4]
  404cb2:	dd04      	ble.n	404cbe <__lshift+0x2a>
  404cb4:	005b      	lsls	r3, r3, #1
  404cb6:	429d      	cmp	r5, r3
  404cb8:	f101 0101 	add.w	r1, r1, #1
  404cbc:	dcfa      	bgt.n	404cb4 <__lshift+0x20>
  404cbe:	4638      	mov	r0, r7
  404cc0:	f7ff fe3c 	bl	40493c <_Balloc>
  404cc4:	2c00      	cmp	r4, #0
  404cc6:	f100 0314 	add.w	r3, r0, #20
  404cca:	dd06      	ble.n	404cda <__lshift+0x46>
  404ccc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404cd0:	2100      	movs	r1, #0
  404cd2:	f843 1b04 	str.w	r1, [r3], #4
  404cd6:	429a      	cmp	r2, r3
  404cd8:	d1fb      	bne.n	404cd2 <__lshift+0x3e>
  404cda:	6934      	ldr	r4, [r6, #16]
  404cdc:	f106 0114 	add.w	r1, r6, #20
  404ce0:	f019 091f 	ands.w	r9, r9, #31
  404ce4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404ce8:	d01d      	beq.n	404d26 <__lshift+0x92>
  404cea:	f1c9 0c20 	rsb	ip, r9, #32
  404cee:	2200      	movs	r2, #0
  404cf0:	680c      	ldr	r4, [r1, #0]
  404cf2:	fa04 f409 	lsl.w	r4, r4, r9
  404cf6:	4314      	orrs	r4, r2
  404cf8:	f843 4b04 	str.w	r4, [r3], #4
  404cfc:	f851 2b04 	ldr.w	r2, [r1], #4
  404d00:	458e      	cmp	lr, r1
  404d02:	fa22 f20c 	lsr.w	r2, r2, ip
  404d06:	d8f3      	bhi.n	404cf0 <__lshift+0x5c>
  404d08:	601a      	str	r2, [r3, #0]
  404d0a:	b10a      	cbz	r2, 404d10 <__lshift+0x7c>
  404d0c:	f108 0502 	add.w	r5, r8, #2
  404d10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404d12:	6872      	ldr	r2, [r6, #4]
  404d14:	3d01      	subs	r5, #1
  404d16:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404d1a:	6105      	str	r5, [r0, #16]
  404d1c:	6031      	str	r1, [r6, #0]
  404d1e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404d22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404d26:	3b04      	subs	r3, #4
  404d28:	f851 2b04 	ldr.w	r2, [r1], #4
  404d2c:	f843 2f04 	str.w	r2, [r3, #4]!
  404d30:	458e      	cmp	lr, r1
  404d32:	d8f9      	bhi.n	404d28 <__lshift+0x94>
  404d34:	e7ec      	b.n	404d10 <__lshift+0x7c>
  404d36:	bf00      	nop

00404d38 <__mcmp>:
  404d38:	b430      	push	{r4, r5}
  404d3a:	690b      	ldr	r3, [r1, #16]
  404d3c:	4605      	mov	r5, r0
  404d3e:	6900      	ldr	r0, [r0, #16]
  404d40:	1ac0      	subs	r0, r0, r3
  404d42:	d10f      	bne.n	404d64 <__mcmp+0x2c>
  404d44:	009b      	lsls	r3, r3, #2
  404d46:	3514      	adds	r5, #20
  404d48:	3114      	adds	r1, #20
  404d4a:	4419      	add	r1, r3
  404d4c:	442b      	add	r3, r5
  404d4e:	e001      	b.n	404d54 <__mcmp+0x1c>
  404d50:	429d      	cmp	r5, r3
  404d52:	d207      	bcs.n	404d64 <__mcmp+0x2c>
  404d54:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404d58:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404d5c:	4294      	cmp	r4, r2
  404d5e:	d0f7      	beq.n	404d50 <__mcmp+0x18>
  404d60:	d302      	bcc.n	404d68 <__mcmp+0x30>
  404d62:	2001      	movs	r0, #1
  404d64:	bc30      	pop	{r4, r5}
  404d66:	4770      	bx	lr
  404d68:	f04f 30ff 	mov.w	r0, #4294967295
  404d6c:	e7fa      	b.n	404d64 <__mcmp+0x2c>
  404d6e:	bf00      	nop

00404d70 <__mdiff>:
  404d70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404d74:	690f      	ldr	r7, [r1, #16]
  404d76:	460e      	mov	r6, r1
  404d78:	6911      	ldr	r1, [r2, #16]
  404d7a:	1a7f      	subs	r7, r7, r1
  404d7c:	2f00      	cmp	r7, #0
  404d7e:	4690      	mov	r8, r2
  404d80:	d117      	bne.n	404db2 <__mdiff+0x42>
  404d82:	0089      	lsls	r1, r1, #2
  404d84:	f106 0514 	add.w	r5, r6, #20
  404d88:	f102 0e14 	add.w	lr, r2, #20
  404d8c:	186b      	adds	r3, r5, r1
  404d8e:	4471      	add	r1, lr
  404d90:	e001      	b.n	404d96 <__mdiff+0x26>
  404d92:	429d      	cmp	r5, r3
  404d94:	d25c      	bcs.n	404e50 <__mdiff+0xe0>
  404d96:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404d9a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404d9e:	42a2      	cmp	r2, r4
  404da0:	d0f7      	beq.n	404d92 <__mdiff+0x22>
  404da2:	d25e      	bcs.n	404e62 <__mdiff+0xf2>
  404da4:	4633      	mov	r3, r6
  404da6:	462c      	mov	r4, r5
  404da8:	4646      	mov	r6, r8
  404daa:	4675      	mov	r5, lr
  404dac:	4698      	mov	r8, r3
  404dae:	2701      	movs	r7, #1
  404db0:	e005      	b.n	404dbe <__mdiff+0x4e>
  404db2:	db58      	blt.n	404e66 <__mdiff+0xf6>
  404db4:	f106 0514 	add.w	r5, r6, #20
  404db8:	f108 0414 	add.w	r4, r8, #20
  404dbc:	2700      	movs	r7, #0
  404dbe:	6871      	ldr	r1, [r6, #4]
  404dc0:	f7ff fdbc 	bl	40493c <_Balloc>
  404dc4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404dc8:	6936      	ldr	r6, [r6, #16]
  404dca:	60c7      	str	r7, [r0, #12]
  404dcc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404dd0:	46a6      	mov	lr, r4
  404dd2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404dd6:	f100 0414 	add.w	r4, r0, #20
  404dda:	2300      	movs	r3, #0
  404ddc:	f85e 1b04 	ldr.w	r1, [lr], #4
  404de0:	f855 8b04 	ldr.w	r8, [r5], #4
  404de4:	b28a      	uxth	r2, r1
  404de6:	fa13 f388 	uxtah	r3, r3, r8
  404dea:	0c09      	lsrs	r1, r1, #16
  404dec:	1a9a      	subs	r2, r3, r2
  404dee:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404df2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404df6:	b292      	uxth	r2, r2
  404df8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404dfc:	45f4      	cmp	ip, lr
  404dfe:	f844 2b04 	str.w	r2, [r4], #4
  404e02:	ea4f 4323 	mov.w	r3, r3, asr #16
  404e06:	d8e9      	bhi.n	404ddc <__mdiff+0x6c>
  404e08:	42af      	cmp	r7, r5
  404e0a:	d917      	bls.n	404e3c <__mdiff+0xcc>
  404e0c:	46a4      	mov	ip, r4
  404e0e:	46ae      	mov	lr, r5
  404e10:	f85e 2b04 	ldr.w	r2, [lr], #4
  404e14:	fa13 f382 	uxtah	r3, r3, r2
  404e18:	1419      	asrs	r1, r3, #16
  404e1a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404e1e:	b29b      	uxth	r3, r3
  404e20:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404e24:	4577      	cmp	r7, lr
  404e26:	f84c 2b04 	str.w	r2, [ip], #4
  404e2a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404e2e:	d8ef      	bhi.n	404e10 <__mdiff+0xa0>
  404e30:	43ed      	mvns	r5, r5
  404e32:	442f      	add	r7, r5
  404e34:	f027 0703 	bic.w	r7, r7, #3
  404e38:	3704      	adds	r7, #4
  404e3a:	443c      	add	r4, r7
  404e3c:	3c04      	subs	r4, #4
  404e3e:	b922      	cbnz	r2, 404e4a <__mdiff+0xda>
  404e40:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404e44:	3e01      	subs	r6, #1
  404e46:	2b00      	cmp	r3, #0
  404e48:	d0fa      	beq.n	404e40 <__mdiff+0xd0>
  404e4a:	6106      	str	r6, [r0, #16]
  404e4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e50:	2100      	movs	r1, #0
  404e52:	f7ff fd73 	bl	40493c <_Balloc>
  404e56:	2201      	movs	r2, #1
  404e58:	2300      	movs	r3, #0
  404e5a:	6102      	str	r2, [r0, #16]
  404e5c:	6143      	str	r3, [r0, #20]
  404e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e62:	4674      	mov	r4, lr
  404e64:	e7ab      	b.n	404dbe <__mdiff+0x4e>
  404e66:	4633      	mov	r3, r6
  404e68:	f106 0414 	add.w	r4, r6, #20
  404e6c:	f102 0514 	add.w	r5, r2, #20
  404e70:	4616      	mov	r6, r2
  404e72:	2701      	movs	r7, #1
  404e74:	4698      	mov	r8, r3
  404e76:	e7a2      	b.n	404dbe <__mdiff+0x4e>

00404e78 <__d2b>:
  404e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e7c:	b082      	sub	sp, #8
  404e7e:	2101      	movs	r1, #1
  404e80:	461c      	mov	r4, r3
  404e82:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404e86:	4615      	mov	r5, r2
  404e88:	9e08      	ldr	r6, [sp, #32]
  404e8a:	f7ff fd57 	bl	40493c <_Balloc>
  404e8e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404e92:	4680      	mov	r8, r0
  404e94:	b10f      	cbz	r7, 404e9a <__d2b+0x22>
  404e96:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404e9a:	9401      	str	r4, [sp, #4]
  404e9c:	b31d      	cbz	r5, 404ee6 <__d2b+0x6e>
  404e9e:	a802      	add	r0, sp, #8
  404ea0:	f840 5d08 	str.w	r5, [r0, #-8]!
  404ea4:	f7ff fdda 	bl	404a5c <__lo0bits>
  404ea8:	2800      	cmp	r0, #0
  404eaa:	d134      	bne.n	404f16 <__d2b+0x9e>
  404eac:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404eb0:	f8c8 2014 	str.w	r2, [r8, #20]
  404eb4:	2b00      	cmp	r3, #0
  404eb6:	bf0c      	ite	eq
  404eb8:	2101      	moveq	r1, #1
  404eba:	2102      	movne	r1, #2
  404ebc:	f8c8 3018 	str.w	r3, [r8, #24]
  404ec0:	f8c8 1010 	str.w	r1, [r8, #16]
  404ec4:	b9df      	cbnz	r7, 404efe <__d2b+0x86>
  404ec6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404eca:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404ece:	6030      	str	r0, [r6, #0]
  404ed0:	6918      	ldr	r0, [r3, #16]
  404ed2:	f7ff fda3 	bl	404a1c <__hi0bits>
  404ed6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ed8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404edc:	6018      	str	r0, [r3, #0]
  404ede:	4640      	mov	r0, r8
  404ee0:	b002      	add	sp, #8
  404ee2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ee6:	a801      	add	r0, sp, #4
  404ee8:	f7ff fdb8 	bl	404a5c <__lo0bits>
  404eec:	9b01      	ldr	r3, [sp, #4]
  404eee:	f8c8 3014 	str.w	r3, [r8, #20]
  404ef2:	2101      	movs	r1, #1
  404ef4:	3020      	adds	r0, #32
  404ef6:	f8c8 1010 	str.w	r1, [r8, #16]
  404efa:	2f00      	cmp	r7, #0
  404efc:	d0e3      	beq.n	404ec6 <__d2b+0x4e>
  404efe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404f00:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404f04:	4407      	add	r7, r0
  404f06:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404f0a:	6037      	str	r7, [r6, #0]
  404f0c:	6018      	str	r0, [r3, #0]
  404f0e:	4640      	mov	r0, r8
  404f10:	b002      	add	sp, #8
  404f12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f16:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404f1a:	f1c0 0220 	rsb	r2, r0, #32
  404f1e:	fa03 f202 	lsl.w	r2, r3, r2
  404f22:	430a      	orrs	r2, r1
  404f24:	40c3      	lsrs	r3, r0
  404f26:	9301      	str	r3, [sp, #4]
  404f28:	f8c8 2014 	str.w	r2, [r8, #20]
  404f2c:	e7c2      	b.n	404eb4 <__d2b+0x3c>
  404f2e:	bf00      	nop

00404f30 <_sbrk_r>:
  404f30:	b538      	push	{r3, r4, r5, lr}
  404f32:	4c07      	ldr	r4, [pc, #28]	; (404f50 <_sbrk_r+0x20>)
  404f34:	2300      	movs	r3, #0
  404f36:	4605      	mov	r5, r0
  404f38:	4608      	mov	r0, r1
  404f3a:	6023      	str	r3, [r4, #0]
  404f3c:	f7fc f95e 	bl	4011fc <_sbrk>
  404f40:	1c43      	adds	r3, r0, #1
  404f42:	d000      	beq.n	404f46 <_sbrk_r+0x16>
  404f44:	bd38      	pop	{r3, r4, r5, pc}
  404f46:	6823      	ldr	r3, [r4, #0]
  404f48:	2b00      	cmp	r3, #0
  404f4a:	d0fb      	beq.n	404f44 <_sbrk_r+0x14>
  404f4c:	602b      	str	r3, [r5, #0]
  404f4e:	bd38      	pop	{r3, r4, r5, pc}
  404f50:	20400cc8 	.word	0x20400cc8
	...

00404f80 <strlen>:
  404f80:	f890 f000 	pld	[r0]
  404f84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404f88:	f020 0107 	bic.w	r1, r0, #7
  404f8c:	f06f 0c00 	mvn.w	ip, #0
  404f90:	f010 0407 	ands.w	r4, r0, #7
  404f94:	f891 f020 	pld	[r1, #32]
  404f98:	f040 8049 	bne.w	40502e <strlen+0xae>
  404f9c:	f04f 0400 	mov.w	r4, #0
  404fa0:	f06f 0007 	mvn.w	r0, #7
  404fa4:	e9d1 2300 	ldrd	r2, r3, [r1]
  404fa8:	f891 f040 	pld	[r1, #64]	; 0x40
  404fac:	f100 0008 	add.w	r0, r0, #8
  404fb0:	fa82 f24c 	uadd8	r2, r2, ip
  404fb4:	faa4 f28c 	sel	r2, r4, ip
  404fb8:	fa83 f34c 	uadd8	r3, r3, ip
  404fbc:	faa2 f38c 	sel	r3, r2, ip
  404fc0:	bb4b      	cbnz	r3, 405016 <strlen+0x96>
  404fc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404fc6:	fa82 f24c 	uadd8	r2, r2, ip
  404fca:	f100 0008 	add.w	r0, r0, #8
  404fce:	faa4 f28c 	sel	r2, r4, ip
  404fd2:	fa83 f34c 	uadd8	r3, r3, ip
  404fd6:	faa2 f38c 	sel	r3, r2, ip
  404fda:	b9e3      	cbnz	r3, 405016 <strlen+0x96>
  404fdc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404fe0:	fa82 f24c 	uadd8	r2, r2, ip
  404fe4:	f100 0008 	add.w	r0, r0, #8
  404fe8:	faa4 f28c 	sel	r2, r4, ip
  404fec:	fa83 f34c 	uadd8	r3, r3, ip
  404ff0:	faa2 f38c 	sel	r3, r2, ip
  404ff4:	b97b      	cbnz	r3, 405016 <strlen+0x96>
  404ff6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404ffa:	f101 0120 	add.w	r1, r1, #32
  404ffe:	fa82 f24c 	uadd8	r2, r2, ip
  405002:	f100 0008 	add.w	r0, r0, #8
  405006:	faa4 f28c 	sel	r2, r4, ip
  40500a:	fa83 f34c 	uadd8	r3, r3, ip
  40500e:	faa2 f38c 	sel	r3, r2, ip
  405012:	2b00      	cmp	r3, #0
  405014:	d0c6      	beq.n	404fa4 <strlen+0x24>
  405016:	2a00      	cmp	r2, #0
  405018:	bf04      	itt	eq
  40501a:	3004      	addeq	r0, #4
  40501c:	461a      	moveq	r2, r3
  40501e:	ba12      	rev	r2, r2
  405020:	fab2 f282 	clz	r2, r2
  405024:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405028:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40502c:	4770      	bx	lr
  40502e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405032:	f004 0503 	and.w	r5, r4, #3
  405036:	f1c4 0000 	rsb	r0, r4, #0
  40503a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40503e:	f014 0f04 	tst.w	r4, #4
  405042:	f891 f040 	pld	[r1, #64]	; 0x40
  405046:	fa0c f505 	lsl.w	r5, ip, r5
  40504a:	ea62 0205 	orn	r2, r2, r5
  40504e:	bf1c      	itt	ne
  405050:	ea63 0305 	ornne	r3, r3, r5
  405054:	4662      	movne	r2, ip
  405056:	f04f 0400 	mov.w	r4, #0
  40505a:	e7a9      	b.n	404fb0 <strlen+0x30>

0040505c <__ssprint_r>:
  40505c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405060:	6893      	ldr	r3, [r2, #8]
  405062:	b083      	sub	sp, #12
  405064:	4690      	mov	r8, r2
  405066:	2b00      	cmp	r3, #0
  405068:	d070      	beq.n	40514c <__ssprint_r+0xf0>
  40506a:	4682      	mov	sl, r0
  40506c:	460c      	mov	r4, r1
  40506e:	6817      	ldr	r7, [r2, #0]
  405070:	688d      	ldr	r5, [r1, #8]
  405072:	6808      	ldr	r0, [r1, #0]
  405074:	e042      	b.n	4050fc <__ssprint_r+0xa0>
  405076:	89a3      	ldrh	r3, [r4, #12]
  405078:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40507c:	d02e      	beq.n	4050dc <__ssprint_r+0x80>
  40507e:	6965      	ldr	r5, [r4, #20]
  405080:	6921      	ldr	r1, [r4, #16]
  405082:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405086:	eba0 0b01 	sub.w	fp, r0, r1
  40508a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40508e:	f10b 0001 	add.w	r0, fp, #1
  405092:	106d      	asrs	r5, r5, #1
  405094:	4430      	add	r0, r6
  405096:	42a8      	cmp	r0, r5
  405098:	462a      	mov	r2, r5
  40509a:	bf84      	itt	hi
  40509c:	4605      	movhi	r5, r0
  40509e:	462a      	movhi	r2, r5
  4050a0:	055b      	lsls	r3, r3, #21
  4050a2:	d538      	bpl.n	405116 <__ssprint_r+0xba>
  4050a4:	4611      	mov	r1, r2
  4050a6:	4650      	mov	r0, sl
  4050a8:	f7ff f8a0 	bl	4041ec <_malloc_r>
  4050ac:	2800      	cmp	r0, #0
  4050ae:	d03c      	beq.n	40512a <__ssprint_r+0xce>
  4050b0:	465a      	mov	r2, fp
  4050b2:	6921      	ldr	r1, [r4, #16]
  4050b4:	9001      	str	r0, [sp, #4]
  4050b6:	f7ff fb9b 	bl	4047f0 <memcpy>
  4050ba:	89a2      	ldrh	r2, [r4, #12]
  4050bc:	9b01      	ldr	r3, [sp, #4]
  4050be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4050c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4050c6:	81a2      	strh	r2, [r4, #12]
  4050c8:	eba5 020b 	sub.w	r2, r5, fp
  4050cc:	eb03 000b 	add.w	r0, r3, fp
  4050d0:	6165      	str	r5, [r4, #20]
  4050d2:	6123      	str	r3, [r4, #16]
  4050d4:	6020      	str	r0, [r4, #0]
  4050d6:	60a2      	str	r2, [r4, #8]
  4050d8:	4635      	mov	r5, r6
  4050da:	46b3      	mov	fp, r6
  4050dc:	465a      	mov	r2, fp
  4050de:	4649      	mov	r1, r9
  4050e0:	f000 fa18 	bl	405514 <memmove>
  4050e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4050e8:	68a2      	ldr	r2, [r4, #8]
  4050ea:	6820      	ldr	r0, [r4, #0]
  4050ec:	1b55      	subs	r5, r2, r5
  4050ee:	4458      	add	r0, fp
  4050f0:	1b9e      	subs	r6, r3, r6
  4050f2:	60a5      	str	r5, [r4, #8]
  4050f4:	6020      	str	r0, [r4, #0]
  4050f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4050fa:	b33e      	cbz	r6, 40514c <__ssprint_r+0xf0>
  4050fc:	687e      	ldr	r6, [r7, #4]
  4050fe:	463b      	mov	r3, r7
  405100:	3708      	adds	r7, #8
  405102:	2e00      	cmp	r6, #0
  405104:	d0fa      	beq.n	4050fc <__ssprint_r+0xa0>
  405106:	42ae      	cmp	r6, r5
  405108:	f8d3 9000 	ldr.w	r9, [r3]
  40510c:	46ab      	mov	fp, r5
  40510e:	d2b2      	bcs.n	405076 <__ssprint_r+0x1a>
  405110:	4635      	mov	r5, r6
  405112:	46b3      	mov	fp, r6
  405114:	e7e2      	b.n	4050dc <__ssprint_r+0x80>
  405116:	4650      	mov	r0, sl
  405118:	f000 fa60 	bl	4055dc <_realloc_r>
  40511c:	4603      	mov	r3, r0
  40511e:	2800      	cmp	r0, #0
  405120:	d1d2      	bne.n	4050c8 <__ssprint_r+0x6c>
  405122:	6921      	ldr	r1, [r4, #16]
  405124:	4650      	mov	r0, sl
  405126:	f000 f8f9 	bl	40531c <_free_r>
  40512a:	230c      	movs	r3, #12
  40512c:	f8ca 3000 	str.w	r3, [sl]
  405130:	89a3      	ldrh	r3, [r4, #12]
  405132:	2200      	movs	r2, #0
  405134:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405138:	f04f 30ff 	mov.w	r0, #4294967295
  40513c:	81a3      	strh	r3, [r4, #12]
  40513e:	f8c8 2008 	str.w	r2, [r8, #8]
  405142:	f8c8 2004 	str.w	r2, [r8, #4]
  405146:	b003      	add	sp, #12
  405148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40514c:	2000      	movs	r0, #0
  40514e:	f8c8 0004 	str.w	r0, [r8, #4]
  405152:	b003      	add	sp, #12
  405154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405158 <__register_exitproc>:
  405158:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40515c:	4d2c      	ldr	r5, [pc, #176]	; (405210 <__register_exitproc+0xb8>)
  40515e:	4606      	mov	r6, r0
  405160:	6828      	ldr	r0, [r5, #0]
  405162:	4698      	mov	r8, r3
  405164:	460f      	mov	r7, r1
  405166:	4691      	mov	r9, r2
  405168:	f7ff f83c 	bl	4041e4 <__retarget_lock_acquire_recursive>
  40516c:	4b29      	ldr	r3, [pc, #164]	; (405214 <__register_exitproc+0xbc>)
  40516e:	681c      	ldr	r4, [r3, #0]
  405170:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405174:	2b00      	cmp	r3, #0
  405176:	d03e      	beq.n	4051f6 <__register_exitproc+0x9e>
  405178:	685a      	ldr	r2, [r3, #4]
  40517a:	2a1f      	cmp	r2, #31
  40517c:	dc1c      	bgt.n	4051b8 <__register_exitproc+0x60>
  40517e:	f102 0e01 	add.w	lr, r2, #1
  405182:	b176      	cbz	r6, 4051a2 <__register_exitproc+0x4a>
  405184:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405188:	2401      	movs	r4, #1
  40518a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40518e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405192:	4094      	lsls	r4, r2
  405194:	4320      	orrs	r0, r4
  405196:	2e02      	cmp	r6, #2
  405198:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40519c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4051a0:	d023      	beq.n	4051ea <__register_exitproc+0x92>
  4051a2:	3202      	adds	r2, #2
  4051a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4051a8:	6828      	ldr	r0, [r5, #0]
  4051aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4051ae:	f7ff f81b 	bl	4041e8 <__retarget_lock_release_recursive>
  4051b2:	2000      	movs	r0, #0
  4051b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4051b8:	4b17      	ldr	r3, [pc, #92]	; (405218 <__register_exitproc+0xc0>)
  4051ba:	b30b      	cbz	r3, 405200 <__register_exitproc+0xa8>
  4051bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4051c0:	f3af 8000 	nop.w
  4051c4:	4603      	mov	r3, r0
  4051c6:	b1d8      	cbz	r0, 405200 <__register_exitproc+0xa8>
  4051c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4051cc:	6002      	str	r2, [r0, #0]
  4051ce:	2100      	movs	r1, #0
  4051d0:	6041      	str	r1, [r0, #4]
  4051d2:	460a      	mov	r2, r1
  4051d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4051d8:	f04f 0e01 	mov.w	lr, #1
  4051dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4051e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4051e4:	2e00      	cmp	r6, #0
  4051e6:	d0dc      	beq.n	4051a2 <__register_exitproc+0x4a>
  4051e8:	e7cc      	b.n	405184 <__register_exitproc+0x2c>
  4051ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4051ee:	430c      	orrs	r4, r1
  4051f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4051f4:	e7d5      	b.n	4051a2 <__register_exitproc+0x4a>
  4051f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4051fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4051fe:	e7bb      	b.n	405178 <__register_exitproc+0x20>
  405200:	6828      	ldr	r0, [r5, #0]
  405202:	f7fe fff1 	bl	4041e8 <__retarget_lock_release_recursive>
  405206:	f04f 30ff 	mov.w	r0, #4294967295
  40520a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40520e:	bf00      	nop
  405210:	20400450 	.word	0x20400450
  405214:	00406830 	.word	0x00406830
  405218:	00000000 	.word	0x00000000

0040521c <_calloc_r>:
  40521c:	b510      	push	{r4, lr}
  40521e:	fb02 f101 	mul.w	r1, r2, r1
  405222:	f7fe ffe3 	bl	4041ec <_malloc_r>
  405226:	4604      	mov	r4, r0
  405228:	b1d8      	cbz	r0, 405262 <_calloc_r+0x46>
  40522a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40522e:	f022 0203 	bic.w	r2, r2, #3
  405232:	3a04      	subs	r2, #4
  405234:	2a24      	cmp	r2, #36	; 0x24
  405236:	d818      	bhi.n	40526a <_calloc_r+0x4e>
  405238:	2a13      	cmp	r2, #19
  40523a:	d914      	bls.n	405266 <_calloc_r+0x4a>
  40523c:	2300      	movs	r3, #0
  40523e:	2a1b      	cmp	r2, #27
  405240:	6003      	str	r3, [r0, #0]
  405242:	6043      	str	r3, [r0, #4]
  405244:	d916      	bls.n	405274 <_calloc_r+0x58>
  405246:	2a24      	cmp	r2, #36	; 0x24
  405248:	6083      	str	r3, [r0, #8]
  40524a:	60c3      	str	r3, [r0, #12]
  40524c:	bf11      	iteee	ne
  40524e:	f100 0210 	addne.w	r2, r0, #16
  405252:	6103      	streq	r3, [r0, #16]
  405254:	6143      	streq	r3, [r0, #20]
  405256:	f100 0218 	addeq.w	r2, r0, #24
  40525a:	2300      	movs	r3, #0
  40525c:	6013      	str	r3, [r2, #0]
  40525e:	6053      	str	r3, [r2, #4]
  405260:	6093      	str	r3, [r2, #8]
  405262:	4620      	mov	r0, r4
  405264:	bd10      	pop	{r4, pc}
  405266:	4602      	mov	r2, r0
  405268:	e7f7      	b.n	40525a <_calloc_r+0x3e>
  40526a:	2100      	movs	r1, #0
  40526c:	f7fc fd20 	bl	401cb0 <memset>
  405270:	4620      	mov	r0, r4
  405272:	bd10      	pop	{r4, pc}
  405274:	f100 0208 	add.w	r2, r0, #8
  405278:	e7ef      	b.n	40525a <_calloc_r+0x3e>
  40527a:	bf00      	nop

0040527c <_malloc_trim_r>:
  40527c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40527e:	4f24      	ldr	r7, [pc, #144]	; (405310 <_malloc_trim_r+0x94>)
  405280:	460c      	mov	r4, r1
  405282:	4606      	mov	r6, r0
  405284:	f7ff fb4e 	bl	404924 <__malloc_lock>
  405288:	68bb      	ldr	r3, [r7, #8]
  40528a:	685d      	ldr	r5, [r3, #4]
  40528c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405290:	310f      	adds	r1, #15
  405292:	f025 0503 	bic.w	r5, r5, #3
  405296:	4429      	add	r1, r5
  405298:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40529c:	f021 010f 	bic.w	r1, r1, #15
  4052a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4052a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4052a8:	db07      	blt.n	4052ba <_malloc_trim_r+0x3e>
  4052aa:	2100      	movs	r1, #0
  4052ac:	4630      	mov	r0, r6
  4052ae:	f7ff fe3f 	bl	404f30 <_sbrk_r>
  4052b2:	68bb      	ldr	r3, [r7, #8]
  4052b4:	442b      	add	r3, r5
  4052b6:	4298      	cmp	r0, r3
  4052b8:	d004      	beq.n	4052c4 <_malloc_trim_r+0x48>
  4052ba:	4630      	mov	r0, r6
  4052bc:	f7ff fb38 	bl	404930 <__malloc_unlock>
  4052c0:	2000      	movs	r0, #0
  4052c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4052c4:	4261      	negs	r1, r4
  4052c6:	4630      	mov	r0, r6
  4052c8:	f7ff fe32 	bl	404f30 <_sbrk_r>
  4052cc:	3001      	adds	r0, #1
  4052ce:	d00d      	beq.n	4052ec <_malloc_trim_r+0x70>
  4052d0:	4b10      	ldr	r3, [pc, #64]	; (405314 <_malloc_trim_r+0x98>)
  4052d2:	68ba      	ldr	r2, [r7, #8]
  4052d4:	6819      	ldr	r1, [r3, #0]
  4052d6:	1b2d      	subs	r5, r5, r4
  4052d8:	f045 0501 	orr.w	r5, r5, #1
  4052dc:	4630      	mov	r0, r6
  4052de:	1b09      	subs	r1, r1, r4
  4052e0:	6055      	str	r5, [r2, #4]
  4052e2:	6019      	str	r1, [r3, #0]
  4052e4:	f7ff fb24 	bl	404930 <__malloc_unlock>
  4052e8:	2001      	movs	r0, #1
  4052ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4052ec:	2100      	movs	r1, #0
  4052ee:	4630      	mov	r0, r6
  4052f0:	f7ff fe1e 	bl	404f30 <_sbrk_r>
  4052f4:	68ba      	ldr	r2, [r7, #8]
  4052f6:	1a83      	subs	r3, r0, r2
  4052f8:	2b0f      	cmp	r3, #15
  4052fa:	ddde      	ble.n	4052ba <_malloc_trim_r+0x3e>
  4052fc:	4c06      	ldr	r4, [pc, #24]	; (405318 <_malloc_trim_r+0x9c>)
  4052fe:	4905      	ldr	r1, [pc, #20]	; (405314 <_malloc_trim_r+0x98>)
  405300:	6824      	ldr	r4, [r4, #0]
  405302:	f043 0301 	orr.w	r3, r3, #1
  405306:	1b00      	subs	r0, r0, r4
  405308:	6053      	str	r3, [r2, #4]
  40530a:	6008      	str	r0, [r1, #0]
  40530c:	e7d5      	b.n	4052ba <_malloc_trim_r+0x3e>
  40530e:	bf00      	nop
  405310:	20400454 	.word	0x20400454
  405314:	20400c6c 	.word	0x20400c6c
  405318:	2040085c 	.word	0x2040085c

0040531c <_free_r>:
  40531c:	2900      	cmp	r1, #0
  40531e:	d044      	beq.n	4053aa <_free_r+0x8e>
  405320:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405324:	460d      	mov	r5, r1
  405326:	4680      	mov	r8, r0
  405328:	f7ff fafc 	bl	404924 <__malloc_lock>
  40532c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405330:	4969      	ldr	r1, [pc, #420]	; (4054d8 <_free_r+0x1bc>)
  405332:	f027 0301 	bic.w	r3, r7, #1
  405336:	f1a5 0408 	sub.w	r4, r5, #8
  40533a:	18e2      	adds	r2, r4, r3
  40533c:	688e      	ldr	r6, [r1, #8]
  40533e:	6850      	ldr	r0, [r2, #4]
  405340:	42b2      	cmp	r2, r6
  405342:	f020 0003 	bic.w	r0, r0, #3
  405346:	d05e      	beq.n	405406 <_free_r+0xea>
  405348:	07fe      	lsls	r6, r7, #31
  40534a:	6050      	str	r0, [r2, #4]
  40534c:	d40b      	bmi.n	405366 <_free_r+0x4a>
  40534e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405352:	1be4      	subs	r4, r4, r7
  405354:	f101 0e08 	add.w	lr, r1, #8
  405358:	68a5      	ldr	r5, [r4, #8]
  40535a:	4575      	cmp	r5, lr
  40535c:	443b      	add	r3, r7
  40535e:	d06d      	beq.n	40543c <_free_r+0x120>
  405360:	68e7      	ldr	r7, [r4, #12]
  405362:	60ef      	str	r7, [r5, #12]
  405364:	60bd      	str	r5, [r7, #8]
  405366:	1815      	adds	r5, r2, r0
  405368:	686d      	ldr	r5, [r5, #4]
  40536a:	07ed      	lsls	r5, r5, #31
  40536c:	d53e      	bpl.n	4053ec <_free_r+0xd0>
  40536e:	f043 0201 	orr.w	r2, r3, #1
  405372:	6062      	str	r2, [r4, #4]
  405374:	50e3      	str	r3, [r4, r3]
  405376:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40537a:	d217      	bcs.n	4053ac <_free_r+0x90>
  40537c:	08db      	lsrs	r3, r3, #3
  40537e:	1c58      	adds	r0, r3, #1
  405380:	109a      	asrs	r2, r3, #2
  405382:	684d      	ldr	r5, [r1, #4]
  405384:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405388:	60a7      	str	r7, [r4, #8]
  40538a:	2301      	movs	r3, #1
  40538c:	4093      	lsls	r3, r2
  40538e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405392:	432b      	orrs	r3, r5
  405394:	3a08      	subs	r2, #8
  405396:	60e2      	str	r2, [r4, #12]
  405398:	604b      	str	r3, [r1, #4]
  40539a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40539e:	60fc      	str	r4, [r7, #12]
  4053a0:	4640      	mov	r0, r8
  4053a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4053a6:	f7ff bac3 	b.w	404930 <__malloc_unlock>
  4053aa:	4770      	bx	lr
  4053ac:	0a5a      	lsrs	r2, r3, #9
  4053ae:	2a04      	cmp	r2, #4
  4053b0:	d852      	bhi.n	405458 <_free_r+0x13c>
  4053b2:	099a      	lsrs	r2, r3, #6
  4053b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4053b8:	00ff      	lsls	r7, r7, #3
  4053ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4053be:	19c8      	adds	r0, r1, r7
  4053c0:	59ca      	ldr	r2, [r1, r7]
  4053c2:	3808      	subs	r0, #8
  4053c4:	4290      	cmp	r0, r2
  4053c6:	d04f      	beq.n	405468 <_free_r+0x14c>
  4053c8:	6851      	ldr	r1, [r2, #4]
  4053ca:	f021 0103 	bic.w	r1, r1, #3
  4053ce:	428b      	cmp	r3, r1
  4053d0:	d232      	bcs.n	405438 <_free_r+0x11c>
  4053d2:	6892      	ldr	r2, [r2, #8]
  4053d4:	4290      	cmp	r0, r2
  4053d6:	d1f7      	bne.n	4053c8 <_free_r+0xac>
  4053d8:	68c3      	ldr	r3, [r0, #12]
  4053da:	60a0      	str	r0, [r4, #8]
  4053dc:	60e3      	str	r3, [r4, #12]
  4053de:	609c      	str	r4, [r3, #8]
  4053e0:	60c4      	str	r4, [r0, #12]
  4053e2:	4640      	mov	r0, r8
  4053e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4053e8:	f7ff baa2 	b.w	404930 <__malloc_unlock>
  4053ec:	6895      	ldr	r5, [r2, #8]
  4053ee:	4f3b      	ldr	r7, [pc, #236]	; (4054dc <_free_r+0x1c0>)
  4053f0:	42bd      	cmp	r5, r7
  4053f2:	4403      	add	r3, r0
  4053f4:	d040      	beq.n	405478 <_free_r+0x15c>
  4053f6:	68d0      	ldr	r0, [r2, #12]
  4053f8:	60e8      	str	r0, [r5, #12]
  4053fa:	f043 0201 	orr.w	r2, r3, #1
  4053fe:	6085      	str	r5, [r0, #8]
  405400:	6062      	str	r2, [r4, #4]
  405402:	50e3      	str	r3, [r4, r3]
  405404:	e7b7      	b.n	405376 <_free_r+0x5a>
  405406:	07ff      	lsls	r7, r7, #31
  405408:	4403      	add	r3, r0
  40540a:	d407      	bmi.n	40541c <_free_r+0x100>
  40540c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405410:	1aa4      	subs	r4, r4, r2
  405412:	4413      	add	r3, r2
  405414:	68a0      	ldr	r0, [r4, #8]
  405416:	68e2      	ldr	r2, [r4, #12]
  405418:	60c2      	str	r2, [r0, #12]
  40541a:	6090      	str	r0, [r2, #8]
  40541c:	4a30      	ldr	r2, [pc, #192]	; (4054e0 <_free_r+0x1c4>)
  40541e:	6812      	ldr	r2, [r2, #0]
  405420:	f043 0001 	orr.w	r0, r3, #1
  405424:	4293      	cmp	r3, r2
  405426:	6060      	str	r0, [r4, #4]
  405428:	608c      	str	r4, [r1, #8]
  40542a:	d3b9      	bcc.n	4053a0 <_free_r+0x84>
  40542c:	4b2d      	ldr	r3, [pc, #180]	; (4054e4 <_free_r+0x1c8>)
  40542e:	4640      	mov	r0, r8
  405430:	6819      	ldr	r1, [r3, #0]
  405432:	f7ff ff23 	bl	40527c <_malloc_trim_r>
  405436:	e7b3      	b.n	4053a0 <_free_r+0x84>
  405438:	4610      	mov	r0, r2
  40543a:	e7cd      	b.n	4053d8 <_free_r+0xbc>
  40543c:	1811      	adds	r1, r2, r0
  40543e:	6849      	ldr	r1, [r1, #4]
  405440:	07c9      	lsls	r1, r1, #31
  405442:	d444      	bmi.n	4054ce <_free_r+0x1b2>
  405444:	6891      	ldr	r1, [r2, #8]
  405446:	68d2      	ldr	r2, [r2, #12]
  405448:	60ca      	str	r2, [r1, #12]
  40544a:	4403      	add	r3, r0
  40544c:	f043 0001 	orr.w	r0, r3, #1
  405450:	6091      	str	r1, [r2, #8]
  405452:	6060      	str	r0, [r4, #4]
  405454:	50e3      	str	r3, [r4, r3]
  405456:	e7a3      	b.n	4053a0 <_free_r+0x84>
  405458:	2a14      	cmp	r2, #20
  40545a:	d816      	bhi.n	40548a <_free_r+0x16e>
  40545c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405460:	00ff      	lsls	r7, r7, #3
  405462:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405466:	e7aa      	b.n	4053be <_free_r+0xa2>
  405468:	10aa      	asrs	r2, r5, #2
  40546a:	2301      	movs	r3, #1
  40546c:	684d      	ldr	r5, [r1, #4]
  40546e:	4093      	lsls	r3, r2
  405470:	432b      	orrs	r3, r5
  405472:	604b      	str	r3, [r1, #4]
  405474:	4603      	mov	r3, r0
  405476:	e7b0      	b.n	4053da <_free_r+0xbe>
  405478:	f043 0201 	orr.w	r2, r3, #1
  40547c:	614c      	str	r4, [r1, #20]
  40547e:	610c      	str	r4, [r1, #16]
  405480:	60e5      	str	r5, [r4, #12]
  405482:	60a5      	str	r5, [r4, #8]
  405484:	6062      	str	r2, [r4, #4]
  405486:	50e3      	str	r3, [r4, r3]
  405488:	e78a      	b.n	4053a0 <_free_r+0x84>
  40548a:	2a54      	cmp	r2, #84	; 0x54
  40548c:	d806      	bhi.n	40549c <_free_r+0x180>
  40548e:	0b1a      	lsrs	r2, r3, #12
  405490:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405494:	00ff      	lsls	r7, r7, #3
  405496:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40549a:	e790      	b.n	4053be <_free_r+0xa2>
  40549c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4054a0:	d806      	bhi.n	4054b0 <_free_r+0x194>
  4054a2:	0bda      	lsrs	r2, r3, #15
  4054a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4054a8:	00ff      	lsls	r7, r7, #3
  4054aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4054ae:	e786      	b.n	4053be <_free_r+0xa2>
  4054b0:	f240 5054 	movw	r0, #1364	; 0x554
  4054b4:	4282      	cmp	r2, r0
  4054b6:	d806      	bhi.n	4054c6 <_free_r+0x1aa>
  4054b8:	0c9a      	lsrs	r2, r3, #18
  4054ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4054be:	00ff      	lsls	r7, r7, #3
  4054c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4054c4:	e77b      	b.n	4053be <_free_r+0xa2>
  4054c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4054ca:	257e      	movs	r5, #126	; 0x7e
  4054cc:	e777      	b.n	4053be <_free_r+0xa2>
  4054ce:	f043 0101 	orr.w	r1, r3, #1
  4054d2:	6061      	str	r1, [r4, #4]
  4054d4:	6013      	str	r3, [r2, #0]
  4054d6:	e763      	b.n	4053a0 <_free_r+0x84>
  4054d8:	20400454 	.word	0x20400454
  4054dc:	2040045c 	.word	0x2040045c
  4054e0:	20400860 	.word	0x20400860
  4054e4:	20400c9c 	.word	0x20400c9c

004054e8 <__ascii_mbtowc>:
  4054e8:	b082      	sub	sp, #8
  4054ea:	b149      	cbz	r1, 405500 <__ascii_mbtowc+0x18>
  4054ec:	b15a      	cbz	r2, 405506 <__ascii_mbtowc+0x1e>
  4054ee:	b16b      	cbz	r3, 40550c <__ascii_mbtowc+0x24>
  4054f0:	7813      	ldrb	r3, [r2, #0]
  4054f2:	600b      	str	r3, [r1, #0]
  4054f4:	7812      	ldrb	r2, [r2, #0]
  4054f6:	1c10      	adds	r0, r2, #0
  4054f8:	bf18      	it	ne
  4054fa:	2001      	movne	r0, #1
  4054fc:	b002      	add	sp, #8
  4054fe:	4770      	bx	lr
  405500:	a901      	add	r1, sp, #4
  405502:	2a00      	cmp	r2, #0
  405504:	d1f3      	bne.n	4054ee <__ascii_mbtowc+0x6>
  405506:	4610      	mov	r0, r2
  405508:	b002      	add	sp, #8
  40550a:	4770      	bx	lr
  40550c:	f06f 0001 	mvn.w	r0, #1
  405510:	e7f4      	b.n	4054fc <__ascii_mbtowc+0x14>
  405512:	bf00      	nop

00405514 <memmove>:
  405514:	4288      	cmp	r0, r1
  405516:	b5f0      	push	{r4, r5, r6, r7, lr}
  405518:	d90d      	bls.n	405536 <memmove+0x22>
  40551a:	188b      	adds	r3, r1, r2
  40551c:	4298      	cmp	r0, r3
  40551e:	d20a      	bcs.n	405536 <memmove+0x22>
  405520:	1884      	adds	r4, r0, r2
  405522:	2a00      	cmp	r2, #0
  405524:	d051      	beq.n	4055ca <memmove+0xb6>
  405526:	4622      	mov	r2, r4
  405528:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40552c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405530:	4299      	cmp	r1, r3
  405532:	d1f9      	bne.n	405528 <memmove+0x14>
  405534:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405536:	2a0f      	cmp	r2, #15
  405538:	d948      	bls.n	4055cc <memmove+0xb8>
  40553a:	ea41 0300 	orr.w	r3, r1, r0
  40553e:	079b      	lsls	r3, r3, #30
  405540:	d146      	bne.n	4055d0 <memmove+0xbc>
  405542:	f100 0410 	add.w	r4, r0, #16
  405546:	f101 0310 	add.w	r3, r1, #16
  40554a:	4615      	mov	r5, r2
  40554c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405550:	f844 6c10 	str.w	r6, [r4, #-16]
  405554:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405558:	f844 6c0c 	str.w	r6, [r4, #-12]
  40555c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405560:	f844 6c08 	str.w	r6, [r4, #-8]
  405564:	3d10      	subs	r5, #16
  405566:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40556a:	f844 6c04 	str.w	r6, [r4, #-4]
  40556e:	2d0f      	cmp	r5, #15
  405570:	f103 0310 	add.w	r3, r3, #16
  405574:	f104 0410 	add.w	r4, r4, #16
  405578:	d8e8      	bhi.n	40554c <memmove+0x38>
  40557a:	f1a2 0310 	sub.w	r3, r2, #16
  40557e:	f023 030f 	bic.w	r3, r3, #15
  405582:	f002 0e0f 	and.w	lr, r2, #15
  405586:	3310      	adds	r3, #16
  405588:	f1be 0f03 	cmp.w	lr, #3
  40558c:	4419      	add	r1, r3
  40558e:	4403      	add	r3, r0
  405590:	d921      	bls.n	4055d6 <memmove+0xc2>
  405592:	1f1e      	subs	r6, r3, #4
  405594:	460d      	mov	r5, r1
  405596:	4674      	mov	r4, lr
  405598:	3c04      	subs	r4, #4
  40559a:	f855 7b04 	ldr.w	r7, [r5], #4
  40559e:	f846 7f04 	str.w	r7, [r6, #4]!
  4055a2:	2c03      	cmp	r4, #3
  4055a4:	d8f8      	bhi.n	405598 <memmove+0x84>
  4055a6:	f1ae 0404 	sub.w	r4, lr, #4
  4055aa:	f024 0403 	bic.w	r4, r4, #3
  4055ae:	3404      	adds	r4, #4
  4055b0:	4421      	add	r1, r4
  4055b2:	4423      	add	r3, r4
  4055b4:	f002 0203 	and.w	r2, r2, #3
  4055b8:	b162      	cbz	r2, 4055d4 <memmove+0xc0>
  4055ba:	3b01      	subs	r3, #1
  4055bc:	440a      	add	r2, r1
  4055be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4055c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4055c6:	428a      	cmp	r2, r1
  4055c8:	d1f9      	bne.n	4055be <memmove+0xaa>
  4055ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4055cc:	4603      	mov	r3, r0
  4055ce:	e7f3      	b.n	4055b8 <memmove+0xa4>
  4055d0:	4603      	mov	r3, r0
  4055d2:	e7f2      	b.n	4055ba <memmove+0xa6>
  4055d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4055d6:	4672      	mov	r2, lr
  4055d8:	e7ee      	b.n	4055b8 <memmove+0xa4>
  4055da:	bf00      	nop

004055dc <_realloc_r>:
  4055dc:	2900      	cmp	r1, #0
  4055de:	f000 8095 	beq.w	40570c <_realloc_r+0x130>
  4055e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4055e6:	460d      	mov	r5, r1
  4055e8:	4616      	mov	r6, r2
  4055ea:	b083      	sub	sp, #12
  4055ec:	4680      	mov	r8, r0
  4055ee:	f106 070b 	add.w	r7, r6, #11
  4055f2:	f7ff f997 	bl	404924 <__malloc_lock>
  4055f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4055fa:	2f16      	cmp	r7, #22
  4055fc:	f02e 0403 	bic.w	r4, lr, #3
  405600:	f1a5 0908 	sub.w	r9, r5, #8
  405604:	d83c      	bhi.n	405680 <_realloc_r+0xa4>
  405606:	2210      	movs	r2, #16
  405608:	4617      	mov	r7, r2
  40560a:	42be      	cmp	r6, r7
  40560c:	d83d      	bhi.n	40568a <_realloc_r+0xae>
  40560e:	4294      	cmp	r4, r2
  405610:	da43      	bge.n	40569a <_realloc_r+0xbe>
  405612:	4bc4      	ldr	r3, [pc, #784]	; (405924 <_realloc_r+0x348>)
  405614:	6899      	ldr	r1, [r3, #8]
  405616:	eb09 0004 	add.w	r0, r9, r4
  40561a:	4288      	cmp	r0, r1
  40561c:	f000 80b4 	beq.w	405788 <_realloc_r+0x1ac>
  405620:	6843      	ldr	r3, [r0, #4]
  405622:	f023 0101 	bic.w	r1, r3, #1
  405626:	4401      	add	r1, r0
  405628:	6849      	ldr	r1, [r1, #4]
  40562a:	07c9      	lsls	r1, r1, #31
  40562c:	d54c      	bpl.n	4056c8 <_realloc_r+0xec>
  40562e:	f01e 0f01 	tst.w	lr, #1
  405632:	f000 809b 	beq.w	40576c <_realloc_r+0x190>
  405636:	4631      	mov	r1, r6
  405638:	4640      	mov	r0, r8
  40563a:	f7fe fdd7 	bl	4041ec <_malloc_r>
  40563e:	4606      	mov	r6, r0
  405640:	2800      	cmp	r0, #0
  405642:	d03a      	beq.n	4056ba <_realloc_r+0xde>
  405644:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405648:	f023 0301 	bic.w	r3, r3, #1
  40564c:	444b      	add	r3, r9
  40564e:	f1a0 0208 	sub.w	r2, r0, #8
  405652:	429a      	cmp	r2, r3
  405654:	f000 8121 	beq.w	40589a <_realloc_r+0x2be>
  405658:	1f22      	subs	r2, r4, #4
  40565a:	2a24      	cmp	r2, #36	; 0x24
  40565c:	f200 8107 	bhi.w	40586e <_realloc_r+0x292>
  405660:	2a13      	cmp	r2, #19
  405662:	f200 80db 	bhi.w	40581c <_realloc_r+0x240>
  405666:	4603      	mov	r3, r0
  405668:	462a      	mov	r2, r5
  40566a:	6811      	ldr	r1, [r2, #0]
  40566c:	6019      	str	r1, [r3, #0]
  40566e:	6851      	ldr	r1, [r2, #4]
  405670:	6059      	str	r1, [r3, #4]
  405672:	6892      	ldr	r2, [r2, #8]
  405674:	609a      	str	r2, [r3, #8]
  405676:	4629      	mov	r1, r5
  405678:	4640      	mov	r0, r8
  40567a:	f7ff fe4f 	bl	40531c <_free_r>
  40567e:	e01c      	b.n	4056ba <_realloc_r+0xde>
  405680:	f027 0707 	bic.w	r7, r7, #7
  405684:	2f00      	cmp	r7, #0
  405686:	463a      	mov	r2, r7
  405688:	dabf      	bge.n	40560a <_realloc_r+0x2e>
  40568a:	2600      	movs	r6, #0
  40568c:	230c      	movs	r3, #12
  40568e:	4630      	mov	r0, r6
  405690:	f8c8 3000 	str.w	r3, [r8]
  405694:	b003      	add	sp, #12
  405696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40569a:	462e      	mov	r6, r5
  40569c:	1be3      	subs	r3, r4, r7
  40569e:	2b0f      	cmp	r3, #15
  4056a0:	d81e      	bhi.n	4056e0 <_realloc_r+0x104>
  4056a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4056a6:	f003 0301 	and.w	r3, r3, #1
  4056aa:	4323      	orrs	r3, r4
  4056ac:	444c      	add	r4, r9
  4056ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4056b2:	6863      	ldr	r3, [r4, #4]
  4056b4:	f043 0301 	orr.w	r3, r3, #1
  4056b8:	6063      	str	r3, [r4, #4]
  4056ba:	4640      	mov	r0, r8
  4056bc:	f7ff f938 	bl	404930 <__malloc_unlock>
  4056c0:	4630      	mov	r0, r6
  4056c2:	b003      	add	sp, #12
  4056c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4056c8:	f023 0303 	bic.w	r3, r3, #3
  4056cc:	18e1      	adds	r1, r4, r3
  4056ce:	4291      	cmp	r1, r2
  4056d0:	db1f      	blt.n	405712 <_realloc_r+0x136>
  4056d2:	68c3      	ldr	r3, [r0, #12]
  4056d4:	6882      	ldr	r2, [r0, #8]
  4056d6:	462e      	mov	r6, r5
  4056d8:	60d3      	str	r3, [r2, #12]
  4056da:	460c      	mov	r4, r1
  4056dc:	609a      	str	r2, [r3, #8]
  4056de:	e7dd      	b.n	40569c <_realloc_r+0xc0>
  4056e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4056e4:	eb09 0107 	add.w	r1, r9, r7
  4056e8:	f002 0201 	and.w	r2, r2, #1
  4056ec:	444c      	add	r4, r9
  4056ee:	f043 0301 	orr.w	r3, r3, #1
  4056f2:	4317      	orrs	r7, r2
  4056f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4056f8:	604b      	str	r3, [r1, #4]
  4056fa:	6863      	ldr	r3, [r4, #4]
  4056fc:	f043 0301 	orr.w	r3, r3, #1
  405700:	3108      	adds	r1, #8
  405702:	6063      	str	r3, [r4, #4]
  405704:	4640      	mov	r0, r8
  405706:	f7ff fe09 	bl	40531c <_free_r>
  40570a:	e7d6      	b.n	4056ba <_realloc_r+0xde>
  40570c:	4611      	mov	r1, r2
  40570e:	f7fe bd6d 	b.w	4041ec <_malloc_r>
  405712:	f01e 0f01 	tst.w	lr, #1
  405716:	d18e      	bne.n	405636 <_realloc_r+0x5a>
  405718:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40571c:	eba9 0a01 	sub.w	sl, r9, r1
  405720:	f8da 1004 	ldr.w	r1, [sl, #4]
  405724:	f021 0103 	bic.w	r1, r1, #3
  405728:	440b      	add	r3, r1
  40572a:	4423      	add	r3, r4
  40572c:	4293      	cmp	r3, r2
  40572e:	db25      	blt.n	40577c <_realloc_r+0x1a0>
  405730:	68c2      	ldr	r2, [r0, #12]
  405732:	6881      	ldr	r1, [r0, #8]
  405734:	4656      	mov	r6, sl
  405736:	60ca      	str	r2, [r1, #12]
  405738:	6091      	str	r1, [r2, #8]
  40573a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40573e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405742:	1f22      	subs	r2, r4, #4
  405744:	2a24      	cmp	r2, #36	; 0x24
  405746:	60c1      	str	r1, [r0, #12]
  405748:	6088      	str	r0, [r1, #8]
  40574a:	f200 8094 	bhi.w	405876 <_realloc_r+0x29a>
  40574e:	2a13      	cmp	r2, #19
  405750:	d96f      	bls.n	405832 <_realloc_r+0x256>
  405752:	6829      	ldr	r1, [r5, #0]
  405754:	f8ca 1008 	str.w	r1, [sl, #8]
  405758:	6869      	ldr	r1, [r5, #4]
  40575a:	f8ca 100c 	str.w	r1, [sl, #12]
  40575e:	2a1b      	cmp	r2, #27
  405760:	f200 80a2 	bhi.w	4058a8 <_realloc_r+0x2cc>
  405764:	3508      	adds	r5, #8
  405766:	f10a 0210 	add.w	r2, sl, #16
  40576a:	e063      	b.n	405834 <_realloc_r+0x258>
  40576c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405770:	eba9 0a03 	sub.w	sl, r9, r3
  405774:	f8da 1004 	ldr.w	r1, [sl, #4]
  405778:	f021 0103 	bic.w	r1, r1, #3
  40577c:	1863      	adds	r3, r4, r1
  40577e:	4293      	cmp	r3, r2
  405780:	f6ff af59 	blt.w	405636 <_realloc_r+0x5a>
  405784:	4656      	mov	r6, sl
  405786:	e7d8      	b.n	40573a <_realloc_r+0x15e>
  405788:	6841      	ldr	r1, [r0, #4]
  40578a:	f021 0b03 	bic.w	fp, r1, #3
  40578e:	44a3      	add	fp, r4
  405790:	f107 0010 	add.w	r0, r7, #16
  405794:	4583      	cmp	fp, r0
  405796:	da56      	bge.n	405846 <_realloc_r+0x26a>
  405798:	f01e 0f01 	tst.w	lr, #1
  40579c:	f47f af4b 	bne.w	405636 <_realloc_r+0x5a>
  4057a0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4057a4:	eba9 0a01 	sub.w	sl, r9, r1
  4057a8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4057ac:	f021 0103 	bic.w	r1, r1, #3
  4057b0:	448b      	add	fp, r1
  4057b2:	4558      	cmp	r0, fp
  4057b4:	dce2      	bgt.n	40577c <_realloc_r+0x1a0>
  4057b6:	4656      	mov	r6, sl
  4057b8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4057bc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4057c0:	1f22      	subs	r2, r4, #4
  4057c2:	2a24      	cmp	r2, #36	; 0x24
  4057c4:	60c1      	str	r1, [r0, #12]
  4057c6:	6088      	str	r0, [r1, #8]
  4057c8:	f200 808f 	bhi.w	4058ea <_realloc_r+0x30e>
  4057cc:	2a13      	cmp	r2, #19
  4057ce:	f240 808a 	bls.w	4058e6 <_realloc_r+0x30a>
  4057d2:	6829      	ldr	r1, [r5, #0]
  4057d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4057d8:	6869      	ldr	r1, [r5, #4]
  4057da:	f8ca 100c 	str.w	r1, [sl, #12]
  4057de:	2a1b      	cmp	r2, #27
  4057e0:	f200 808a 	bhi.w	4058f8 <_realloc_r+0x31c>
  4057e4:	3508      	adds	r5, #8
  4057e6:	f10a 0210 	add.w	r2, sl, #16
  4057ea:	6829      	ldr	r1, [r5, #0]
  4057ec:	6011      	str	r1, [r2, #0]
  4057ee:	6869      	ldr	r1, [r5, #4]
  4057f0:	6051      	str	r1, [r2, #4]
  4057f2:	68a9      	ldr	r1, [r5, #8]
  4057f4:	6091      	str	r1, [r2, #8]
  4057f6:	eb0a 0107 	add.w	r1, sl, r7
  4057fa:	ebab 0207 	sub.w	r2, fp, r7
  4057fe:	f042 0201 	orr.w	r2, r2, #1
  405802:	6099      	str	r1, [r3, #8]
  405804:	604a      	str	r2, [r1, #4]
  405806:	f8da 3004 	ldr.w	r3, [sl, #4]
  40580a:	f003 0301 	and.w	r3, r3, #1
  40580e:	431f      	orrs	r7, r3
  405810:	4640      	mov	r0, r8
  405812:	f8ca 7004 	str.w	r7, [sl, #4]
  405816:	f7ff f88b 	bl	404930 <__malloc_unlock>
  40581a:	e751      	b.n	4056c0 <_realloc_r+0xe4>
  40581c:	682b      	ldr	r3, [r5, #0]
  40581e:	6003      	str	r3, [r0, #0]
  405820:	686b      	ldr	r3, [r5, #4]
  405822:	6043      	str	r3, [r0, #4]
  405824:	2a1b      	cmp	r2, #27
  405826:	d82d      	bhi.n	405884 <_realloc_r+0x2a8>
  405828:	f100 0308 	add.w	r3, r0, #8
  40582c:	f105 0208 	add.w	r2, r5, #8
  405830:	e71b      	b.n	40566a <_realloc_r+0x8e>
  405832:	4632      	mov	r2, r6
  405834:	6829      	ldr	r1, [r5, #0]
  405836:	6011      	str	r1, [r2, #0]
  405838:	6869      	ldr	r1, [r5, #4]
  40583a:	6051      	str	r1, [r2, #4]
  40583c:	68a9      	ldr	r1, [r5, #8]
  40583e:	6091      	str	r1, [r2, #8]
  405840:	461c      	mov	r4, r3
  405842:	46d1      	mov	r9, sl
  405844:	e72a      	b.n	40569c <_realloc_r+0xc0>
  405846:	eb09 0107 	add.w	r1, r9, r7
  40584a:	ebab 0b07 	sub.w	fp, fp, r7
  40584e:	f04b 0201 	orr.w	r2, fp, #1
  405852:	6099      	str	r1, [r3, #8]
  405854:	604a      	str	r2, [r1, #4]
  405856:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40585a:	f003 0301 	and.w	r3, r3, #1
  40585e:	431f      	orrs	r7, r3
  405860:	4640      	mov	r0, r8
  405862:	f845 7c04 	str.w	r7, [r5, #-4]
  405866:	f7ff f863 	bl	404930 <__malloc_unlock>
  40586a:	462e      	mov	r6, r5
  40586c:	e728      	b.n	4056c0 <_realloc_r+0xe4>
  40586e:	4629      	mov	r1, r5
  405870:	f7ff fe50 	bl	405514 <memmove>
  405874:	e6ff      	b.n	405676 <_realloc_r+0x9a>
  405876:	4629      	mov	r1, r5
  405878:	4630      	mov	r0, r6
  40587a:	461c      	mov	r4, r3
  40587c:	46d1      	mov	r9, sl
  40587e:	f7ff fe49 	bl	405514 <memmove>
  405882:	e70b      	b.n	40569c <_realloc_r+0xc0>
  405884:	68ab      	ldr	r3, [r5, #8]
  405886:	6083      	str	r3, [r0, #8]
  405888:	68eb      	ldr	r3, [r5, #12]
  40588a:	60c3      	str	r3, [r0, #12]
  40588c:	2a24      	cmp	r2, #36	; 0x24
  40588e:	d017      	beq.n	4058c0 <_realloc_r+0x2e4>
  405890:	f100 0310 	add.w	r3, r0, #16
  405894:	f105 0210 	add.w	r2, r5, #16
  405898:	e6e7      	b.n	40566a <_realloc_r+0x8e>
  40589a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40589e:	f023 0303 	bic.w	r3, r3, #3
  4058a2:	441c      	add	r4, r3
  4058a4:	462e      	mov	r6, r5
  4058a6:	e6f9      	b.n	40569c <_realloc_r+0xc0>
  4058a8:	68a9      	ldr	r1, [r5, #8]
  4058aa:	f8ca 1010 	str.w	r1, [sl, #16]
  4058ae:	68e9      	ldr	r1, [r5, #12]
  4058b0:	f8ca 1014 	str.w	r1, [sl, #20]
  4058b4:	2a24      	cmp	r2, #36	; 0x24
  4058b6:	d00c      	beq.n	4058d2 <_realloc_r+0x2f6>
  4058b8:	3510      	adds	r5, #16
  4058ba:	f10a 0218 	add.w	r2, sl, #24
  4058be:	e7b9      	b.n	405834 <_realloc_r+0x258>
  4058c0:	692b      	ldr	r3, [r5, #16]
  4058c2:	6103      	str	r3, [r0, #16]
  4058c4:	696b      	ldr	r3, [r5, #20]
  4058c6:	6143      	str	r3, [r0, #20]
  4058c8:	f105 0218 	add.w	r2, r5, #24
  4058cc:	f100 0318 	add.w	r3, r0, #24
  4058d0:	e6cb      	b.n	40566a <_realloc_r+0x8e>
  4058d2:	692a      	ldr	r2, [r5, #16]
  4058d4:	f8ca 2018 	str.w	r2, [sl, #24]
  4058d8:	696a      	ldr	r2, [r5, #20]
  4058da:	f8ca 201c 	str.w	r2, [sl, #28]
  4058de:	3518      	adds	r5, #24
  4058e0:	f10a 0220 	add.w	r2, sl, #32
  4058e4:	e7a6      	b.n	405834 <_realloc_r+0x258>
  4058e6:	4632      	mov	r2, r6
  4058e8:	e77f      	b.n	4057ea <_realloc_r+0x20e>
  4058ea:	4629      	mov	r1, r5
  4058ec:	4630      	mov	r0, r6
  4058ee:	9301      	str	r3, [sp, #4]
  4058f0:	f7ff fe10 	bl	405514 <memmove>
  4058f4:	9b01      	ldr	r3, [sp, #4]
  4058f6:	e77e      	b.n	4057f6 <_realloc_r+0x21a>
  4058f8:	68a9      	ldr	r1, [r5, #8]
  4058fa:	f8ca 1010 	str.w	r1, [sl, #16]
  4058fe:	68e9      	ldr	r1, [r5, #12]
  405900:	f8ca 1014 	str.w	r1, [sl, #20]
  405904:	2a24      	cmp	r2, #36	; 0x24
  405906:	d003      	beq.n	405910 <_realloc_r+0x334>
  405908:	3510      	adds	r5, #16
  40590a:	f10a 0218 	add.w	r2, sl, #24
  40590e:	e76c      	b.n	4057ea <_realloc_r+0x20e>
  405910:	692a      	ldr	r2, [r5, #16]
  405912:	f8ca 2018 	str.w	r2, [sl, #24]
  405916:	696a      	ldr	r2, [r5, #20]
  405918:	f8ca 201c 	str.w	r2, [sl, #28]
  40591c:	3518      	adds	r5, #24
  40591e:	f10a 0220 	add.w	r2, sl, #32
  405922:	e762      	b.n	4057ea <_realloc_r+0x20e>
  405924:	20400454 	.word	0x20400454

00405928 <__ascii_wctomb>:
  405928:	b121      	cbz	r1, 405934 <__ascii_wctomb+0xc>
  40592a:	2aff      	cmp	r2, #255	; 0xff
  40592c:	d804      	bhi.n	405938 <__ascii_wctomb+0x10>
  40592e:	700a      	strb	r2, [r1, #0]
  405930:	2001      	movs	r0, #1
  405932:	4770      	bx	lr
  405934:	4608      	mov	r0, r1
  405936:	4770      	bx	lr
  405938:	238a      	movs	r3, #138	; 0x8a
  40593a:	6003      	str	r3, [r0, #0]
  40593c:	f04f 30ff 	mov.w	r0, #4294967295
  405940:	4770      	bx	lr
  405942:	bf00      	nop

00405944 <__gedf2>:
  405944:	f04f 3cff 	mov.w	ip, #4294967295
  405948:	e006      	b.n	405958 <__cmpdf2+0x4>
  40594a:	bf00      	nop

0040594c <__ledf2>:
  40594c:	f04f 0c01 	mov.w	ip, #1
  405950:	e002      	b.n	405958 <__cmpdf2+0x4>
  405952:	bf00      	nop

00405954 <__cmpdf2>:
  405954:	f04f 0c01 	mov.w	ip, #1
  405958:	f84d cd04 	str.w	ip, [sp, #-4]!
  40595c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405960:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405964:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405968:	bf18      	it	ne
  40596a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40596e:	d01b      	beq.n	4059a8 <__cmpdf2+0x54>
  405970:	b001      	add	sp, #4
  405972:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405976:	bf0c      	ite	eq
  405978:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  40597c:	ea91 0f03 	teqne	r1, r3
  405980:	bf02      	ittt	eq
  405982:	ea90 0f02 	teqeq	r0, r2
  405986:	2000      	moveq	r0, #0
  405988:	4770      	bxeq	lr
  40598a:	f110 0f00 	cmn.w	r0, #0
  40598e:	ea91 0f03 	teq	r1, r3
  405992:	bf58      	it	pl
  405994:	4299      	cmppl	r1, r3
  405996:	bf08      	it	eq
  405998:	4290      	cmpeq	r0, r2
  40599a:	bf2c      	ite	cs
  40599c:	17d8      	asrcs	r0, r3, #31
  40599e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4059a2:	f040 0001 	orr.w	r0, r0, #1
  4059a6:	4770      	bx	lr
  4059a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4059ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4059b0:	d102      	bne.n	4059b8 <__cmpdf2+0x64>
  4059b2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4059b6:	d107      	bne.n	4059c8 <__cmpdf2+0x74>
  4059b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4059bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4059c0:	d1d6      	bne.n	405970 <__cmpdf2+0x1c>
  4059c2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4059c6:	d0d3      	beq.n	405970 <__cmpdf2+0x1c>
  4059c8:	f85d 0b04 	ldr.w	r0, [sp], #4
  4059cc:	4770      	bx	lr
  4059ce:	bf00      	nop

004059d0 <__aeabi_cdrcmple>:
  4059d0:	4684      	mov	ip, r0
  4059d2:	4610      	mov	r0, r2
  4059d4:	4662      	mov	r2, ip
  4059d6:	468c      	mov	ip, r1
  4059d8:	4619      	mov	r1, r3
  4059da:	4663      	mov	r3, ip
  4059dc:	e000      	b.n	4059e0 <__aeabi_cdcmpeq>
  4059de:	bf00      	nop

004059e0 <__aeabi_cdcmpeq>:
  4059e0:	b501      	push	{r0, lr}
  4059e2:	f7ff ffb7 	bl	405954 <__cmpdf2>
  4059e6:	2800      	cmp	r0, #0
  4059e8:	bf48      	it	mi
  4059ea:	f110 0f00 	cmnmi.w	r0, #0
  4059ee:	bd01      	pop	{r0, pc}

004059f0 <__aeabi_dcmpeq>:
  4059f0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4059f4:	f7ff fff4 	bl	4059e0 <__aeabi_cdcmpeq>
  4059f8:	bf0c      	ite	eq
  4059fa:	2001      	moveq	r0, #1
  4059fc:	2000      	movne	r0, #0
  4059fe:	f85d fb08 	ldr.w	pc, [sp], #8
  405a02:	bf00      	nop

00405a04 <__aeabi_dcmplt>:
  405a04:	f84d ed08 	str.w	lr, [sp, #-8]!
  405a08:	f7ff ffea 	bl	4059e0 <__aeabi_cdcmpeq>
  405a0c:	bf34      	ite	cc
  405a0e:	2001      	movcc	r0, #1
  405a10:	2000      	movcs	r0, #0
  405a12:	f85d fb08 	ldr.w	pc, [sp], #8
  405a16:	bf00      	nop

00405a18 <__aeabi_dcmple>:
  405a18:	f84d ed08 	str.w	lr, [sp, #-8]!
  405a1c:	f7ff ffe0 	bl	4059e0 <__aeabi_cdcmpeq>
  405a20:	bf94      	ite	ls
  405a22:	2001      	movls	r0, #1
  405a24:	2000      	movhi	r0, #0
  405a26:	f85d fb08 	ldr.w	pc, [sp], #8
  405a2a:	bf00      	nop

00405a2c <__aeabi_dcmpge>:
  405a2c:	f84d ed08 	str.w	lr, [sp, #-8]!
  405a30:	f7ff ffce 	bl	4059d0 <__aeabi_cdrcmple>
  405a34:	bf94      	ite	ls
  405a36:	2001      	movls	r0, #1
  405a38:	2000      	movhi	r0, #0
  405a3a:	f85d fb08 	ldr.w	pc, [sp], #8
  405a3e:	bf00      	nop

00405a40 <__aeabi_dcmpgt>:
  405a40:	f84d ed08 	str.w	lr, [sp, #-8]!
  405a44:	f7ff ffc4 	bl	4059d0 <__aeabi_cdrcmple>
  405a48:	bf34      	ite	cc
  405a4a:	2001      	movcc	r0, #1
  405a4c:	2000      	movcs	r0, #0
  405a4e:	f85d fb08 	ldr.w	pc, [sp], #8
  405a52:	bf00      	nop

00405a54 <__aeabi_dcmpun>:
  405a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405a5c:	d102      	bne.n	405a64 <__aeabi_dcmpun+0x10>
  405a5e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405a62:	d10a      	bne.n	405a7a <__aeabi_dcmpun+0x26>
  405a64:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405a6c:	d102      	bne.n	405a74 <__aeabi_dcmpun+0x20>
  405a6e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405a72:	d102      	bne.n	405a7a <__aeabi_dcmpun+0x26>
  405a74:	f04f 0000 	mov.w	r0, #0
  405a78:	4770      	bx	lr
  405a7a:	f04f 0001 	mov.w	r0, #1
  405a7e:	4770      	bx	lr

00405a80 <__aeabi_d2iz>:
  405a80:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405a84:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405a88:	d215      	bcs.n	405ab6 <__aeabi_d2iz+0x36>
  405a8a:	d511      	bpl.n	405ab0 <__aeabi_d2iz+0x30>
  405a8c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405a90:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405a94:	d912      	bls.n	405abc <__aeabi_d2iz+0x3c>
  405a96:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405a9a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405a9e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405aa2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405aa6:	fa23 f002 	lsr.w	r0, r3, r2
  405aaa:	bf18      	it	ne
  405aac:	4240      	negne	r0, r0
  405aae:	4770      	bx	lr
  405ab0:	f04f 0000 	mov.w	r0, #0
  405ab4:	4770      	bx	lr
  405ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405aba:	d105      	bne.n	405ac8 <__aeabi_d2iz+0x48>
  405abc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405ac0:	bf08      	it	eq
  405ac2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405ac6:	4770      	bx	lr
  405ac8:	f04f 0000 	mov.w	r0, #0
  405acc:	4770      	bx	lr
  405ace:	bf00      	nop

00405ad0 <__aeabi_uldivmod>:
  405ad0:	b953      	cbnz	r3, 405ae8 <__aeabi_uldivmod+0x18>
  405ad2:	b94a      	cbnz	r2, 405ae8 <__aeabi_uldivmod+0x18>
  405ad4:	2900      	cmp	r1, #0
  405ad6:	bf08      	it	eq
  405ad8:	2800      	cmpeq	r0, #0
  405ada:	bf1c      	itt	ne
  405adc:	f04f 31ff 	movne.w	r1, #4294967295
  405ae0:	f04f 30ff 	movne.w	r0, #4294967295
  405ae4:	f000 b97a 	b.w	405ddc <__aeabi_idiv0>
  405ae8:	f1ad 0c08 	sub.w	ip, sp, #8
  405aec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405af0:	f000 f806 	bl	405b00 <__udivmoddi4>
  405af4:	f8dd e004 	ldr.w	lr, [sp, #4]
  405af8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405afc:	b004      	add	sp, #16
  405afe:	4770      	bx	lr

00405b00 <__udivmoddi4>:
  405b00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405b04:	468c      	mov	ip, r1
  405b06:	460d      	mov	r5, r1
  405b08:	4604      	mov	r4, r0
  405b0a:	9e08      	ldr	r6, [sp, #32]
  405b0c:	2b00      	cmp	r3, #0
  405b0e:	d151      	bne.n	405bb4 <__udivmoddi4+0xb4>
  405b10:	428a      	cmp	r2, r1
  405b12:	4617      	mov	r7, r2
  405b14:	d96d      	bls.n	405bf2 <__udivmoddi4+0xf2>
  405b16:	fab2 fe82 	clz	lr, r2
  405b1a:	f1be 0f00 	cmp.w	lr, #0
  405b1e:	d00b      	beq.n	405b38 <__udivmoddi4+0x38>
  405b20:	f1ce 0c20 	rsb	ip, lr, #32
  405b24:	fa01 f50e 	lsl.w	r5, r1, lr
  405b28:	fa20 fc0c 	lsr.w	ip, r0, ip
  405b2c:	fa02 f70e 	lsl.w	r7, r2, lr
  405b30:	ea4c 0c05 	orr.w	ip, ip, r5
  405b34:	fa00 f40e 	lsl.w	r4, r0, lr
  405b38:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405b3c:	0c25      	lsrs	r5, r4, #16
  405b3e:	fbbc f8fa 	udiv	r8, ip, sl
  405b42:	fa1f f987 	uxth.w	r9, r7
  405b46:	fb0a cc18 	mls	ip, sl, r8, ip
  405b4a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  405b4e:	fb08 f309 	mul.w	r3, r8, r9
  405b52:	42ab      	cmp	r3, r5
  405b54:	d90a      	bls.n	405b6c <__udivmoddi4+0x6c>
  405b56:	19ed      	adds	r5, r5, r7
  405b58:	f108 32ff 	add.w	r2, r8, #4294967295
  405b5c:	f080 8123 	bcs.w	405da6 <__udivmoddi4+0x2a6>
  405b60:	42ab      	cmp	r3, r5
  405b62:	f240 8120 	bls.w	405da6 <__udivmoddi4+0x2a6>
  405b66:	f1a8 0802 	sub.w	r8, r8, #2
  405b6a:	443d      	add	r5, r7
  405b6c:	1aed      	subs	r5, r5, r3
  405b6e:	b2a4      	uxth	r4, r4
  405b70:	fbb5 f0fa 	udiv	r0, r5, sl
  405b74:	fb0a 5510 	mls	r5, sl, r0, r5
  405b78:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  405b7c:	fb00 f909 	mul.w	r9, r0, r9
  405b80:	45a1      	cmp	r9, r4
  405b82:	d909      	bls.n	405b98 <__udivmoddi4+0x98>
  405b84:	19e4      	adds	r4, r4, r7
  405b86:	f100 33ff 	add.w	r3, r0, #4294967295
  405b8a:	f080 810a 	bcs.w	405da2 <__udivmoddi4+0x2a2>
  405b8e:	45a1      	cmp	r9, r4
  405b90:	f240 8107 	bls.w	405da2 <__udivmoddi4+0x2a2>
  405b94:	3802      	subs	r0, #2
  405b96:	443c      	add	r4, r7
  405b98:	eba4 0409 	sub.w	r4, r4, r9
  405b9c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405ba0:	2100      	movs	r1, #0
  405ba2:	2e00      	cmp	r6, #0
  405ba4:	d061      	beq.n	405c6a <__udivmoddi4+0x16a>
  405ba6:	fa24 f40e 	lsr.w	r4, r4, lr
  405baa:	2300      	movs	r3, #0
  405bac:	6034      	str	r4, [r6, #0]
  405bae:	6073      	str	r3, [r6, #4]
  405bb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405bb4:	428b      	cmp	r3, r1
  405bb6:	d907      	bls.n	405bc8 <__udivmoddi4+0xc8>
  405bb8:	2e00      	cmp	r6, #0
  405bba:	d054      	beq.n	405c66 <__udivmoddi4+0x166>
  405bbc:	2100      	movs	r1, #0
  405bbe:	e886 0021 	stmia.w	r6, {r0, r5}
  405bc2:	4608      	mov	r0, r1
  405bc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405bc8:	fab3 f183 	clz	r1, r3
  405bcc:	2900      	cmp	r1, #0
  405bce:	f040 808e 	bne.w	405cee <__udivmoddi4+0x1ee>
  405bd2:	42ab      	cmp	r3, r5
  405bd4:	d302      	bcc.n	405bdc <__udivmoddi4+0xdc>
  405bd6:	4282      	cmp	r2, r0
  405bd8:	f200 80fa 	bhi.w	405dd0 <__udivmoddi4+0x2d0>
  405bdc:	1a84      	subs	r4, r0, r2
  405bde:	eb65 0503 	sbc.w	r5, r5, r3
  405be2:	2001      	movs	r0, #1
  405be4:	46ac      	mov	ip, r5
  405be6:	2e00      	cmp	r6, #0
  405be8:	d03f      	beq.n	405c6a <__udivmoddi4+0x16a>
  405bea:	e886 1010 	stmia.w	r6, {r4, ip}
  405bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405bf2:	b912      	cbnz	r2, 405bfa <__udivmoddi4+0xfa>
  405bf4:	2701      	movs	r7, #1
  405bf6:	fbb7 f7f2 	udiv	r7, r7, r2
  405bfa:	fab7 fe87 	clz	lr, r7
  405bfe:	f1be 0f00 	cmp.w	lr, #0
  405c02:	d134      	bne.n	405c6e <__udivmoddi4+0x16e>
  405c04:	1beb      	subs	r3, r5, r7
  405c06:	0c3a      	lsrs	r2, r7, #16
  405c08:	fa1f fc87 	uxth.w	ip, r7
  405c0c:	2101      	movs	r1, #1
  405c0e:	fbb3 f8f2 	udiv	r8, r3, r2
  405c12:	0c25      	lsrs	r5, r4, #16
  405c14:	fb02 3318 	mls	r3, r2, r8, r3
  405c18:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405c1c:	fb0c f308 	mul.w	r3, ip, r8
  405c20:	42ab      	cmp	r3, r5
  405c22:	d907      	bls.n	405c34 <__udivmoddi4+0x134>
  405c24:	19ed      	adds	r5, r5, r7
  405c26:	f108 30ff 	add.w	r0, r8, #4294967295
  405c2a:	d202      	bcs.n	405c32 <__udivmoddi4+0x132>
  405c2c:	42ab      	cmp	r3, r5
  405c2e:	f200 80d1 	bhi.w	405dd4 <__udivmoddi4+0x2d4>
  405c32:	4680      	mov	r8, r0
  405c34:	1aed      	subs	r5, r5, r3
  405c36:	b2a3      	uxth	r3, r4
  405c38:	fbb5 f0f2 	udiv	r0, r5, r2
  405c3c:	fb02 5510 	mls	r5, r2, r0, r5
  405c40:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  405c44:	fb0c fc00 	mul.w	ip, ip, r0
  405c48:	45a4      	cmp	ip, r4
  405c4a:	d907      	bls.n	405c5c <__udivmoddi4+0x15c>
  405c4c:	19e4      	adds	r4, r4, r7
  405c4e:	f100 33ff 	add.w	r3, r0, #4294967295
  405c52:	d202      	bcs.n	405c5a <__udivmoddi4+0x15a>
  405c54:	45a4      	cmp	ip, r4
  405c56:	f200 80b8 	bhi.w	405dca <__udivmoddi4+0x2ca>
  405c5a:	4618      	mov	r0, r3
  405c5c:	eba4 040c 	sub.w	r4, r4, ip
  405c60:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405c64:	e79d      	b.n	405ba2 <__udivmoddi4+0xa2>
  405c66:	4631      	mov	r1, r6
  405c68:	4630      	mov	r0, r6
  405c6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405c6e:	f1ce 0420 	rsb	r4, lr, #32
  405c72:	fa05 f30e 	lsl.w	r3, r5, lr
  405c76:	fa07 f70e 	lsl.w	r7, r7, lr
  405c7a:	fa20 f804 	lsr.w	r8, r0, r4
  405c7e:	0c3a      	lsrs	r2, r7, #16
  405c80:	fa25 f404 	lsr.w	r4, r5, r4
  405c84:	ea48 0803 	orr.w	r8, r8, r3
  405c88:	fbb4 f1f2 	udiv	r1, r4, r2
  405c8c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  405c90:	fb02 4411 	mls	r4, r2, r1, r4
  405c94:	fa1f fc87 	uxth.w	ip, r7
  405c98:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  405c9c:	fb01 f30c 	mul.w	r3, r1, ip
  405ca0:	42ab      	cmp	r3, r5
  405ca2:	fa00 f40e 	lsl.w	r4, r0, lr
  405ca6:	d909      	bls.n	405cbc <__udivmoddi4+0x1bc>
  405ca8:	19ed      	adds	r5, r5, r7
  405caa:	f101 30ff 	add.w	r0, r1, #4294967295
  405cae:	f080 808a 	bcs.w	405dc6 <__udivmoddi4+0x2c6>
  405cb2:	42ab      	cmp	r3, r5
  405cb4:	f240 8087 	bls.w	405dc6 <__udivmoddi4+0x2c6>
  405cb8:	3902      	subs	r1, #2
  405cba:	443d      	add	r5, r7
  405cbc:	1aeb      	subs	r3, r5, r3
  405cbe:	fa1f f588 	uxth.w	r5, r8
  405cc2:	fbb3 f0f2 	udiv	r0, r3, r2
  405cc6:	fb02 3310 	mls	r3, r2, r0, r3
  405cca:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405cce:	fb00 f30c 	mul.w	r3, r0, ip
  405cd2:	42ab      	cmp	r3, r5
  405cd4:	d907      	bls.n	405ce6 <__udivmoddi4+0x1e6>
  405cd6:	19ed      	adds	r5, r5, r7
  405cd8:	f100 38ff 	add.w	r8, r0, #4294967295
  405cdc:	d26f      	bcs.n	405dbe <__udivmoddi4+0x2be>
  405cde:	42ab      	cmp	r3, r5
  405ce0:	d96d      	bls.n	405dbe <__udivmoddi4+0x2be>
  405ce2:	3802      	subs	r0, #2
  405ce4:	443d      	add	r5, r7
  405ce6:	1aeb      	subs	r3, r5, r3
  405ce8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  405cec:	e78f      	b.n	405c0e <__udivmoddi4+0x10e>
  405cee:	f1c1 0720 	rsb	r7, r1, #32
  405cf2:	fa22 f807 	lsr.w	r8, r2, r7
  405cf6:	408b      	lsls	r3, r1
  405cf8:	fa05 f401 	lsl.w	r4, r5, r1
  405cfc:	ea48 0303 	orr.w	r3, r8, r3
  405d00:	fa20 fe07 	lsr.w	lr, r0, r7
  405d04:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  405d08:	40fd      	lsrs	r5, r7
  405d0a:	ea4e 0e04 	orr.w	lr, lr, r4
  405d0e:	fbb5 f9fc 	udiv	r9, r5, ip
  405d12:	ea4f 441e 	mov.w	r4, lr, lsr #16
  405d16:	fb0c 5519 	mls	r5, ip, r9, r5
  405d1a:	fa1f f883 	uxth.w	r8, r3
  405d1e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  405d22:	fb09 f408 	mul.w	r4, r9, r8
  405d26:	42ac      	cmp	r4, r5
  405d28:	fa02 f201 	lsl.w	r2, r2, r1
  405d2c:	fa00 fa01 	lsl.w	sl, r0, r1
  405d30:	d908      	bls.n	405d44 <__udivmoddi4+0x244>
  405d32:	18ed      	adds	r5, r5, r3
  405d34:	f109 30ff 	add.w	r0, r9, #4294967295
  405d38:	d243      	bcs.n	405dc2 <__udivmoddi4+0x2c2>
  405d3a:	42ac      	cmp	r4, r5
  405d3c:	d941      	bls.n	405dc2 <__udivmoddi4+0x2c2>
  405d3e:	f1a9 0902 	sub.w	r9, r9, #2
  405d42:	441d      	add	r5, r3
  405d44:	1b2d      	subs	r5, r5, r4
  405d46:	fa1f fe8e 	uxth.w	lr, lr
  405d4a:	fbb5 f0fc 	udiv	r0, r5, ip
  405d4e:	fb0c 5510 	mls	r5, ip, r0, r5
  405d52:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  405d56:	fb00 f808 	mul.w	r8, r0, r8
  405d5a:	45a0      	cmp	r8, r4
  405d5c:	d907      	bls.n	405d6e <__udivmoddi4+0x26e>
  405d5e:	18e4      	adds	r4, r4, r3
  405d60:	f100 35ff 	add.w	r5, r0, #4294967295
  405d64:	d229      	bcs.n	405dba <__udivmoddi4+0x2ba>
  405d66:	45a0      	cmp	r8, r4
  405d68:	d927      	bls.n	405dba <__udivmoddi4+0x2ba>
  405d6a:	3802      	subs	r0, #2
  405d6c:	441c      	add	r4, r3
  405d6e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  405d72:	eba4 0408 	sub.w	r4, r4, r8
  405d76:	fba0 8902 	umull	r8, r9, r0, r2
  405d7a:	454c      	cmp	r4, r9
  405d7c:	46c6      	mov	lr, r8
  405d7e:	464d      	mov	r5, r9
  405d80:	d315      	bcc.n	405dae <__udivmoddi4+0x2ae>
  405d82:	d012      	beq.n	405daa <__udivmoddi4+0x2aa>
  405d84:	b156      	cbz	r6, 405d9c <__udivmoddi4+0x29c>
  405d86:	ebba 030e 	subs.w	r3, sl, lr
  405d8a:	eb64 0405 	sbc.w	r4, r4, r5
  405d8e:	fa04 f707 	lsl.w	r7, r4, r7
  405d92:	40cb      	lsrs	r3, r1
  405d94:	431f      	orrs	r7, r3
  405d96:	40cc      	lsrs	r4, r1
  405d98:	6037      	str	r7, [r6, #0]
  405d9a:	6074      	str	r4, [r6, #4]
  405d9c:	2100      	movs	r1, #0
  405d9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405da2:	4618      	mov	r0, r3
  405da4:	e6f8      	b.n	405b98 <__udivmoddi4+0x98>
  405da6:	4690      	mov	r8, r2
  405da8:	e6e0      	b.n	405b6c <__udivmoddi4+0x6c>
  405daa:	45c2      	cmp	sl, r8
  405dac:	d2ea      	bcs.n	405d84 <__udivmoddi4+0x284>
  405dae:	ebb8 0e02 	subs.w	lr, r8, r2
  405db2:	eb69 0503 	sbc.w	r5, r9, r3
  405db6:	3801      	subs	r0, #1
  405db8:	e7e4      	b.n	405d84 <__udivmoddi4+0x284>
  405dba:	4628      	mov	r0, r5
  405dbc:	e7d7      	b.n	405d6e <__udivmoddi4+0x26e>
  405dbe:	4640      	mov	r0, r8
  405dc0:	e791      	b.n	405ce6 <__udivmoddi4+0x1e6>
  405dc2:	4681      	mov	r9, r0
  405dc4:	e7be      	b.n	405d44 <__udivmoddi4+0x244>
  405dc6:	4601      	mov	r1, r0
  405dc8:	e778      	b.n	405cbc <__udivmoddi4+0x1bc>
  405dca:	3802      	subs	r0, #2
  405dcc:	443c      	add	r4, r7
  405dce:	e745      	b.n	405c5c <__udivmoddi4+0x15c>
  405dd0:	4608      	mov	r0, r1
  405dd2:	e708      	b.n	405be6 <__udivmoddi4+0xe6>
  405dd4:	f1a8 0802 	sub.w	r8, r8, #2
  405dd8:	443d      	add	r5, r7
  405dda:	e72b      	b.n	405c34 <__udivmoddi4+0x134>

00405ddc <__aeabi_idiv0>:
  405ddc:	4770      	bx	lr
  405dde:	bf00      	nop

00405de0 <sysfont_glyphs>:
	...
  405e00:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  405e10:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  405e20:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  405e38:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  405e48:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  405e58:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  405e70:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  405e80:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  405e90:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  405ea8:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  405ec4:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  405ed4:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  405ee4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  405ef4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  405f1c:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  405f44:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  405f54:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  405f78:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  405f88:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  405f98:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  405fa8:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  405fc0:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  405fd0:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  405fe0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  405ff8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  406008:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  406018:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406030:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406040:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406050:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406068:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406078:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406088:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4060a0:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4060b0:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4060c0:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4060dc:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4060ec:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4060fc:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406118:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406130:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406148:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406158:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406168:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406180:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406190:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4061a0:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4061b8:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4061c8:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4061d8:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4061f0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406200:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406210:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406228:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406238:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406248:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406260:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406270:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406280:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406298:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4062a8:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4062b8:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4062d0:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4062e0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4062f0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  406308:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406318:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406328:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406340:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406350:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406360:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406378:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406388:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406398:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4063b0:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4063c0:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  4063d0:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4063e8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4063f8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406408:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406420:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406430:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406440:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406458:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406468:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406478:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406490:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  4064a0:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  4064b0:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  4064d8:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  4064e8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406504:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  40651c:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  40652c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  40653c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406554:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406564:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406574:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  40658c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  40659c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  4065ac:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  4065bc:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  4065cc:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  4065dc:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  4065ec:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  4065fc:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  40660c:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  40661c:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406634:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406644:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406654:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406670:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  40668c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  4066a8:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  4066b8:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  4066c8:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  4066e0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  4066fc:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406718:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406734:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406750:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  40676c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406788:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  4067a4:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  4067b4:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  4067c4:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  4067d4:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  4067e4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  4067f4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406804:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406814:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406824:	0000 0000 6625 6320 006d 0000               ....%f cm...

00406830 <_global_impure_ptr>:
  406830:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406840:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406850:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406860:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406870:	296c 0000 0030 0000                         l)..0...

00406878 <blanks.7223>:
  406878:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406888 <zeroes.7224>:
  406888:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406898:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

004068a8 <__mprec_bigtens>:
  4068a8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4068b8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4068c8:	bf3c 7f73 4fdd 7515                         <.s..O.u

004068d0 <__mprec_tens>:
  4068d0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4068e0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4068f0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406900:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406910:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406920:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406930:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406940:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406950:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406960:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406970:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406980:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406990:	9db4 79d9 7843 44ea                         ...yCx.D

00406998 <p05.6055>:
  406998:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  4069a8:	4f50 4953 0058 0000 002e 0000               POSIX.......

004069b4 <_ctype_>:
  4069b4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4069c4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4069d4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4069e4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4069f4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406a04:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406a14:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406a24:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406a34:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406ab8 <_init>:
  406ab8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406aba:	bf00      	nop
  406abc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406abe:	bc08      	pop	{r3}
  406ac0:	469e      	mov	lr, r3
  406ac2:	4770      	bx	lr

00406ac4 <__init_array_start>:
  406ac4:	004031f5 	.word	0x004031f5

00406ac8 <__frame_dummy_init_array_entry>:
  406ac8:	00400165                                e.@.

00406acc <_fini>:
  406acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406ace:	bf00      	nop
  406ad0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406ad2:	bc08      	pop	{r3}
  406ad4:	469e      	mov	lr, r3
  406ad6:	4770      	bx	lr

00406ad8 <__fini_array_start>:
  406ad8:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 5de0 0040 0e0a 7d20               .....]@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0ca4 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5929 0040 54e9 0040 0000 0000 69b4 0040     )Y@..T@......i@.
20400954:	69b0 0040 6854 0040 6854 0040 6854 0040     .i@.Th@.Th@.Th@.
20400964:	6854 0040 6854 0040 6854 0040 6854 0040     Th@.Th@.Th@.Th@.
20400974:	6854 0040 6854 0040 ffff ffff ffff ffff     Th@.Th@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
